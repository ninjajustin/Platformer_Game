{"ast":null,"code":"import { Slot as e } from \"@radix-ui/react-slot\";\nimport * as r from \"react\";\nimport i from \"@babel/runtime/helpers/esm/extends\";\nexport const Primitive = [\"a\", \"button\", \"div\", \"h2\", \"h3\", \"img\", \"li\", \"nav\", \"p\", \"span\", \"svg\", \"ul\"].reduce((t, s) => ({\n  ...t,\n  [s]: /*#__PURE__*/r.forwardRef((t, n) => {\n    const {\n        asChild: a,\n        ...m\n      } = t,\n      d = a ? e : s;\n    return r.useEffect(() => {\n      window[Symbol.for(\"radix-ui\")] = !0;\n    }, []), t.as && console.error(o), /*#__PURE__*/r.createElement(d, i({}, m, {\n      ref: n\n    }));\n  })\n}), {});\nconst o = \"Warning: The `as` prop has been removed in favour of `asChild`. For details, see https://radix-ui.com/docs/primitives/overview/styling#changing-the-rendered-element\";\nexport const Root = Primitive;","map":null,"metadata":{},"sourceType":"module"}