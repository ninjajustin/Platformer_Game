{"ast":null,"code":"var _dec, _class;\nimport { AGraphicElement } from \"../graphicobject\";\nimport * as THREE from \"three\";\nimport { ASerializable } from \"../../base\";\nexport let ATriangleMeshGraphic = (_dec = ASerializable(\"ATriangleMeshGraphic\"), _dec(_class = class ATriangleMeshGraphic extends AGraphicElement {\n  constructor() {\n    super(...arguments);\n    this.verts = void 0;\n  }\n  get mesh() {\n    return this._element;\n  }\n\n  // static CreateMeshGraphic(geometry?:THREE.BufferGeometry|VertexArray<any>,\n  //                   material?:Color|THREE.Color|THREE.Material|THREE.Material[],\n  //                   ...args:any[]){\n  //     return new this(geometry, material, ...args);\n  // }\n\n  initGeometry(verts) {\n    if (!this._geometry) {\n      if (verts) {\n        this.verts = verts;\n      }\n      this.setGeometry(this.verts);\n    } else {\n      throw new Error(\"Tried to re-init geometry in ATriangleMeshElements\");\n    }\n  }\n  _createDefaultMaterial() {\n    return new THREE.MeshBasicMaterial({\n      color: 0x22aa22,\n      transparent: true,\n      side: THREE.DoubleSide,\n      opacity: 1.0\n    });\n  }\n  setVerts(verts) {\n    this.verts = verts;\n    // console.log({ indices: this.verts.indices });\n    this.setGeometry(this.verts);\n  }\n}) || _class);","map":{"version":3,"names":["AGraphicElement","THREE","ASerializable","ATriangleMeshGraphic","verts","mesh","_element","initGeometry","_geometry","setGeometry","Error","_createDefaultMaterial","MeshBasicMaterial","color","transparent","side","DoubleSide","opacity","setVerts"],"sources":["/Users/home/Desktop/College/Fall 2022/CS_4620/cs4620-final-project/src/anigraph/rendering/graphicelements/ATriangleMeshGraphic.ts"],"sourcesContent":["import { AGraphicElement } from \"../graphicobject\";\nimport * as THREE from \"three\";\nimport {VertexArray3D} from \"../../geometry\";\nimport { ASerializable } from \"../../base\";\n\n@ASerializable(\"ATriangleMeshGraphic\")\nexport class ATriangleMeshGraphic extends AGraphicElement {\n  protected verts!: VertexArray3D;\n\n  get mesh() {\n    return this._element;\n  }\n\n  // static CreateMeshGraphic(geometry?:THREE.BufferGeometry|VertexArray<any>,\n  //                   material?:Color|THREE.Color|THREE.Material|THREE.Material[],\n  //                   ...args:any[]){\n  //     return new this(geometry, material, ...args);\n  // }\n\n  initGeometry(verts?: VertexArray3D) {\n    if (!this._geometry) {\n      if (verts) {\n        this.verts = verts;\n      }\n      this.setGeometry(this.verts);\n    } else {\n      throw new Error(\"Tried to re-init geometry in ATriangleMeshElements\");\n    }\n  }\n\n  _createDefaultMaterial() {\n    return new THREE.MeshBasicMaterial({\n      color: 0x22aa22,\n      transparent: true,\n      side: THREE.DoubleSide,\n      opacity: 1.0,\n    });\n  }\n\n  setVerts(verts: VertexArray3D) {\n    this.verts = verts;\n    // console.log({ indices: this.verts.indices });\n    this.setGeometry(this.verts);\n  }\n}\n"],"mappings":";AAAA,SAASA,eAAe,QAAQ,kBAAkB;AAClD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,aAAa,QAAQ,YAAY;AAE1C,WACaC,oBAAoB,WADhCD,aAAa,CAAC,sBAAsB,CAAC,gBAAtC,MACaC,oBAAoB,SAASH,eAAe,CAAC;EAAA;IAAA;IAAA,KAC9CI,KAAK;EAAA;EAEf,IAAIC,IAAI,GAAG;IACT,OAAO,IAAI,CAACC,QAAQ;EACtB;;EAEA;EACA;EACA;EACA;EACA;;EAEAC,YAAY,CAACH,KAAqB,EAAE;IAClC,IAAI,CAAC,IAAI,CAACI,SAAS,EAAE;MACnB,IAAIJ,KAAK,EAAE;QACT,IAAI,CAACA,KAAK,GAAGA,KAAK;MACpB;MACA,IAAI,CAACK,WAAW,CAAC,IAAI,CAACL,KAAK,CAAC;IAC9B,CAAC,MAAM;MACL,MAAM,IAAIM,KAAK,CAAC,oDAAoD,CAAC;IACvE;EACF;EAEAC,sBAAsB,GAAG;IACvB,OAAO,IAAIV,KAAK,CAACW,iBAAiB,CAAC;MACjCC,KAAK,EAAE,QAAQ;MACfC,WAAW,EAAE,IAAI;MACjBC,IAAI,EAAEd,KAAK,CAACe,UAAU;MACtBC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;EAEAC,QAAQ,CAACd,KAAoB,EAAE;IAC7B,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB;IACA,IAAI,CAACK,WAAW,CAAC,IAAI,CAACL,KAAK,CAAC;EAC9B;AACF,CAAC"},"metadata":{},"sourceType":"module"}