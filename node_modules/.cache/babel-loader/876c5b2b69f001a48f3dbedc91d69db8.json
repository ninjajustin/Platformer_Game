{"ast":null,"code":"var _dec, _class, _class2;\nimport { folder } from \"leva\";\nimport { ASerializable, AObject } from \"../../base\";\nimport { Color } from \"../../math\";\nvar AMaterialEvents;\n(function (AMaterialEvents) {\n  AMaterialEvents[\"CHANGE\"] = \"MATERIAL_CHANGE\";\n  AMaterialEvents[\"UPDATE\"] = \"MATERIAL_UPDATE\";\n})(AMaterialEvents || (AMaterialEvents = {}));\nexport let AMaterial = (_dec = ASerializable(\"AMaterial\"), _dec(_class = (_class2 = class AMaterial extends AObject {\n  get threejs() {\n    return this._material;\n  }\n  get model() {\n    return this._model;\n  }\n  constructor() {\n    super();\n    this._model = void 0;\n    this._material = void 0;\n  }\n  init(model) {\n    this.setModel(model);\n  }\n  get usesVertexColors() {\n    return this.getValue('vertexColors');\n  }\n  set usesVertexColors(value) {\n    this.setValue('vertexColors', value);\n  }\n\n  //##################//--Values--\\\\##################\n  //<editor-fold desc=\"Values\">\n  getModelColor() {\n    let c = this.getValue('color');\n    if (c) {\n      return Color.FromThreeJS(c);\n    } else {\n      return Color.FromString(\"#77bb77\");\n    }\n  }\n  setModelColor(v) {\n    if (v instanceof Color) {\n      this.setValue('color', v.asThreeJS());\n    } else {\n      this.setValue('color', v);\n    }\n  }\n  setValue(name, value) {\n    let vals = {};\n    vals[name] = value;\n    this.setValues(vals);\n  }\n  setValues(values) {\n    this.threejs.setValues(values);\n    this.signalEvent(AMaterial.Events.UPDATE, values);\n  }\n  getValue(name) {\n    // @ts-ignore\n    return this.threejs[name];\n  }\n  setBlendingMode(mode) {\n    this.threejs.blending = mode;\n  }\n\n  //</editor-fold>\n  //##################\\\\--Values--//##################\n\n  setModel(model) {\n    this._model = model;\n    this._material = model._CreateTHREEJS();\n    // this.threejs.setValues(this._model.defaults);\n  }\n\n  getMaterialGUIParams() {\n    const self = this;\n    return {\n      MaterialProps: folder(self.model.getMaterialGUIParams(self), {\n        collapsed: false\n      })\n    };\n  }\n  dispose() {\n    this._material.dispose();\n  }\n  release() {\n    this.dispose();\n    super.release();\n  }\n}, _class2.Events = AMaterialEvents, _class2)) || _class);","map":{"version":3,"names":["folder","ASerializable","AObject","Color","AMaterialEvents","AMaterial","threejs","_material","model","_model","constructor","init","setModel","usesVertexColors","getValue","value","setValue","getModelColor","c","FromThreeJS","FromString","setModelColor","v","asThreeJS","name","vals","setValues","values","signalEvent","Events","UPDATE","setBlendingMode","mode","blending","_CreateTHREEJS","getMaterialGUIParams","self","MaterialProps","collapsed","dispose","release"],"sources":["/Users/home/Desktop/cs4620-final-project/src/anigraph/rendering/material/AMaterial.ts"],"sourcesContent":["import {folder} from \"leva\";\nimport {ASerializable, AObject} from \"../../base\";\nimport {MaterialParameters} from \"three/src/materials/Material\";\nimport {AMaterialModel} from \"./AMaterialModel\";\nimport {Color} from \"../../math\";\n\n\nenum AMaterialEvents{\n    CHANGE='MATERIAL_CHANGE',\n    UPDATE='MATERIAL_UPDATE'\n}\n\n@ASerializable(\"AMaterial\")\nexport class AMaterial extends AObject{\n    protected _model!:AMaterialModel;\n    public _material!:THREE.Material;\n    static Events = AMaterialEvents;\n    get threejs(){return this._material;}\n\n    get model(){\n        return this._model;\n    }\n\n    constructor(...args:any[]) {\n        super();\n    }\n\n    init(model:AMaterialModel){\n        this.setModel(model);\n    }\n\n    get usesVertexColors(){return this.getValue('vertexColors');}\n    set usesVertexColors(value:boolean|undefined){this.setValue('vertexColors',value);}\n\n    //##################//--Values--\\\\##################\n    //<editor-fold desc=\"Values\">\n    getModelColor(){\n        let c = this.getValue('color');\n        if(c){\n            return Color.FromThreeJS(c);\n        }else{\n            return Color.FromString(\"#77bb77\");\n        }\n    }\n    setModelColor(v:Color|THREE.Color){\n        if(v instanceof  Color){\n            this.setValue('color', v.asThreeJS());\n        }else{\n            this.setValue('color', v);\n        }\n    }\n    setValue(name:string, value:any){\n        let vals:{[name:string]:any}={};\n        vals[name]=value;\n        this.setValues(vals);\n    }\n    setValues(values:MaterialParameters){\n        this.threejs.setValues(values);\n        this.signalEvent(AMaterial.Events.UPDATE, values);\n    }\n    getValue(name:string):any{\n        // @ts-ignore\n        return this.threejs[name];\n    }\n\n    setBlendingMode(mode:THREE.Blending){\n        this.threejs.blending=mode;\n    }\n\n    //</editor-fold>\n    //##################\\\\--Values--//##################\n\n    setModel(model:AMaterialModel){\n        this._model = model;\n        this._material = model._CreateTHREEJS();\n        // this.threejs.setValues(this._model.defaults);\n    }\n\n    getMaterialGUIParams() {\n        const self = this;\n        return {\n            MaterialProps: folder(\n                self.model.getMaterialGUIParams(self),\n                { collapsed: false }\n            ),\n        }\n    }\n\n    dispose(){\n        this._material.dispose();\n    }\n\n    release() {\n        this.dispose();\n        super.release();\n    }\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}