{"ast":null,"code":"import { v4 as uuidv4 } from \"uuid\";\nimport { ACallbackSwitch } from \"./ACallbackSwitch\";\nexport class AEventCallbackSwitch extends ACallbackSwitch {\n  constructor(owner, handle, callback) {\n    super(handle);\n    this.callback = void 0;\n    this.owner = void 0;\n    this.callback = callback;\n    this.owner = owner;\n  }\n  activate() {\n    this.owner.callbacks[this.handle] = this;\n    this.active = true;\n  }\n  deactivate() {\n    this.owner.removeCallback(this.handle);\n    this.active = false; // the this variable here will refer the callbackSwitch\n  }\n}\n\nexport class AEventCallbackDict {\n  /**\n   * Event callback dictionary. When you add a callback, it returns a switch.\n   * If you call switch.activate() then the callback is added to the Dict.\n   * if you call switch.deactivate() then the callback is removed.\n   * deactivating it removes the record of it from the dictionary, so there is no pointer left\n   * behind in the dictionary.\n   *\n   * @param args\n   */\n  constructor(name, callbacks) {\n    this.name = void 0;\n    this.callbacks = {};\n    this.name = name ? name : \"\";\n    if (callbacks !== undefined) {\n      this.callbacks = callbacks;\n    }\n  }\n\n  /**\n   * Adds the callback and returns a callback switch, which can call activate() and deactivate() to enable/disable the callback.\n   * @param callback\n   * @returns Callback switch {{activate: activate, active: boolean, handle: string, deactivate: deactivate}}\n   */\n  addCallback(callback, handle) {\n    if (handle === undefined) {\n      handle = uuidv4();\n    }\n    const callbackSwitch = new AEventCallbackSwitch(this, handle, callback);\n    callbackSwitch.activate();\n    // // this.callbacks[handle] = callback;\n    // const event = this;\n    // const callbackSwitch = {\n    //     callback:callback,\n    //     handle: handle,\n    //     active: false,\n    //     deactivate: function(){\n    //         event.removeCallback((handle as string));\n    //         this.active = false; // the this variable here will refer the callbackSwitch\n    //     },\n    //     owner:event,\n    //     activate: function(){\n    //         event.callbacks[(handle as string)] = this;\n    //         this.active = true;\n    //     },\n    // }\n    // callbackSwitch.activate();\n    return callbackSwitch;\n  }\n  removeCallback(handle) {\n    delete this.callbacks[handle];\n  }\n  getCallbackList() {\n    const callbacks = this.callbacks;\n    return Object.keys(callbacks).map(function (k) {\n      return callbacks[k];\n    });\n  }\n  signalEvent() {\n    const callbackList = this.getCallbackList();\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    for (let c of callbackList) {\n      if (Array.isArray(c['callback'])) {\n        for (let cb of c['callback']) {\n          cb.call(null, ...args);\n        }\n      } else {\n        c[\"callback\"].call(null, ...args);\n      }\n    }\n  }\n}","map":{"version":3,"names":["v4","uuidv4","ACallbackSwitch","AEventCallbackSwitch","constructor","owner","handle","callback","activate","callbacks","active","deactivate","removeCallback","AEventCallbackDict","name","undefined","addCallback","callbackSwitch","getCallbackList","Object","keys","map","k","signalEvent","callbackList","args","c","Array","isArray","cb","call"],"sources":["/Users/home/Desktop/cs4620-final-project/src/anigraph/base/aevents/AEventCallbackDict.ts"],"sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport { ACallbackSwitch } from \"./ACallbackSwitch\";\n\nexport class AEventCallbackSwitch extends ACallbackSwitch {\n  public callback: ((...args: any[]) => any) | ((...args: any[]) => any)[];\n  public owner: AEventCallbackDict;\n  constructor(\n    owner: AEventCallbackDict,\n    handle: string,\n    callback: ((...args: any[]) => any) | ((...args: any[]) => any)[]\n  ) {\n    super(handle);\n    this.callback = callback;\n    this.owner = owner;\n  }\n  activate() {\n    this.owner.callbacks[this.handle] = this;\n    this.active = true;\n  }\n  deactivate() {\n    this.owner.removeCallback(this.handle);\n    this.active = false; // the this variable here will refer the callbackSwitch\n  }\n}\n\ntype CallbacksDictType = { [handle: string]: AEventCallbackSwitch };\n\nexport class AEventCallbackDict {\n  public name: string;\n  public callbacks: CallbacksDictType = {};\n  /**\n   * Event callback dictionary. When you add a callback, it returns a switch.\n   * If you call switch.activate() then the callback is added to the Dict.\n   * if you call switch.deactivate() then the callback is removed.\n   * deactivating it removes the record of it from the dictionary, so there is no pointer left\n   * behind in the dictionary.\n   *\n   * @param args\n   */\n  constructor(name?: string, callbacks?: CallbacksDictType) {\n    this.name = name ? name : \"\";\n    if (callbacks !== undefined) {\n      this.callbacks = callbacks;\n    }\n  }\n\n  /**\n   * Adds the callback and returns a callback switch, which can call activate() and deactivate() to enable/disable the callback.\n   * @param callback\n   * @returns Callback switch {{activate: activate, active: boolean, handle: string, deactivate: deactivate}}\n   */\n  addCallback(\n    callback: ((...args: any[]) => void)[] | ((...args: any[]) => void),\n    handle?: string\n  ) {\n    if (handle === undefined) {\n            handle = (uuidv4() as string);\n    }\n    const callbackSwitch = new AEventCallbackSwitch(this, handle, callback);\n    callbackSwitch.activate();\n    // // this.callbacks[handle] = callback;\n    // const event = this;\n    // const callbackSwitch = {\n    //     callback:callback,\n    //     handle: handle,\n    //     active: false,\n    //     deactivate: function(){\n    //         event.removeCallback((handle as string));\n    //         this.active = false; // the this variable here will refer the callbackSwitch\n    //     },\n    //     owner:event,\n    //     activate: function(){\n    //         event.callbacks[(handle as string)] = this;\n    //         this.active = true;\n    //     },\n    // }\n    // callbackSwitch.activate();\n    return callbackSwitch;\n  }\n\n  removeCallback(handle: string) {\n    delete this.callbacks[handle];\n  }\n\n  getCallbackList() {\n    const callbacks = this.callbacks;\n        return Object.keys(callbacks).map(function(k){return callbacks[k]});\n  }\n\n  signalEvent(...args: any[]) {\n    const callbackList = this.getCallbackList();\n    for (let c of callbackList) {\n      if (Array.isArray(c['callback'])) {\n        for (let cb of c['callback']) {\n          cb.call(null, ...args);\n        }\n      } else {\n        c[\"callback\"].call(null, ...args);\n      }\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,eAAe,QAAQ,mBAAmB;AAEnD,OAAO,MAAMC,oBAAoB,SAASD,eAAe,CAAC;EAGxDE,WAAW,CACTC,KAAyB,EACzBC,MAAc,EACdC,QAAiE,EACjE;IACA,KAAK,CAACD,MAAM,CAAC;IAAC,KAPTC,QAAQ;IAAA,KACRF,KAAK;IAOV,IAAI,CAACE,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACF,KAAK,GAAGA,KAAK;EACpB;EACAG,QAAQ,GAAG;IACT,IAAI,CAACH,KAAK,CAACI,SAAS,CAAC,IAAI,CAACH,MAAM,CAAC,GAAG,IAAI;IACxC,IAAI,CAACI,MAAM,GAAG,IAAI;EACpB;EACAC,UAAU,GAAG;IACX,IAAI,CAACN,KAAK,CAACO,cAAc,CAAC,IAAI,CAACN,MAAM,CAAC;IACtC,IAAI,CAACI,MAAM,GAAG,KAAK,CAAC,CAAC;EACvB;AACF;;AAIA,OAAO,MAAMG,kBAAkB,CAAC;EAG9B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACET,WAAW,CAACU,IAAa,EAAEL,SAA6B,EAAE;IAAA,KAXnDK,IAAI;IAAA,KACJL,SAAS,GAAsB,CAAC,CAAC;IAWtC,IAAI,CAACK,IAAI,GAAGA,IAAI,GAAGA,IAAI,GAAG,EAAE;IAC5B,IAAIL,SAAS,KAAKM,SAAS,EAAE;MAC3B,IAAI,CAACN,SAAS,GAAGA,SAAS;IAC5B;EACF;;EAEA;AACF;AACA;AACA;AACA;EACEO,WAAW,CACTT,QAAmE,EACnED,MAAe,EACf;IACA,IAAIA,MAAM,KAAKS,SAAS,EAAE;MAClBT,MAAM,GAAIL,MAAM,EAAa;IACrC;IACA,MAAMgB,cAAc,GAAG,IAAId,oBAAoB,CAAC,IAAI,EAAEG,MAAM,EAAEC,QAAQ,CAAC;IACvEU,cAAc,CAACT,QAAQ,EAAE;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAOS,cAAc;EACvB;EAEAL,cAAc,CAACN,MAAc,EAAE;IAC7B,OAAO,IAAI,CAACG,SAAS,CAACH,MAAM,CAAC;EAC/B;EAEAY,eAAe,GAAG;IAChB,MAAMT,SAAS,GAAG,IAAI,CAACA,SAAS;IAC5B,OAAOU,MAAM,CAACC,IAAI,CAACX,SAAS,CAAC,CAACY,GAAG,CAAC,UAASC,CAAC,EAAC;MAAC,OAAOb,SAAS,CAACa,CAAC,CAAC;IAAA,CAAC,CAAC;EACzE;EAEAC,WAAW,GAAiB;IAC1B,MAAMC,YAAY,GAAG,IAAI,CAACN,eAAe,EAAE;IAAC,kCAD/BO,IAAI;MAAJA,IAAI;IAAA;IAEjB,KAAK,IAAIC,CAAC,IAAIF,YAAY,EAAE;MAC1B,IAAIG,KAAK,CAACC,OAAO,CAACF,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE;QAChC,KAAK,IAAIG,EAAE,IAAIH,CAAC,CAAC,UAAU,CAAC,EAAE;UAC5BG,EAAE,CAACC,IAAI,CAAC,IAAI,EAAE,GAAGL,IAAI,CAAC;QACxB;MACF,CAAC,MAAM;QACLC,CAAC,CAAC,UAAU,CAAC,CAACI,IAAI,CAAC,IAAI,EAAE,GAAGL,IAAI,CAAC;MACnC;IACF;EACF;AACF"},"metadata":{},"sourceType":"module"}