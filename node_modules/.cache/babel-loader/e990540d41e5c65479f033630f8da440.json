{"ast":null,"code":"import { Mat4 } from \"../../math\";\nimport { ANodeModel } from \"./ANodeModel\";\nexport class ANodeModelSubclass extends ANodeModel {\n  get transform() {\n    return this._transform;\n  }\n  set transform(t) {\n    this.setTransform(t);\n  }\n  get verts() {\n    return this._geometry.verts;\n  }\n  _setVerts(verts) {\n    this._geometry.verts = verts;\n  }\n  setVerts(verts) {\n    this._setVerts(verts);\n    this.signalGeometryUpdate();\n  }\n  constructor(verts, transform) {\n    super();\n    if (transform !== undefined) {\n      this.transform = transform;\n    } else {\n      //setTransform can always take a TransformationInterface, so we can use it here regardless of TransformType\n      this.setTransform(new Mat4());\n    }\n    if (verts !== undefined) {\n      this._setVerts(verts);\n    }\n  }\n\n  /**\n   * Returns the transform from object coordinates (the coordinate system where this.verts is\n   * defined) to world coordinates\n   * @returns {TransformType}\n   */\n  getWorldTransform() {\n    let parent = this.parent;\n    if (parent && parent instanceof ANodeModelSubclass) {\n      return parent.getWorldTransform().getMat4().times(this.transform.getMat4());\n    } else {\n      return this.transform;\n    }\n  }\n}","map":{"version":3,"names":["Mat4","ANodeModel","ANodeModelSubclass","transform","_transform","t","setTransform","verts","_geometry","_setVerts","setVerts","signalGeometryUpdate","constructor","undefined","getWorldTransform","parent","getMat4","times"],"sources":["/Users/home/Desktop/College/Fall 2022/CS_4620/cs4620-final-project/src/anigraph/scene/nodeModel/NodeModelSubclass.ts"],"sourcesContent":["import {Mat4, TransformationInterface} from \"../../math\";\nimport {VertexArray} from \"../../geometry\";\nimport {ANodeModel} from \"./ANodeModel\";\n\nexport abstract class ANodeModelSubclass<TransformType extends TransformationInterface, VertexArrayType extends VertexArray<any>> extends ANodeModel{\n    get transform():TransformType{\n        return this._transform as TransformType;\n    };\n    abstract setTransform(transform:TransformationInterface):void;\n\n    protected set transform(t:TransformType){\n        this.setTransform(t);\n    }\n\n    get verts(): VertexArrayType{\n        return this._geometry.verts as VertexArrayType;\n    }\n\n    _setVerts(verts: VertexArrayType) {\n        this._geometry.verts=verts;\n    }\n    setVerts(verts: VertexArrayType) {\n        this._setVerts(verts);\n        this.signalGeometryUpdate();\n    }\n\n    constructor(verts?:VertexArrayType, transform?:TransformType) {\n        super();\n        if(transform !== undefined){\n            this.transform = transform;\n        }else{\n            //setTransform can always take a TransformationInterface, so we can use it here regardless of TransformType\n            this.setTransform(new Mat4());\n        }\n        if(verts !== undefined){\n            this._setVerts(verts);\n        }\n    }\n\n    /**\n     * Returns the transform from object coordinates (the coordinate system where this.verts is\n     * defined) to world coordinates\n     * @returns {TransformType}\n     */\n    getWorldTransform():TransformType{\n        let parent = this.parent;\n        if(parent && parent instanceof ANodeModelSubclass){\n            return parent.getWorldTransform().getMat4().times(this.transform.getMat4());\n        }else{\n            return this.transform;\n        }\n    }\n\n}\n"],"mappings":"AAAA,SAAQA,IAAI,QAAgC,YAAY;AAExD,SAAQC,UAAU,QAAO,cAAc;AAEvC,OAAO,MAAeC,kBAAkB,SAAkGD,UAAU;EAChJ,IAAIE,SAAS,GAAgB;IACzB,OAAO,IAAI,CAACC,UAAU;EAC1B;EAGA,IAAcD,SAAS,CAACE,CAAe,EAAC;IACpC,IAAI,CAACC,YAAY,CAACD,CAAC,CAAC;EACxB;EAEA,IAAIE,KAAK,GAAmB;IACxB,OAAO,IAAI,CAACC,SAAS,CAACD,KAAK;EAC/B;EAEAE,SAAS,CAACF,KAAsB,EAAE;IAC9B,IAAI,CAACC,SAAS,CAACD,KAAK,GAACA,KAAK;EAC9B;EACAG,QAAQ,CAACH,KAAsB,EAAE;IAC7B,IAAI,CAACE,SAAS,CAACF,KAAK,CAAC;IACrB,IAAI,CAACI,oBAAoB,EAAE;EAC/B;EAEAC,WAAW,CAACL,KAAsB,EAAEJ,SAAwB,EAAE;IAC1D,KAAK,EAAE;IACP,IAAGA,SAAS,KAAKU,SAAS,EAAC;MACvB,IAAI,CAACV,SAAS,GAAGA,SAAS;IAC9B,CAAC,MAAI;MACD;MACA,IAAI,CAACG,YAAY,CAAC,IAAIN,IAAI,EAAE,CAAC;IACjC;IACA,IAAGO,KAAK,KAAKM,SAAS,EAAC;MACnB,IAAI,CAACJ,SAAS,CAACF,KAAK,CAAC;IACzB;EACJ;;EAEA;AACJ;AACA;AACA;AACA;EACIO,iBAAiB,GAAgB;IAC7B,IAAIC,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAGA,MAAM,IAAIA,MAAM,YAAYb,kBAAkB,EAAC;MAC9C,OAAOa,MAAM,CAACD,iBAAiB,EAAE,CAACE,OAAO,EAAE,CAACC,KAAK,CAAC,IAAI,CAACd,SAAS,CAACa,OAAO,EAAE,CAAC;IAC/E,CAAC,MAAI;MACD,OAAO,IAAI,CAACb,SAAS;IACzB;EACJ;AAEJ"},"metadata":{},"sourceType":"module"}