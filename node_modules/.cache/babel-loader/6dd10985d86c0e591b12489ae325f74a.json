{"ast":null,"code":"export const SIDE_OPTIONS = [\"top\", \"right\", \"bottom\", \"left\"];\nexport const ALIGN_OPTIONS = [\"start\", \"center\", \"end\"];\nexport function getPlacementData(_ref) {\n  let {\n    anchorRect: p,\n    popperSize: c,\n    arrowSize: f,\n    arrowOffset: l = 0,\n    side: d,\n    sideOffset: h = 0,\n    align: x,\n    alignOffset: g = 0,\n    shouldAvoidCollisions: u = !0,\n    collisionBoundariesRect: w,\n    collisionTolerance: m = 0\n  } = _ref;\n  if (!p || !c || !w) return {\n    popperStyles: o,\n    arrowStyles: n\n  };\n  const y = function (e, r) {\n      let o = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      let n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      let i = arguments.length > 4 ? arguments[4] : undefined;\n      const p = i ? i.height : 0,\n        a = t(r, e, \"x\"),\n        s = t(r, e, \"y\"),\n        c = s.before - o - p,\n        f = s.after + o + p,\n        l = a.before - o - p,\n        d = a.after + o + p;\n      return {\n        top: {\n          start: {\n            x: a.start + n,\n            y: c\n          },\n          center: {\n            x: a.center,\n            y: c\n          },\n          end: {\n            x: a.end - n,\n            y: c\n          }\n        },\n        right: {\n          start: {\n            x: d,\n            y: s.start + n\n          },\n          center: {\n            x: d,\n            y: s.center\n          },\n          end: {\n            x: d,\n            y: s.end - n\n          }\n        },\n        bottom: {\n          start: {\n            x: a.start + n,\n            y: f\n          },\n          center: {\n            x: a.center,\n            y: f\n          },\n          end: {\n            x: a.end - n,\n            y: f\n          }\n        },\n        left: {\n          start: {\n            x: l,\n            y: s.start + n\n          },\n          center: {\n            x: l,\n            y: s.center\n          },\n          end: {\n            x: l,\n            y: s.end - n\n          }\n        }\n      };\n    }(c, p, h, g, f),\n    b = y[d][x];\n  if (!1 === u) {\n    const t = e(b);\n    let o = n;\n    f && (o = i({\n      popperSize: c,\n      arrowSize: f,\n      arrowOffset: l,\n      side: d,\n      align: x\n    }));\n    return {\n      popperStyles: {\n        ...t,\n        \"--radix-popper-transform-origin\": r(c, d, x, l, f)\n      },\n      arrowStyles: o,\n      placedSide: d,\n      placedAlign: x\n    };\n  }\n  const S = DOMRect.fromRect({\n      ...c,\n      ...b\n    }),\n    $ = (O = w, z = m, DOMRect.fromRect({\n      width: O.width - 2 * z,\n      height: O.height - 2 * z,\n      x: O.left + z,\n      y: O.top + z\n    }));\n  var O, z;\n  const R = s(S, $),\n    M = y[a(d)][x],\n    D = function (t, e, r) {\n      const o = a(t);\n      return e[t] && !r[o] ? o : t;\n    }(d, R, s(DOMRect.fromRect({\n      ...c,\n      ...M\n    }), $)),\n    A = function (t, e, r, o, n) {\n      const i = \"top\" === r || \"bottom\" === r,\n        p = i ? \"left\" : \"top\",\n        a = i ? \"right\" : \"bottom\",\n        s = i ? \"width\" : \"height\",\n        c = e[s] > t[s];\n      if ((\"start\" === o || \"center\" === o) && (n[p] && c || n[a] && !c)) return \"end\";\n      if ((\"end\" === o || \"center\" === o) && (n[a] && c || n[p] && !c)) return \"start\";\n      return o;\n    }(c, p, d, x, R),\n    I = e(y[D][A]);\n  let C = n;\n  f && (C = i({\n    popperSize: c,\n    arrowSize: f,\n    arrowOffset: l,\n    side: D,\n    align: A\n  }));\n  return {\n    popperStyles: {\n      ...I,\n      \"--radix-popper-transform-origin\": r(c, D, A, l, f)\n    },\n    arrowStyles: C,\n    placedSide: D,\n    placedAlign: A\n  };\n}\nfunction t(t, e, r) {\n  const o = t[\"x\" === r ? \"left\" : \"top\"],\n    n = \"x\" === r ? \"width\" : \"height\",\n    i = t[n],\n    p = e[n];\n  return {\n    before: o - p,\n    start: o,\n    center: o + (i - p) / 2,\n    end: o + i - p,\n    after: o + i\n  };\n}\nfunction e(t) {\n  return {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    minWidth: \"max-content\",\n    willChange: \"transform\",\n    transform: `translate3d(${Math.round(t.x + window.scrollX)}px, ${Math.round(t.y + window.scrollY)}px, 0)`\n  };\n}\nfunction r(t, e, r, o, n) {\n  const i = \"top\" === e || \"bottom\" === e,\n    p = n ? n.width : 0,\n    a = n ? n.height : 0,\n    s = p / 2 + o;\n  let c = \"\",\n    f = \"\";\n  return i ? (c = {\n    start: `${s}px`,\n    center: \"center\",\n    end: t.width - s + \"px\"\n  }[r], f = \"top\" === e ? `${t.height + a}px` : -a + \"px\") : (c = \"left\" === e ? `${t.width + a}px` : -a + \"px\", f = {\n    start: `${s}px`,\n    center: \"center\",\n    end: t.height - s + \"px\"\n  }[r]), `${c} ${f}`;\n}\nconst o = {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    opacity: 0,\n    transform: \"translate3d(0, -200%, 0)\"\n  },\n  n = {\n    position: \"absolute\",\n    opacity: 0\n  };\nfunction i(_ref2) {\n  let {\n    popperSize: t,\n    arrowSize: e,\n    arrowOffset: r,\n    side: o,\n    align: n\n  } = _ref2;\n  const i = (t.width - e.width) / 2,\n    a = (t.height - e.width) / 2,\n    s = {\n      top: 0,\n      right: 90,\n      bottom: 180,\n      left: -90\n    }[o],\n    c = Math.max(e.width, e.height),\n    f = {\n      width: `${c}px`,\n      height: `${c}px`,\n      transform: `rotate(${s}deg)`,\n      willChange: \"transform\",\n      position: \"absolute\",\n      [o]: \"100%\",\n      direction: p(o, n)\n    };\n  return \"top\" !== o && \"bottom\" !== o || (\"start\" === n && (f.left = `${r}px`), \"center\" === n && (f.left = `${i}px`), \"end\" === n && (f.right = `${r}px`)), \"left\" !== o && \"right\" !== o || (\"start\" === n && (f.top = `${r}px`), \"center\" === n && (f.top = `${a}px`), \"end\" === n && (f.bottom = `${r}px`)), f;\n}\nfunction p(t, e) {\n  return (\"top\" !== t && \"right\" !== t || \"end\" !== e) && (\"bottom\" !== t && \"left\" !== t || \"end\" === e) ? \"ltr\" : \"rtl\";\n}\nfunction a(t) {\n  return {\n    top: \"bottom\",\n    right: \"left\",\n    bottom: \"top\",\n    left: \"right\"\n  }[t];\n}\nfunction s(t, e) {\n  return {\n    top: t.top < e.top,\n    right: t.right > e.right,\n    bottom: t.bottom > e.bottom,\n    left: t.left < e.left\n  };\n}","map":null,"metadata":{},"sourceType":"module"}