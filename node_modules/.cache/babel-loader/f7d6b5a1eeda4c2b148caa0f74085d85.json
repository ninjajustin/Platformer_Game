{"ast":null,"code":"var _dec, _class;\nimport { ATexture } from \"../../../../anigraph/rendering/ATexture\";\nimport { ASerializable, V3, VertexArray3D } from \"../../../../anigraph\";\nimport { CharacterModel } from \"../../../BaseClasses\";\nimport { TriangleMeshCharacterModel } from \"../CharacterNodes\";\nimport { AppConfigs } from \"../../../AppConfigs\";\nexport let GameTerrainModel = (_dec = ASerializable(\"BotModel\"), _dec(_class = class GameTerrainModel extends TriangleMeshCharacterModel {\n  constructor() {\n    super(...arguments);\n    this.sizeX = void 0;\n    this.sizeY = void 0;\n  }\n  /**\n   * Creates a new bot model to be textured with the provided diffuse texture map.\n   * @param diffuseMap\n   * @param sizex\n   * @param sizey\n   * @param args\n   * @returns {Promise<GameTerrainModel>}\n   * @constructor\n   */\n  static async Create(sizex, sizey) {\n    var _sizex, _sizey;\n    sizex = (_sizex = sizex) !== null && _sizex !== void 0 ? _sizex : AppConfigs.DefaultBotSize;\n    sizey = (_sizey = sizey) !== null && _sizey !== void 0 ? _sizey : AppConfigs.DefaultBotSize;\n\n    /**\n     * Set the vertices to be a box. The Box3D helper function creates box geometry based on opposite corners,\n     * specifically the minimumum and maximum x,y,z coordinate values for an axis-aligned box\n     */\n    let verts = VertexArray3D.Box3D(V3(-0.5 * sizex, -0.5 * sizey, -.2), V3(0.5 * sizex, 0.5 * sizey, .2));\n\n    /**\n     * Create the new bot model, initialize it with the provided diffuse map, and return it when that is done\n     * @type {GameTerrainModel}\n     */\n    let newmodel = new this(verts);\n    newmodel.sizeX = sizex;\n    newmodel.sizeY = sizey;\n    await newmodel.init(\"./images/terrain/sandstone.jpeg\");\n    return newmodel;\n  }\n  async init(diffuseMap) {\n    /**\n     * The diffuseMap input can be an ATexture object or a path to a texture. If it is a path, then we load the\n     * corresponding texture into an ATexture object\n     * @type {ATexture}\n     */\n    let texture = diffuseMap instanceof ATexture ? diffuseMap : await ATexture.LoadAsync(diffuseMap);\n\n    /**\n     * Sets the material for our model to the corresponding AShaderMaterial instance, with the provided texture as\n     * the diffuse texture.\n     */\n    this.setMaterial(CharacterModel.ShaderModel.CreateMaterial(texture));\n  }\n}) || _class);","map":{"version":3,"names":["ATexture","ASerializable","V3","VertexArray3D","CharacterModel","TriangleMeshCharacterModel","AppConfigs","GameTerrainModel","sizeX","sizeY","Create","sizex","sizey","DefaultBotSize","verts","Box3D","newmodel","init","diffuseMap","texture","LoadAsync","setMaterial","ShaderModel","CreateMaterial"],"sources":["/Users/home/Desktop/cs4620-final-project/src/app/main/Nodes/GameTerrain/GameTerrainModel.ts"],"sourcesContent":["import {ATexture} from \"../../../../anigraph/rendering/ATexture\";\nimport {ASerializable, V3, VertexArray3D} from \"../../../../anigraph\";\nimport {CharacterModel} from \"../../../BaseClasses\";\nimport {TriangleMeshCharacterModel} from \"../CharacterNodes\";\nimport {AppConfigs} from \"../../../AppConfigs\";\n\n@ASerializable(\"BotModel\")\nexport class GameTerrainModel extends TriangleMeshCharacterModel {\n\n  sizeX!: number;\n  sizeY!: number;\n\n  /**\n   * Creates a new bot model to be textured with the provided diffuse texture map.\n   * @param diffuseMap\n   * @param sizex\n   * @param sizey\n   * @param args\n   * @returns {Promise<GameTerrainModel>}\n   * @constructor\n   */\n  static async Create(sizex?: number, sizey?: number, ...args: any[]) {\n    sizex = sizex ?? AppConfigs.DefaultBotSize;\n    sizey = sizey ?? AppConfigs.DefaultBotSize;\n\n    /**\n     * Set the vertices to be a box. The Box3D helper function creates box geometry based on opposite corners,\n     * specifically the minimumum and maximum x,y,z coordinate values for an axis-aligned box\n     */\n    let verts = VertexArray3D.Box3D(\n      V3(-0.5 * sizex, -0.5 * sizey, -.2),\n      V3(0.5 * sizex, 0.5 * sizey, .2),\n    );\n\n    /**\n     * Create the new bot model, initialize it with the provided diffuse map, and return it when that is done\n     * @type {GameTerrainModel}\n     */\n    let newmodel = new this(verts);\n    newmodel.sizeX = sizex;\n    newmodel.sizeY = sizey;\n    await newmodel.init(\"./images/terrain/sandstone.jpeg\");\n    return newmodel;\n  }\n\n  async init(diffuseMap: string | ATexture, ...args: any[]) {\n    /**\n     * The diffuseMap input can be an ATexture object or a path to a texture. If it is a path, then we load the\n     * corresponding texture into an ATexture object\n     * @type {ATexture}\n     */\n    let texture = (diffuseMap instanceof ATexture) ? diffuseMap : await ATexture.LoadAsync(diffuseMap);\n\n    /**\n     * Sets the material for our model to the corresponding AShaderMaterial instance, with the provided texture as\n     * the diffuse texture.\n     */\n    this.setMaterial(CharacterModel.ShaderModel.CreateMaterial(\n      texture\n    ));\n  }\n\n}\n\n\n"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,yCAAyC;AAChE,SAAQC,aAAa,EAAEC,EAAE,EAAEC,aAAa,QAAO,sBAAsB;AACrE,SAAQC,cAAc,QAAO,sBAAsB;AACnD,SAAQC,0BAA0B,QAAO,mBAAmB;AAC5D,SAAQC,UAAU,QAAO,qBAAqB;AAE9C,WACaC,gBAAgB,WAD5BN,aAAa,CAAC,UAAU,CAAC,gBAA1B,MACaM,gBAAgB,SAASF,0BAA0B,CAAC;EAAA;IAAA;IAAA,KAE/DG,KAAK;IAAA,KACLC,KAAK;EAAA;EAEL;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,aAAaC,MAAM,CAACC,KAAc,EAAEC,KAAc,EAAkB;IAAA;IAClED,KAAK,aAAGA,KAAK,2CAAIL,UAAU,CAACO,cAAc;IAC1CD,KAAK,aAAGA,KAAK,2CAAIN,UAAU,CAACO,cAAc;;IAE1C;AACJ;AACA;AACA;IACI,IAAIC,KAAK,GAAGX,aAAa,CAACY,KAAK,CAC7Bb,EAAE,CAAC,CAAC,GAAG,GAAGS,KAAK,EAAE,CAAC,GAAG,GAAGC,KAAK,EAAE,CAAC,EAAE,CAAC,EACnCV,EAAE,CAAC,GAAG,GAAGS,KAAK,EAAE,GAAG,GAAGC,KAAK,EAAE,EAAE,CAAC,CACjC;;IAED;AACJ;AACA;AACA;IACI,IAAII,QAAQ,GAAG,IAAI,IAAI,CAACF,KAAK,CAAC;IAC9BE,QAAQ,CAACR,KAAK,GAAGG,KAAK;IACtBK,QAAQ,CAACP,KAAK,GAAGG,KAAK;IACtB,MAAMI,QAAQ,CAACC,IAAI,CAAC,iCAAiC,CAAC;IACtD,OAAOD,QAAQ;EACjB;EAEA,MAAMC,IAAI,CAACC,UAA6B,EAAkB;IACxD;AACJ;AACA;AACA;AACA;IACI,IAAIC,OAAO,GAAID,UAAU,YAAYlB,QAAQ,GAAIkB,UAAU,GAAG,MAAMlB,QAAQ,CAACoB,SAAS,CAACF,UAAU,CAAC;;IAElG;AACJ;AACA;AACA;IACI,IAAI,CAACG,WAAW,CAACjB,cAAc,CAACkB,WAAW,CAACC,cAAc,CACxDJ,OAAO,CACR,CAAC;EACJ;AAEF,CAAC"},"metadata":{},"sourceType":"module"}