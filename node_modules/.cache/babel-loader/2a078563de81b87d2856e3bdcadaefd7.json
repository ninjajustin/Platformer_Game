{"ast":null,"code":"import { ADragInteractionBase } from \"./ADragInteraction\";\nexport class AStaticClickInteraction extends ADragInteractionBase {\n  constructor() {\n    super(...arguments);\n    this.dragAllowance = 10;\n  }\n  //allowance in pixels\n  static Create(element, clickCallback, handle) {\n    const interaction = new this(element, undefined, handle);\n    interaction.setDragStartCallback((interaction, event) => {\n      interaction.setInteractionState('noDrag', true);\n      interaction.setInteractionState('dragStartCursor', event.cursorPosition);\n    });\n    interaction.setDragMoveCallback((interaction, event) => {\n      if (event.cursorPosition.minus(interaction.getInteractionState('dragStartCursor')).L2() > interaction.dragAllowance) {\n        interaction.setInteractionState('noDrag', false);\n      }\n    });\n    interaction.setDragEndCallback((interaction, event) => {\n      if (interaction.getInteractionState('noDrag')) {\n        clickCallback(event);\n      }\n    });\n    interaction.bindMethods();\n    return interaction;\n  }\n}","map":{"version":3,"names":["ADragInteractionBase","AStaticClickInteraction","dragAllowance","Create","element","clickCallback","handle","interaction","undefined","setDragStartCallback","event","setInteractionState","cursorPosition","setDragMoveCallback","minus","getInteractionState","L2","setDragEndCallback","bindMethods"],"sources":["/Users/home/Desktop/cs4620-final-project/src/anigraph/interaction/AStaticClickInteraction.ts"],"sourcesContent":["import {ADragInteractionBase} from \"./ADragInteraction\";\nimport {CallbackType} from \"../basictypes\";\nimport {AInteractionEvent} from \"./AInteraction\";\n\n\nexport class AStaticClickInteraction extends ADragInteractionBase{\n    public dragAllowance=10;//allowance in pixels\n    static Create(element:any,\n                  clickCallback:CallbackType,\n                  handle?:string){\n        const interaction = new this(element, undefined, handle);\n        interaction.setDragStartCallback((interaction:AStaticClickInteraction, event:AInteractionEvent)=>{\n            interaction.setInteractionState('noDrag', true);\n            interaction.setInteractionState('dragStartCursor', event.cursorPosition);\n        });\n        interaction.setDragMoveCallback((interaction:AStaticClickInteraction, event:any)=>{\n            if(event.cursorPosition.minus(interaction.getInteractionState('dragStartCursor')).L2()>interaction.dragAllowance) {\n                interaction.setInteractionState('noDrag', false);\n            }\n        });\n        interaction.setDragEndCallback((interaction:AStaticClickInteraction, event:any)=>{\n            if(interaction.getInteractionState('noDrag')){\n                clickCallback(event);\n            }\n        });\n        interaction.bindMethods();\n        return interaction;\n    }\n\n}\n"],"mappings":"AAAA,SAAQA,oBAAoB,QAAO,oBAAoB;AAKvD,OAAO,MAAMC,uBAAuB,SAASD,oBAAoB;EAAA;IAAA;IAAA,KACtDE,aAAa,GAAC,EAAE;EAAA;EAAC;EACxB,OAAOC,MAAM,CAACC,OAAW,EACXC,aAA0B,EAC1BC,MAAc,EAAC;IACzB,MAAMC,WAAW,GAAG,IAAI,IAAI,CAACH,OAAO,EAAEI,SAAS,EAAEF,MAAM,CAAC;IACxDC,WAAW,CAACE,oBAAoB,CAAC,CAACF,WAAmC,EAAEG,KAAuB,KAAG;MAC7FH,WAAW,CAACI,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC;MAC/CJ,WAAW,CAACI,mBAAmB,CAAC,iBAAiB,EAAED,KAAK,CAACE,cAAc,CAAC;IAC5E,CAAC,CAAC;IACFL,WAAW,CAACM,mBAAmB,CAAC,CAACN,WAAmC,EAAEG,KAAS,KAAG;MAC9E,IAAGA,KAAK,CAACE,cAAc,CAACE,KAAK,CAACP,WAAW,CAACQ,mBAAmB,CAAC,iBAAiB,CAAC,CAAC,CAACC,EAAE,EAAE,GAACT,WAAW,CAACL,aAAa,EAAE;QAC9GK,WAAW,CAACI,mBAAmB,CAAC,QAAQ,EAAE,KAAK,CAAC;MACpD;IACJ,CAAC,CAAC;IACFJ,WAAW,CAACU,kBAAkB,CAAC,CAACV,WAAmC,EAAEG,KAAS,KAAG;MAC7E,IAAGH,WAAW,CAACQ,mBAAmB,CAAC,QAAQ,CAAC,EAAC;QACzCV,aAAa,CAACK,KAAK,CAAC;MACxB;IACJ,CAAC,CAAC;IACFH,WAAW,CAACW,WAAW,EAAE;IACzB,OAAOX,WAAW;EACtB;AAEJ"},"metadata":{},"sourceType":"module"}