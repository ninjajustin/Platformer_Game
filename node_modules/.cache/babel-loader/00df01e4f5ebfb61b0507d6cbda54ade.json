{"ast":null,"code":"import _initializerDefineProperty from \"/Users/home/Desktop/College/Fall 2022/CS_4620/cs4620-final-project/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"/Users/home/Desktop/College/Fall 2022/CS_4620/cs4620-final-project/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"/Users/home/Desktop/College/Fall 2022/CS_4620/cs4620-final-project/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\nvar _class, _descriptor;\nimport { AController, AObjectState } from \"../base\";\nimport { SceneEvents } from \"./ASceneModel\";\nimport { ASceneView } from \"./ASceneView\";\nimport { ACameraModel, ACameraView } from \"./camera\";\nimport { AModelViewClassMap, AMVClassSpec } from \"../base/amvc/AModelViewClassSpec\";\nimport { ADataTexture } from \"../rendering/image\";\nexport let SceneControllerSubscriptions;\n(function (SceneControllerSubscriptions) {\n  SceneControllerSubscriptions[\"ModelNodeAdded\"] = \"ModelNodeAdded\";\n  SceneControllerSubscriptions[\"ModelNodeRemoved\"] = \"ModelNodeRemoved\";\n})(SceneControllerSubscriptions || (SceneControllerSubscriptions = {}));\nexport let ASceneController = (_class = class ASceneController extends AController {\n  // abstract initCamera():void;\n\n  getCoordinatesForCursorEvent(event) {\n    return this.model.getCoordinatesForCursorEvent(event);\n  }\n  setRenderTarget(renderTarget) {\n    if (renderTarget) {\n      this.renderer.setRenderTarget(renderTarget.target);\n    } else {\n      this.renderer.setRenderTarget(null);\n    }\n  }\n  get isReadyToRender() {\n    return this.readyToRender;\n  }\n  get renderWindow() {\n    return this._renderWindow;\n  }\n  get renderer() {\n    return this.renderWindow.renderer;\n  }\n  get sceneController() {\n    return this;\n  }\n  get eventTarget() {\n    return this.renderWindow.contextElement;\n  }\n  constructor(model) {\n    super();\n    _initializerDefineProperty(this, \"readyToRender\", _descriptor, this);\n    this.classMap = void 0;\n    this._renderWindow = void 0;\n    this._model = void 0;\n    this._view = void 0;\n    this._cameraView = void 0;\n    this.readyToRender = false;\n    this.classMap = new AModelViewClassMap();\n    this.onModelNodeAdded = this.onModelNodeAdded.bind(this);\n    this.onModelNodeRemoved = this.onModelNodeRemoved.bind(this);\n    this.addModelViewSpec(ACameraModel, ACameraView);\n    this.initModelViewSpecs();\n    if (model) {\n      this.setModel(model);\n    }\n  }\n  async PreloadAssets() {\n    // await this.model.PreloadAssets();\n  }\n  async initRendering(renderWindow) {\n    this._renderWindow = renderWindow;\n    this._view = new ASceneView(this);\n    this.addView(this.view);\n    this.renderer.autoClear = false;\n    this.renderer.clear();\n    await this.model.confirmInitialized();\n    // this._cameraView = ACameraView.Create(this.model.cameraModel);\n    // this.addView(this._cameraView);\n    await this.initScene();\n    this.initInteractions();\n    this.addModelSubscriptions();\n    let cameraView = this.getCameraView(this.model.cameraModel);\n    if (cameraView && cameraView instanceof ACameraView) {\n      this._cameraView = cameraView;\n    } else {\n      throw new Error(\"Error initializing camera view\");\n    }\n    // this.addView(this._cameraView);\n\n    ADataTexture.CheckWebGLSupport(this.renderer);\n    this.readyToRender = true;\n  }\n  getCameraView(cameraModel) {\n    return this.getViewListForModel(cameraModel)[0];\n  }\n  createViewForNodeModel(nodeModel) {\n    let spec = this.classMap.getSpecForModel(nodeModel);\n    if (spec) {\n      let view = new spec.viewClass();\n      view.setModel(nodeModel);\n      view.setController(this);\n      return view;\n    } else {\n      throw new Error(`Unsure how to create view for ${nodeModel} with class ${nodeModel.constructor.name}. This often happens for one of the following reasons: 1) You did not add a custom model/view pair to the class spec in the scene controller. 2) You did not decorate a custom model class with @ASerializable(...). In this case check out one of the example models for how to add the decorator.`);\n    }\n  }\n  addModelViewSpec(modelClass, viewClass, details) {\n    this.classMap.addSpec(new AMVClassSpec(modelClass, viewClass, details));\n  }\n  setModel(model) {\n    if (this._model && this._model !== model) {\n      this._unSetModel();\n    }\n    this._model = model;\n    this._view = new ASceneView(this);\n    this.view.addView(this.view);\n  }\n  addModelSubscriptions() {\n    const self = this;\n    this.subscribe(this.model.addEventListener(SceneEvents.NodeAdded, node => {\n      self.onModelNodeAdded(node);\n    }), SceneControllerSubscriptions.ModelNodeAdded);\n    this.subscribe(this.model.addEventListener(SceneEvents.NodeRemoved, node => {\n      self.onModelNodeRemoved(node);\n    }), SceneControllerSubscriptions.ModelNodeRemoved);\n    this.model.mapOverDescendants(descendant => {\n      self.onModelNodeAdded(descendant);\n    });\n  }\n  _unSetModel() {\n    this.clearSubscriptions();\n    this.view.release();\n  }\n  get model() {\n    return this._model;\n  }\n  get view() {\n    return this._view;\n  }\n  get cameraModel() {\n    return this._cameraView.model;\n  }\n  get camera() {\n    return this.cameraModel.camera;\n  }\n\n  // get clock() {\n  //     return this._clock;\n  // }\n\n  get _threeCamera() {\n    return this._cameraView.threejs;\n  }\n  get modelMap() {\n    return this.model.modelMap;\n  }\n  get viewMap() {\n    return this.view.viewMap;\n  }\n  hasModel(model) {\n    if (model.uid === this.model.uid) {\n      return true;\n    }\n    return this.model.hasModel(model);\n  }\n  hasView(view) {\n    return this.view.hasView(view);\n    // return (this.model.hasModelID(view.modelID) && view.uid in this.viewMap[view.modelID]);\n  }\n\n  addView(view) {\n    view.setController(this);\n    this.view.addView(view);\n    if (view.model.parent !== null) {\n      view.model.signalNewParent(view.model.parent);\n    }\n  }\n  removeView(view) {\n    this.view.removeView(view);\n  }\n  getViewListForModel(model) {\n    return this.view.getViewListForModel(model);\n  }\n  onModelNodeAdded(nodeModel) {\n    let newView = this.createViewForNodeModel(nodeModel);\n    this.addView(newView);\n    // this.view.addView(newView);\n    // if(nodeModel.parent!==null){\n    //     nodeModel.signalNewParent(nodeModel.parent as AModel);\n    // }\n  }\n\n  onModelNodeRemoved(nodeModel) {\n    let views = this.view.getViewListForModel(nodeModel);\n    for (let v of views) {\n      v.release();\n    }\n    delete this.viewMap[nodeModel.uid];\n  }\n  onResize(renderWindow) {\n    this.renderer.setSize(renderWindow.container.clientWidth, renderWindow.container.clientHeight);\n    this.camera.onCanvasResize(renderWindow.container.clientWidth, renderWindow.container.clientHeight);\n  }\n  async loadShader(name) {\n    return this.model.loadShader(name);\n  }\n  async loadLineShader(name) {\n    return this.model.loadLineShader(name);\n  }\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"readyToRender\", [AObjectState], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class);","map":{"version":3,"names":["AController","AObjectState","SceneEvents","ASceneView","ACameraModel","ACameraView","AModelViewClassMap","AMVClassSpec","ADataTexture","SceneControllerSubscriptions","ASceneController","getCoordinatesForCursorEvent","event","model","setRenderTarget","renderTarget","renderer","target","isReadyToRender","readyToRender","renderWindow","_renderWindow","sceneController","eventTarget","contextElement","constructor","classMap","_model","_view","_cameraView","onModelNodeAdded","bind","onModelNodeRemoved","addModelViewSpec","initModelViewSpecs","setModel","PreloadAssets","initRendering","addView","view","autoClear","clear","confirmInitialized","initScene","initInteractions","addModelSubscriptions","cameraView","getCameraView","cameraModel","Error","CheckWebGLSupport","getViewListForModel","createViewForNodeModel","nodeModel","spec","getSpecForModel","viewClass","setController","name","modelClass","details","addSpec","_unSetModel","self","subscribe","addEventListener","NodeAdded","node","ModelNodeAdded","NodeRemoved","ModelNodeRemoved","mapOverDescendants","descendant","clearSubscriptions","release","camera","_threeCamera","threejs","modelMap","viewMap","hasModel","uid","hasView","parent","signalNewParent","removeView","newView","views","v","onResize","setSize","container","clientWidth","clientHeight","onCanvasResize","loadShader","loadLineShader"],"sources":["/Users/home/Desktop/College/Fall 2022/CS_4620/cs4620-final-project/src/anigraph/scene/ASceneController.ts"],"sourcesContent":["import * as THREE from \"three\";\nimport {\n    AController, AModel,\n    AModelInterface, AObjectNode, AObjectState,\n    AView,\n    HasModelViewMap,\n    SceneControllerInterface\n} from \"../base\";\nimport {AInteractionEvent} from \"../interaction\";\nimport {ClassInterface} from \"../basictypes\";\nimport {AGLContext, AGLRenderWindow, ARenderDelegate, AShaderModel, ShaderManager} from \"../rendering\";\nimport {ASceneModel, SceneEvents} from \"./ASceneModel\";\nimport {ASceneView} from \"./ASceneView\";\nimport {ACameraModel, ACameraView} from \"./camera\";\nimport {ANodeModel} from \"./nodeModel\";\nimport {_ANodeView, ANodeView} from \"./nodeView\";\nimport {AModelViewClassMap, AMVClassSpec, AMVClassSpecDetails} from \"../base/amvc/AModelViewClassSpec\";\nimport {ADataTexture} from \"../rendering/image\";\n\n\nexport enum SceneControllerSubscriptions {\n    ModelNodeAdded = \"ModelNodeAdded\",\n    ModelNodeRemoved = \"ModelNodeRemoved\"\n}\n\nexport interface RenderTargetInterface{\n    target:THREE.WebGLRenderTarget|null\n}\n\nexport abstract class ASceneController extends AController implements ARenderDelegate, HasModelViewMap, SceneControllerInterface {\n    @AObjectState protected readyToRender:boolean;\n    classMap:AModelViewClassMap;\n    _renderWindow!: AGLRenderWindow;\n    protected _model!: ASceneModel;\n    protected _view!: ASceneView;\n    protected _cameraView!: ACameraView;\n    abstract initScene():Promise<void>;\n\n    abstract initModelViewSpecs():void;\n    abstract onAnimationFrameCallback(context: AGLContext): void\n    // abstract initCamera():void;\n    abstract initInteractions():void;\n\n    getCoordinatesForCursorEvent(event:AInteractionEvent){\n        return this.model.getCoordinatesForCursorEvent(event);\n    }\n\n\n    setRenderTarget(renderTarget?:RenderTargetInterface){\n        if(renderTarget) {\n            this.renderer.setRenderTarget(renderTarget.target)\n        }else{\n            this.renderer.setRenderTarget(null);\n        }\n    }\n\n\n    get isReadyToRender(): boolean {\n        return this.readyToRender;\n    }\n\n    get renderWindow(): AGLRenderWindow {\n        return this._renderWindow;\n    }\n\n    get renderer(): THREE.WebGLRenderer {\n        return this.renderWindow.renderer;\n    }\n\n    get sceneController(){\n        return this;\n    }\n\n    get eventTarget(): HTMLElement {\n        return this.renderWindow.contextElement;\n    }\n\n    constructor(model: ASceneModel) {\n        super();\n        this.readyToRender=false;\n        this.classMap = new AModelViewClassMap();\n        this.onModelNodeAdded = this.onModelNodeAdded.bind(this);\n        this.onModelNodeRemoved = this.onModelNodeRemoved.bind(this);\n\n        this.addModelViewSpec(ACameraModel, ACameraView);\n        this.initModelViewSpecs();\n\n        if (model) {\n            this.setModel(model)\n        }\n    }\n\n    async PreloadAssets(){\n        // await this.model.PreloadAssets();\n    };\n\n    async initRendering(renderWindow: AGLRenderWindow) {\n        this._renderWindow = renderWindow;\n        this._view = new ASceneView(this);\n        this.addView(this.view);\n        this.renderer.autoClear = false;\n        this.renderer.clear()\n        await this.model.confirmInitialized();\n        // this._cameraView = ACameraView.Create(this.model.cameraModel);\n        // this.addView(this._cameraView);\n        await this.initScene();\n        this.initInteractions();\n        this.addModelSubscriptions();\n\n        let cameraView = this.getCameraView(this.model.cameraModel);\n        if(cameraView && cameraView instanceof ACameraView){\n            this._cameraView = cameraView;\n        }else{\n            throw new Error(\"Error initializing camera view\");\n        }\n        // this.addView(this._cameraView);\n\n        ADataTexture.CheckWebGLSupport(this.renderer);\n        this.readyToRender = true;\n    }\n\n\n    getCameraView(cameraModel:ACameraModel){\n        return this.getViewListForModel(cameraModel)[0];\n    }\n\n\n\n\n    createViewForNodeModel(nodeModel: ANodeModel){\n        let spec = this.classMap.getSpecForModel(nodeModel);\n        if(spec){\n            let view = new (spec.viewClass)();\n            view.setModel(nodeModel);\n            view.setController(this);\n            return view;\n        } else{\n            throw new Error(`Unsure how to create view for ${nodeModel} with class ${nodeModel.constructor.name}. This often happens for one of the following reasons: 1) You did not add a custom model/view pair to the class spec in the scene controller. 2) You did not decorate a custom model class with @ASerializable(...). In this case check out one of the example models for how to add the decorator.`)\n        }\n    }\n\n    addModelViewSpec(modelClass:ClassInterface<ANodeModel>, viewClass:ClassInterface<AView>, details?:AMVClassSpecDetails){\n        this.classMap.addSpec(new AMVClassSpec(modelClass, viewClass, details))\n    }\n\n    setModel(model: ASceneModel) {\n        if (this._model && this._model !== model) {\n            this._unSetModel();\n        }\n        this._model = model;\n        this._view = new ASceneView(this);\n        this.view.addView(this.view);\n    }\n\n    protected addModelSubscriptions() {\n        const self = this;\n        this.subscribe(this.model.addEventListener(SceneEvents.NodeAdded, (node: ANodeModel) => {\n            self.onModelNodeAdded(node);\n        }), SceneControllerSubscriptions.ModelNodeAdded);\n        this.subscribe(this.model.addEventListener(SceneEvents.NodeRemoved, (node: ANodeModel) => {\n            self.onModelNodeRemoved(node);\n        }), SceneControllerSubscriptions.ModelNodeRemoved);\n        this.model.mapOverDescendants((descendant:AObjectNode)=>{\n            self.onModelNodeAdded(descendant as ANodeModel);\n        })\n\n    }\n\n    protected _unSetModel() {\n        this.clearSubscriptions();\n        this.view.release();\n    }\n\n    get model(): ASceneModel {\n        return this._model as ASceneModel;\n    }\n\n    get view(): ASceneView {\n        return this._view as ASceneView;\n    }\n\n    get cameraModel(){\n        return this._cameraView.model;\n    }\n\n    get camera() {\n        return this.cameraModel.camera;\n    }\n\n    // get clock() {\n    //     return this._clock;\n    // }\n\n    protected get _threeCamera() {\n        return this._cameraView.threejs;\n    }\n\n    get modelMap() {\n        return this.model.modelMap\n    };\n\n    get viewMap() {\n        return this.view.viewMap;\n    }\n\n    hasModel(model: AModelInterface) {\n        if(model.uid===this.model.uid){return true;}\n        return this.model.hasModel(model);\n    };\n\n    hasView(view: AView) {\n        return this.view.hasView(view);\n        // return (this.model.hasModelID(view.modelID) && view.uid in this.viewMap[view.modelID]);\n    }\n\n    addView(view: AView) {\n        view.setController(this);\n        this.view.addView(view);\n        if(view.model.parent!==null){\n            view.model.signalNewParent(view.model.parent as AModel);\n        }\n    }\n\n    removeView(view: AView) {\n        this.view.removeView(view);\n    }\n\n    getViewListForModel(model: AModelInterface) :ANodeView[]{\n        return this.view.getViewListForModel(model) as ANodeView[];\n    }\n\n    onModelNodeAdded(nodeModel: ANodeModel) {\n        let newView = this.createViewForNodeModel(nodeModel) as ANodeView;\n        this.addView(newView);\n        // this.view.addView(newView);\n        // if(nodeModel.parent!==null){\n        //     nodeModel.signalNewParent(nodeModel.parent as AModel);\n        // }\n    }\n\n    onModelNodeRemoved(nodeModel: ANodeModel) {\n        let views = this.view.getViewListForModel(nodeModel);\n        for (let v of views) {\n            v.release();\n        }\n        delete this.viewMap[nodeModel.uid];\n    }\n\n    onResize(renderWindow: AGLRenderWindow): void {\n        this.renderer.setSize(renderWindow.container.clientWidth, renderWindow.container.clientHeight);\n        this.camera.onCanvasResize(renderWindow.container.clientWidth, renderWindow.container.clientHeight);\n    }\n\n    async loadShader(name:string){\n        return this.model.loadShader(name);\n    }\n    async loadLineShader(name:string){\n        return this.model.loadLineShader(name);\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}