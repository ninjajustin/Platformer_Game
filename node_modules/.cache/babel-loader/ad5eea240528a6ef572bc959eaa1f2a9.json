{"ast":null,"code":"var _dec, _class;\n/**\n * @file Manages the configuration settings for the widget.\n * @author Abe Davis\n * @description ACameraModel holds all of the data for a camera.\n */\nimport * as THREE from \"three\";\nimport { ASerializable } from \"../../base\";\nimport { ANodeModel3D } from \"../nodeModel\";\nimport { ACamera } from \"../../math\";\nexport let ACameraModel = (_dec = ASerializable(\"ACameraModel\"), _dec(_class = class ACameraModel extends ANodeModel3D {\n  get camera() {\n    return this._camera;\n  }\n  get pose() {\n    return this.camera.pose;\n  }\n  get projection() {\n    return this.camera.projection;\n  }\n  setPose(pose) {\n    // this.camera.pose=pose.getMat4();\n    this.camera.setPose(pose);\n  }\n  setProjection(m) {\n    this.camera.projection = m;\n  }\n  constructor(camera) {\n    super();\n    this._camera = void 0;\n    if (camera instanceof ACamera) this._camera = camera;\n    if (!this.camera) {\n      if (camera instanceof THREE.PerspectiveCamera) {\n        this._camera = new ACamera(camera);\n      }\n    }\n    const self = this;\n    this._setCameraListeners();\n  }\n  get transform() {\n    return this.camera.getPose();\n  }\n  setTransform(t) {\n    if (this._camera) {\n      this.camera.setPose(t.getMat4());\n    } else {\n      super.setTransform(t);\n    }\n  }\n  _setCameraListeners() {\n    const self = this;\n    const POSE_UPDATE_HANDLE = ACamera.CameraUpdateEvents.POSE_UPDATED + '_' + this.serializationLabel;\n    const PROJECTION_UPDATE_HANDLE = ACamera.CameraUpdateEvents.PROJECTION_UPDATED + '_' + this.serializationLabel;\n    this.unsubscribe(POSE_UPDATE_HANDLE, false);\n    this.unsubscribe(PROJECTION_UPDATE_HANDLE, false);\n    this.subscribe(this.camera.addPoseListener(() => {\n      self._transform = this.camera.getPose();\n      // self.signalTransformUpdate();\n      // self.signalEvent(ACamera.CameraUpdateEvents.POSE_UPDATED);\n    }), POSE_UPDATE_HANDLE);\n    this.subscribe(this.camera.addProjectionListener(() => {\n      self.signalEvent(ACamera.CameraUpdateEvents.PROJECTION_UPDATED);\n    }), PROJECTION_UPDATE_HANDLE);\n  }\n  signalCameraProjectionUpdate() {\n    this.signalEvent(ACamera.CameraUpdateEvents.PROJECTION_UPDATED);\n  }\n  addCameraProjectionListener(callback, handle) {\n    let synchronous = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    return this.camera.addProjectionListener(callback, handle, synchronous);\n  }\n  get forward() {\n    return this.camera.forward;\n  }\n  get right() {\n    return this.camera.right;\n  }\n  get up() {\n    return this.camera.up;\n  }\n  static CreatePerspectiveFOV(fovy, aspect, near, far) {\n    let camera = ACamera.CreatePerspectiveFOV(fovy, aspect, near, far);\n    let cameraModel = new ACameraModel(camera);\n    return cameraModel;\n  }\n  static CreatePerspectiveNearPlane(left, right, bottom, top, near, far) {\n    let camera = ACamera.CreatePerspectiveNearPlane(left, right, bottom, top, near, far);\n    let cameraModel = new ACameraModel(camera);\n    return cameraModel;\n  }\n  static CreateOrthographic(left, right, bottom, top, near, far) {\n    let camera = ACamera.CreateOrthographic(left, right, bottom, top, near, far);\n    let cameraModel = new ACameraModel(camera);\n    return cameraModel;\n  }\n}) || _class);","map":{"version":3,"names":["THREE","ASerializable","ANodeModel3D","ACamera","ACameraModel","camera","_camera","pose","projection","setPose","setProjection","m","constructor","PerspectiveCamera","self","_setCameraListeners","transform","getPose","setTransform","t","getMat4","POSE_UPDATE_HANDLE","CameraUpdateEvents","POSE_UPDATED","serializationLabel","PROJECTION_UPDATE_HANDLE","PROJECTION_UPDATED","unsubscribe","subscribe","addPoseListener","_transform","addProjectionListener","signalEvent","signalCameraProjectionUpdate","addCameraProjectionListener","callback","handle","synchronous","forward","right","up","CreatePerspectiveFOV","fovy","aspect","near","far","cameraModel","CreatePerspectiveNearPlane","left","bottom","top","CreateOrthographic"],"sources":["/Users/home/Desktop/cs4620-final-project/src/anigraph/scene/camera/ACameraModel.ts"],"sourcesContent":["/**\n * @file Manages the configuration settings for the widget.\n * @author Abe Davis\n * @description ACameraModel holds all of the data for a camera.\n */\nimport * as THREE from \"three\";\nimport {AObject, ASerializable} from \"../../base\";\nimport {Mat4} from \"../../math/linalg\";\nimport {ANodeModel3D} from \"../nodeModel\";\nimport {ACamera, TransformationInterface} from \"../../math\";\n\n@ASerializable(\"ACameraModel\")\nexport class ACameraModel extends ANodeModel3D{\n    protected _camera!: ACamera;\n    get camera() {\n        return this._camera;\n    }\n    get pose(){return this.camera.pose;}\n    get projection(){return this.camera.projection;}\n    setPose(pose:TransformationInterface){\n        // this.camera.pose=pose.getMat4();\n        this.camera.setPose(pose);\n    }\n    setProjection(m:Mat4){\n        this.camera.projection = m;\n    }\n\n    constructor(camera?: THREE.Camera | ACamera, ...args: any[]) {\n        super();\n        if (camera instanceof ACamera) this._camera = camera;\n        if (!this.camera) {\n            if(camera instanceof THREE.PerspectiveCamera){\n                this._camera = new ACamera(camera);\n            }\n        }\n        const self = this;\n        this._setCameraListeners();\n    }\n\n    get transform() {\n        return this.camera.getPose();\n    }\n\n    setTransform(t: TransformationInterface) {\n        if(this._camera){\n            this.camera.setPose(t.getMat4());\n        }else{\n            super.setTransform(t);\n        }\n    }\n\n\n    _setCameraListeners() {\n        const self = this;\n        const POSE_UPDATE_HANDLE = ACamera.CameraUpdateEvents.POSE_UPDATED + '_'+ this.serializationLabel;\n        const PROJECTION_UPDATE_HANDLE = ACamera.CameraUpdateEvents.PROJECTION_UPDATED + '_' + this.serializationLabel;\n        this.unsubscribe(POSE_UPDATE_HANDLE, false);\n        this.unsubscribe(PROJECTION_UPDATE_HANDLE, false);\n        this.subscribe(this.camera.addPoseListener(() => {\n                self._transform = this.camera.getPose();\n                // self.signalTransformUpdate();\n                // self.signalEvent(ACamera.CameraUpdateEvents.POSE_UPDATED);\n            }),\n            POSE_UPDATE_HANDLE\n        )\n        this.subscribe(this.camera.addProjectionListener(() => {\n                self.signalEvent(ACamera.CameraUpdateEvents.PROJECTION_UPDATED);\n            }),\n            PROJECTION_UPDATE_HANDLE\n        );\n    }\n\n    signalCameraProjectionUpdate() {\n        this.signalEvent(ACamera.CameraUpdateEvents.PROJECTION_UPDATED);\n    }\n\n    addCameraProjectionListener(callback: (self: AObject) => void, handle?: string, synchronous:boolean=true) {\n        return this.camera.addProjectionListener(callback, handle, synchronous);\n    }\n\n\n    get forward(){return this.camera.forward;}\n    get right(){return this.camera.right;}\n    get up(){return this.camera.up;}\n\n    static CreatePerspectiveFOV(fovy: number, aspect: number, near?: number, far?: number) {\n        let camera = ACamera.CreatePerspectiveFOV(fovy, aspect, near, far)\n        let cameraModel = new ACameraModel(camera);\n        return cameraModel;\n    }\n\n    static CreatePerspectiveNearPlane(left: number, right: number, bottom: number, top: number, near?: number, far?: number) {\n        let camera = ACamera.CreatePerspectiveNearPlane(left, right, bottom, top, near, far)\n        let cameraModel = new ACameraModel(camera);\n        return cameraModel;\n    }\n\n    static CreateOrthographic(left:number, right:number, bottom:number, top:number, near?:number, far?:number) {\n        let camera = ACamera.CreateOrthographic(left, right, bottom, top, near, far)\n        let cameraModel = new ACameraModel(camera);\n        return cameraModel;\n    }\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}