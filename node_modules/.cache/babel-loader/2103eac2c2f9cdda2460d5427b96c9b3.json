{"ast":null,"code":"var _dec, _class, _class2;\nimport * as THREE from \"three\";\nimport { VectorBase } from \"../VectorBase\";\nimport { Random } from \"../../Random\";\nimport { ASerializable } from \"../../../base\";\nimport { Vec2 } from \"./Vec2\";\nimport { Vec4 } from \"../3D/Vec4\";\nexport let Vec3 = (_dec = ASerializable(\"Vec3\"), _dec(_class = (_class2 = class Vec3 extends VectorBase {\n  constructor() {\n    // common logic constructor\n    super(...arguments);\n  }\n  static UnitX() {\n    return new this(1, 0, 0);\n  }\n  static UnitY() {\n    return new this(0, 1, 0);\n  }\n  static UnitZ() {\n    return new this(0, 0, 1);\n  }\n  toString() {\n    return `Vec3(${this.x},${this.y},${this.z})`;\n  }\n  get nDimensions() {\n    return 3;\n  }\n  get xy() {\n    return new Vec2(this.elements[0], this.elements[1]);\n  }\n  set xy(value) {\n    this.elements[0] = value.x;\n    this.elements[1] = value.y;\n  }\n  get z() {\n    return this.elements[2];\n  }\n  set z(val) {\n    this.elements[2] = val;\n  }\n  get h() {\n    return this.elements[2];\n  }\n  set h(val) {\n    this.elements[2] = val;\n  }\n\n  // get i(){\n  //     return this.elements[0];\n  // }\n  // get j(){\n  //     return this.elements[1];\n  // }\n  // get k(){\n  //     return this.elements[2];\n  // }\n\n  _setToDefault() {\n    this.elements = [0, 0, 0];\n  }\n\n  /**\n   * Cross product of this with other\n   * @param other\n   * @returns {Vec3}\n   */\n  cross(other) {\n    return new Vec3(this.y * other.z - this.z * other.y, this.z * other.x - this.x * other.z, this.x * other.y - this.y * other.x);\n  }\n  homogenize() {\n    if (this.h === 1 || this.h === 0) {\n      return;\n    }\n    let ooh = 1.0 / this.h;\n    this.elements[0] = this.elements[0] * ooh;\n    this.elements[1] = this.elements[1] * ooh;\n    this.h = 1;\n  }\n  getHomogenized() {\n    const h = this.clone();\n    h.homogenize();\n    return h;\n  }\n  get XY() {\n    return new Vec2(this.x, this.y);\n  }\n  get Point2D() {\n    let h = this.getHomogenized();\n    return new Vec2(h.x, h.y);\n  }\n  get Point3DH() {\n    return new Vec4(this.x, this.y, this.z, 1);\n  }\n  get Vec3DH() {\n    return new Vec4(this.x, this.y, this.z, 0);\n  }\n  static From2DHPoint(p) {\n    return new Vec3(p.x, p.y, 1.0);\n  }\n  static FromVec2(p) {\n    return new Vec3(p.x, p.y, 0.0);\n  }\n  static Random() {\n    var r = new this(Random.floatArray(3));\n    return r;\n  }\n  static FromThreeJS(vec) {\n    return new this(vec.x, vec.y, vec.z);\n  }\n  sstring() {\n    return `[${this.x},${this.y},${this.z}]`;\n  }\n  asThreeJS() {\n    return new THREE.Vector3(this.x, this.y, this.z);\n  }\n  getRotatedByQuaternion(q) {\n    const x = this.x,\n      y = this.y,\n      z = this.z;\n    const qx = -q.x,\n      qy = -q.y,\n      qz = -q.z,\n      qw = q.w;\n\n    // calculate quat * vector\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    let rval = new Vec3();\n    rval.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    rval.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    rval.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return rval;\n  }\n}, _class2.N_DIMENSIONS = 3, _class2)) || _class);\nexport function V3() {\n  for (var _len = arguments.length, elements = new Array(_len), _key = 0; _key < _len; _key++) {\n    elements[_key] = arguments[_key];\n  }\n  return new Vec3(...elements);\n}\n_c = V3;\nfunction _Vec2DH(x, y) {\n  return new Vec3(x, y, 0);\n}\nfunction _Point2DH(x, y) {\n  return new Vec3(x, y, 1);\n}\nexport function Vec2DH() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  if (args[0] instanceof VectorBase) {\n    return _Vec2DH(args[0].x, args[0].y);\n  } else if (Array.isArray(args[0])) {\n    return _Vec2DH(args[0][0], args[0][1]);\n  } else {\n    return _Vec2DH(args[0], args[1]);\n  }\n}\n_c2 = Vec2DH;\nexport function Point2DH() {\n  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n  if (args[0] instanceof VectorBase) {\n    return _Point2DH(args[0].x, args[0].y);\n  } else if (Array.isArray(args[0])) {\n    return _Point2DH(args[0][0], args[0][1]);\n  } else {\n    return _Point2DH(args[0], args[1]);\n  }\n}\n_c3 = Point2DH;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"V3\");\n$RefreshReg$(_c2, \"Vec2DH\");\n$RefreshReg$(_c3, \"Point2DH\");","map":{"version":3,"names":["THREE","VectorBase","Random","ASerializable","Vec2","Vec4","Vec3","constructor","UnitX","UnitY","UnitZ","toString","x","y","z","nDimensions","xy","elements","value","val","h","_setToDefault","cross","other","homogenize","ooh","getHomogenized","clone","XY","Point2D","Point3DH","Vec3DH","From2DHPoint","p","FromVec2","r","floatArray","FromThreeJS","vec","sstring","asThreeJS","Vector3","getRotatedByQuaternion","q","qx","qy","qz","qw","w","ix","iy","iz","iw","rval","N_DIMENSIONS","V3","_Vec2DH","_Point2DH","Vec2DH","args","Array","isArray","Point2DH"],"sources":["/Users/home/Desktop/College/Fall 2022/CS_4620/cs4620-final-project/src/anigraph/math/linalg/2D/Vec3.ts"],"sourcesContent":["import * as THREE from \"three\";\nimport { VectorBase } from \"../VectorBase\";\nimport { Random } from \"../../Random\";\nimport { ASerializable } from \"../../../base\";\nimport { Vec2 } from \"./Vec2\";\nimport { Vec4 } from \"../3D/Vec4\";\nimport { Quaternion } from \"../3D\";\n\n@ASerializable(\"Vec3\")\nexport class Vec3 extends VectorBase {\n  static N_DIMENSIONS: number = 3;\n  public constructor(x: number, y: number, z: number);\n  public constructor(elements?: Array<number>);\n  public constructor(...args: Array<any>) {\n    // common logic constructor\n    super(...args);\n  }\n\n  static UnitX(){\n    return new this(1,0,0);\n  }\n\n  static UnitY(){\n    return new this(0,1,0);\n  }\n\n  static UnitZ(){\n    return new this(0,0,1);\n  }\n\n\n  toString() {\n    return `Vec3(${this.x},${this.y},${this.z})`;\n  }\n\n  get nDimensions() {\n    return 3;\n  }\n\n  get xy() {\n    return new Vec2(this.elements[0], this.elements[1]);\n  }\n  set xy(value: Vec2) {\n    this.elements[0] = value.x;\n    this.elements[1] = value.y;\n  }\n\n  get z() {\n    return this.elements[2];\n  }\n  set z(val: number) {\n    this.elements[2] = val;\n  }\n  get h() {\n    return this.elements[2];\n  }\n  set h(val: number) {\n    this.elements[2] = val;\n  }\n\n  // get i(){\n  //     return this.elements[0];\n  // }\n  // get j(){\n  //     return this.elements[1];\n  // }\n  // get k(){\n  //     return this.elements[2];\n  // }\n\n  _setToDefault() {\n    this.elements = [0, 0, 0];\n  }\n\n  /**\n   * Cross product of this with other\n   * @param other\n   * @returns {Vec3}\n   */\n  cross(other: Vec3): Vec3 {\n    return new Vec3(\n      this.y * other.z - this.z * other.y,\n      this.z * other.x - this.x * other.z,\n      this.x * other.y - this.y * other.x\n    );\n  }\n\n  homogenize() {\n    if (this.h === 1 || this.h === 0) {\n      return;\n    }\n    let ooh: number = 1.0 / this.h;\n    this.elements[0] = this.elements[0] * ooh;\n    this.elements[1] = this.elements[1] * ooh;\n    this.h = 1;\n  }\n\n  getHomogenized() {\n    const h = this.clone();\n    h.homogenize();\n    return h;\n  }\n\n  get XY() {\n    return new Vec2(this.x, this.y);\n  }\n\n  get Point2D() {\n    let h = this.getHomogenized();\n    return new Vec2(h.x, h.y);\n  }\n  get Point3DH() {\n    return new Vec4(this.x, this.y, this.z, 1);\n  }\n\n  get Vec3DH() {\n    return new Vec4(this.x, this.y, this.z, 0);\n  }\n\n  static From2DHPoint(p: Vec2) {\n    return new Vec3(p.x, p.y, 1.0);\n  }\n  static FromVec2(p: Vec2) {\n    return new Vec3(p.x, p.y, 0.0);\n  }\n\n  static Random() {\n    var r = new this(Random.floatArray(3));\n    return r;\n  }\n\n  static FromThreeJS(vec: THREE.Vector3) {\n    return new this(vec.x, vec.y, vec.z);\n  }\n\n  sstring() {\n    return `[${this.x},${this.y},${this.z}]`;\n  }\n\n  asThreeJS() {\n    return new THREE.Vector3(this.x, this.y, this.z);\n  }\n\n  getRotatedByQuaternion(q: Quaternion) {\n    const x = this.x,\n      y = this.y,\n      z = this.z;\n    const qx = -q.x,\n      qy = -q.y,\n      qz = -q.z,\n      qw = q.w;\n\n    // calculate quat * vector\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    let rval = new Vec3();\n    rval.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    rval.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    rval.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return rval;\n  }\n}\n\nexport function V3(...elements: any[]) {\n  return new Vec3(...elements);\n}\n\nfunction _Vec2DH(x: number, y: number) {\n  return new Vec3(x, y, 0);\n}\nfunction _Point2DH(x: number, y: number) {\n  return new Vec3(x, y, 1);\n}\n\nexport function Vec2DH(x: number, y: number): Vec3;\nexport function Vec2DH(vec2: Vec2): Vec3;\nexport function Vec2DH(xy: [number, number]): Vec3;\nexport function Vec2DH(...args: any[]) {\n  if (args[0] instanceof VectorBase) {\n    return _Vec2DH(args[0].x, args[0].y);\n  } else if (Array.isArray(args[0])) {\n    return _Vec2DH(args[0][0], args[0][1]);\n  } else {\n    return _Vec2DH(args[0], args[1]);\n  }\n}\n\nexport function Point2DH(x: number, y: number): Vec3;\nexport function Point2DH(vec2: Vec2): Vec3;\nexport function Point2DH(xy: [number, number]): Vec3;\nexport function Point2DH(...args: any[]) {\n  if (args[0] instanceof VectorBase) {\n    return _Point2DH(args[0].x, args[0].y);\n  } else if (Array.isArray(args[0])) {\n    return _Point2DH(args[0][0], args[0][1]);\n  } else {\n    return _Point2DH(args[0], args[1]);\n  }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}