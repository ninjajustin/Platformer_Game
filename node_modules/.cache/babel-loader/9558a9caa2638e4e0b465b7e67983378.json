{"ast":null,"code":"var _dec, _class;\nimport { _ANodeView } from \"../nodeView\";\nimport { ASerializable } from \"../../base\";\nexport let ACameraView = (_dec = ASerializable(\"ACameraView\"), _dec(_class = class ACameraView extends _ANodeView {\n  static Create(model) {\n    let cameraView = new ACameraView();\n    cameraView.setModel(model);\n    return cameraView;\n  }\n  get threejs() {\n    return this._threejs;\n  }\n  get model() {\n    return this._model;\n  }\n  setModel(model) {\n    super.setModel(model);\n    this.update();\n  }\n\n  // setModelListeners(){\n  //     const self=this;\n  //     this.unsubscribe(BASIC_VIEW_SUBSCRIPTIONS.MODEL_STATE_LISTENER, false);\n  //     this.subscribe(this.model.addStateListener(()=>{self.update()}));\n  //     this.unsubscribe(BASIC_VIEW_SUBSCRIPTIONS.MODEL_RELEASE_LISTENER, false);\n  //     this.subscribe(this.model.addEventListener(ANodeModel.Events.RELEASE, ()=>{self.dispose()}));\n  // }\n\n  init() {\n    this.threejs.matrixAutoUpdate = false;\n  }\n\n  // updateTransform() {\n  //     this.update();\n  // }\n\n  update() {\n    // this.model.camera.getProjection().assignTo(this.threejs.projectionMatrix);\n    // this.model.camera.getProjectionInverse().assignTo(this.threejs.projectionMatrixInverse);\n    // this.model.camera.getPose().getMatrix().assignTo(this.threejs.matrix);\n    // this.model.camera.getPose().getMatrix().assignTo(this.threejs.matrixWorld);\n    // this.threejs.matrixWorldInverse.copy( this.threejs.matrixWorld).invert();\n    this.model.camera.getProjection().assignTo(this.threejs.projectionMatrix);\n    this.model.camera.getProjectionInverse().assignTo(this.threejs.projectionMatrixInverse);\n    this.model.transform.getMat4().assignTo(this.threejs.matrix);\n    this.model.transform.getMat4().assignTo(this.threejs.matrixWorld);\n    this.threejs.matrixWorldInverse.copy(this.threejs.matrixWorld).invert();\n  }\n  dispose() {}\n  _initializeThreeJSObject() {\n    this._threejs = this.model.camera.CreateThreeJSCamera();\n  }\n}) || _class);","map":{"version":3,"names":["_ANodeView","ASerializable","ACameraView","Create","model","cameraView","setModel","threejs","_threejs","_model","update","init","matrixAutoUpdate","camera","getProjection","assignTo","projectionMatrix","getProjectionInverse","projectionMatrixInverse","transform","getMat4","matrix","matrixWorld","matrixWorldInverse","copy","invert","dispose","_initializeThreeJSObject","CreateThreeJSCamera"],"sources":["/Users/home/Desktop/College/Fall 2022/CS_4620/cs4620-final-project/src/anigraph/scene/camera/ACameraView.ts"],"sourcesContent":["import {ACameraModel} from \"./index\";\nimport {_ANodeView} from \"../nodeView\";\nimport * as THREE from \"three\";\nimport {ASerializable} from \"../../base\";\nimport {ANodeModel} from \"../nodeModel\";\n\n@ASerializable(\"ACameraView\")\nexport class ACameraView extends _ANodeView{\n\n    static Create(model:ACameraModel){\n        let cameraView = new ACameraView();\n        cameraView.setModel(model);\n        return cameraView;\n    }\n\n    get threejs():THREE.Camera{\n        return this._threejs as THREE.Camera;\n    }\n\n    get model():ACameraModel{\n        return this._model as ACameraModel;\n    }\n\n    setModel(model: ACameraModel) {\n        super.setModel(model);\n        this.update();\n    }\n\n    // setModelListeners(){\n    //     const self=this;\n    //     this.unsubscribe(BASIC_VIEW_SUBSCRIPTIONS.MODEL_STATE_LISTENER, false);\n    //     this.subscribe(this.model.addStateListener(()=>{self.update()}));\n    //     this.unsubscribe(BASIC_VIEW_SUBSCRIPTIONS.MODEL_RELEASE_LISTENER, false);\n    //     this.subscribe(this.model.addEventListener(ANodeModel.Events.RELEASE, ()=>{self.dispose()}));\n    // }\n\n    init():void{\n        this.threejs.matrixAutoUpdate=false;\n    }\n\n    // updateTransform() {\n    //     this.update();\n    // }\n\n    update():void{\n        // this.model.camera.getProjection().assignTo(this.threejs.projectionMatrix);\n        // this.model.camera.getProjectionInverse().assignTo(this.threejs.projectionMatrixInverse);\n        // this.model.camera.getPose().getMatrix().assignTo(this.threejs.matrix);\n        // this.model.camera.getPose().getMatrix().assignTo(this.threejs.matrixWorld);\n        // this.threejs.matrixWorldInverse.copy( this.threejs.matrixWorld).invert();\n        this.model.camera.getProjection().assignTo(this.threejs.projectionMatrix);\n        this.model.camera.getProjectionInverse().assignTo(this.threejs.projectionMatrixInverse);\n        this.model.transform.getMat4().assignTo(this.threejs.matrix);\n        this.model.transform.getMat4().assignTo(this.threejs.matrixWorld);\n        this.threejs.matrixWorldInverse.copy( this.threejs.matrixWorld).invert();\n    }\n\n    dispose(): void {\n    }\n\n    protected _initializeThreeJSObject(): void {\n        this._threejs = this.model.camera.CreateThreeJSCamera();\n    }\n\n}\n"],"mappings":";AACA,SAAQA,UAAU,QAAO,aAAa;AAEtC,SAAQC,aAAa,QAAO,YAAY;AAGxC,WACaC,WAAW,WADvBD,aAAa,CAAC,aAAa,CAAC,gBAA7B,MACaC,WAAW,SAASF,UAAU;EAEvC,OAAOG,MAAM,CAACC,KAAkB,EAAC;IAC7B,IAAIC,UAAU,GAAG,IAAIH,WAAW,EAAE;IAClCG,UAAU,CAACC,QAAQ,CAACF,KAAK,CAAC;IAC1B,OAAOC,UAAU;EACrB;EAEA,IAAIE,OAAO,GAAe;IACtB,OAAO,IAAI,CAACC,QAAQ;EACxB;EAEA,IAAIJ,KAAK,GAAe;IACpB,OAAO,IAAI,CAACK,MAAM;EACtB;EAEAH,QAAQ,CAACF,KAAmB,EAAE;IAC1B,KAAK,CAACE,QAAQ,CAACF,KAAK,CAAC;IACrB,IAAI,CAACM,MAAM,EAAE;EACjB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,IAAI,GAAO;IACP,IAAI,CAACJ,OAAO,CAACK,gBAAgB,GAAC,KAAK;EACvC;;EAEA;EACA;EACA;;EAEAF,MAAM,GAAO;IACT;IACA;IACA;IACA;IACA;IACA,IAAI,CAACN,KAAK,CAACS,MAAM,CAACC,aAAa,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACR,OAAO,CAACS,gBAAgB,CAAC;IACzE,IAAI,CAACZ,KAAK,CAACS,MAAM,CAACI,oBAAoB,EAAE,CAACF,QAAQ,CAAC,IAAI,CAACR,OAAO,CAACW,uBAAuB,CAAC;IACvF,IAAI,CAACd,KAAK,CAACe,SAAS,CAACC,OAAO,EAAE,CAACL,QAAQ,CAAC,IAAI,CAACR,OAAO,CAACc,MAAM,CAAC;IAC5D,IAAI,CAACjB,KAAK,CAACe,SAAS,CAACC,OAAO,EAAE,CAACL,QAAQ,CAAC,IAAI,CAACR,OAAO,CAACe,WAAW,CAAC;IACjE,IAAI,CAACf,OAAO,CAACgB,kBAAkB,CAACC,IAAI,CAAE,IAAI,CAACjB,OAAO,CAACe,WAAW,CAAC,CAACG,MAAM,EAAE;EAC5E;EAEAC,OAAO,GAAS,CAChB;EAEUC,wBAAwB,GAAS;IACvC,IAAI,CAACnB,QAAQ,GAAG,IAAI,CAACJ,KAAK,CAACS,MAAM,CAACe,mBAAmB,EAAE;EAC3D;AAEJ,CAAC"},"metadata":{},"sourceType":"module"}