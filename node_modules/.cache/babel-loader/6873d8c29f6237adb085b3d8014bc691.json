{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar react = require('react');\nvar proxyCompare = require('proxy-compare');\nvar useSyncExternalStoreExports = require('use-sync-external-store/shim');\nvar vanilla = require('valtio/vanilla');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar useSyncExternalStoreExports__default = /*#__PURE__*/_interopDefaultLegacy(useSyncExternalStoreExports);\nvar useSyncExternalStore = useSyncExternalStoreExports__default[\"default\"].useSyncExternalStore;\nvar useAffectedDebugValue = function useAffectedDebugValue(state, affected) {\n  var pathList = react.useRef();\n  react.useEffect(function () {\n    pathList.current = proxyCompare.affectedToPathList(state, affected);\n  });\n  react.useDebugValue(pathList.current);\n};\nfunction useSnapshot(proxyObject, options) {\n  var notifyInSync = options == null ? void 0 : options.sync;\n  var lastSnapshot = react.useRef();\n  var lastAffected = react.useRef();\n  var inRender = true;\n  var currSnapshot = useSyncExternalStore(react.useCallback(function (callback) {\n    var unsub = vanilla.subscribe(proxyObject, callback, notifyInSync);\n    callback();\n    return unsub;\n  }, [proxyObject, notifyInSync]), function () {\n    var nextSnapshot = vanilla.snapshot(proxyObject);\n    try {\n      if (!inRender && lastSnapshot.current && lastAffected.current && !proxyCompare.isChanged(lastSnapshot.current, nextSnapshot, lastAffected.current, new WeakMap())) {\n        return lastSnapshot.current;\n      }\n    } catch (e) {}\n    return nextSnapshot;\n  }, function () {\n    return vanilla.snapshot(proxyObject);\n  });\n  inRender = false;\n  var currAffected = new WeakMap();\n  react.useEffect(function () {\n    lastSnapshot.current = currSnapshot;\n    lastAffected.current = currAffected;\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    useAffectedDebugValue(currSnapshot, currAffected);\n  }\n  var proxyCache = react.useMemo(function () {\n    return new WeakMap();\n  }, []);\n  return proxyCompare.createProxy(currSnapshot, currAffected, proxyCache);\n}\nObject.defineProperty(exports, 'getVersion', {\n  enumerable: true,\n  get: function () {\n    return vanilla.getVersion;\n  }\n});\nObject.defineProperty(exports, 'proxy', {\n  enumerable: true,\n  get: function () {\n    return vanilla.proxy;\n  }\n});\nObject.defineProperty(exports, 'ref', {\n  enumerable: true,\n  get: function () {\n    return vanilla.ref;\n  }\n});\nObject.defineProperty(exports, 'snapshot', {\n  enumerable: true,\n  get: function () {\n    return vanilla.snapshot;\n  }\n});\nObject.defineProperty(exports, 'subscribe', {\n  enumerable: true,\n  get: function () {\n    return vanilla.subscribe;\n  }\n});\nObject.defineProperty(exports, 'unstable_getHandler', {\n  enumerable: true,\n  get: function () {\n    return vanilla.getHandler;\n  }\n});\nexports.useSnapshot = useSnapshot;","map":null,"metadata":{},"sourceType":"script"}