{"ast":null,"code":"var _dec, _class, _class2;\nimport { ANodeModel3D } from \"../../nodeModel\";\nimport { ASerializable } from \"../../../base\";\nimport { ATerrainShaderModel } from \"../../../rendering/shadermodels/ATerrainShaderModel\";\nexport let ATerrainModel = (_dec = ASerializable(\"ATerrainModel\"), _dec(_class = (_class2 = class ATerrainModel extends ANodeModel3D {\n  static async LoadShader() {\n    this.ShaderModel = await this.ShaderModelClass.CreateModel(\"terrain\");\n  }\n  get material() {\n    return this._material;\n  }\n  constructor(width, height, widthSegments, heightSegments, transform) {\n    super();\n    this.width = 1;\n    this.height = 1;\n    this.widthSegments = 128;\n    this.heightSegments = 128;\n    this.diffuseMap = void 0;\n    this.heightMap = void 0;\n    if (width !== undefined) {\n      this.width = width;\n    }\n    ;\n    if (height !== undefined) {\n      this.height = height;\n    }\n    if (widthSegments !== undefined) {\n      this.widthSegments = widthSegments;\n    }\n    if (heightSegments !== undefined) {\n      this.heightSegments = heightSegments;\n    }\n    if (transform) {\n      this.setTransform(transform);\n    }\n  }\n}, _class2.ShaderModelClass = ATerrainShaderModel, _class2.ShaderModel = void 0, _class2)) || _class);","map":{"version":3,"names":["ANodeModel3D","ASerializable","ATerrainShaderModel","ATerrainModel","LoadShader","ShaderModel","ShaderModelClass","CreateModel","material","_material","constructor","width","height","widthSegments","heightSegments","transform","diffuseMap","heightMap","undefined","setTransform"],"sources":["/Users/home/Desktop/cs4620-final-project/src/anigraph/scene/nodes/terrain/ATerrainModel.ts"],"sourcesContent":["import {ATriangleMeshModel} from \"../trianglemesh\";\nimport {SeededRandom, Vec2, Vec3} from \"../../../math\";\nimport {VertexArray3D} from \"../../../geometry\";\nimport {ANodeModel3D} from \"../../nodeModel\";\nimport {AObjectState, ASerializable} from \"../../../base\";\nimport type {TransformationInterface} from \"../../../math\";\nimport {AShaderMaterial, AShaderModel, CreatesShaderModels} from \"../../../rendering\";\nimport {PlaneGeometryParameters} from \"../../../rendering/graphicelements/APlaneGraphic\";\nimport {ATerrainShaderModel} from \"../../../rendering/shadermodels/ATerrainShaderModel\";\nimport {ATexture} from \"../../../rendering/ATexture\";\nimport {ADataTextureFloat1D} from \"../../../rendering/image\";\nimport * as THREE from \"three\";\nimport {makeNoise2D} from \"fast-simplex-noise\";\nimport {ClassInterface} from \"../../../basictypes\";\n\n\n@ASerializable(\"ATerrainModel\")\nexport abstract class ATerrainModel extends ANodeModel3D implements PlaneGeometryParameters{\n    static ShaderModelClass:CreatesShaderModels=ATerrainShaderModel;\n    static ShaderModel:ATerrainShaderModel;\n\n    static async LoadShader(...args:any[]){\n        this.ShaderModel = await this.ShaderModelClass.CreateModel(\"terrain\")\n    }\n\n    width:number=1;\n    height:number=1;\n    widthSegments:number=128;\n    heightSegments:number=128;\n    diffuseMap!:ATexture;\n    heightMap!:ADataTextureFloat1D;\n\n    get material():AShaderMaterial{\n        return this._material as AShaderMaterial;\n    }\n\n    constructor(\n        width?:number,\n        height?:number,\n        widthSegments?:number,\n        heightSegments?:number,\n        transform?:TransformationInterface) {\n        super();\n        if(width!==undefined){this.width=width};\n        if(height!==undefined){this.height=height;}\n        if(widthSegments!==undefined){this.widthSegments=widthSegments;}\n        if(heightSegments!==undefined){this.heightSegments=heightSegments;}\n        if(transform){\n            this.setTransform(transform);\n        }\n    }\n\n    abstract getTerrainHeightAtPoint(xy:Vec2):number;\n}\n\n\n\n\n\n\n"],"mappings":";AAGA,SAAQA,YAAY,QAAO,iBAAiB;AAC5C,SAAsBC,aAAa,QAAO,eAAe;AAIzD,SAAQC,mBAAmB,QAAO,qDAAqD;AAQvF,WACsBC,aAAa,WADlCF,aAAa,CAAC,eAAe,CAAC,2BAA/B,MACsBE,aAAa,SAASH,YAAY,CAAmC;EAIvF,aAAaI,UAAU,GAAe;IAClC,IAAI,CAACC,WAAW,GAAG,MAAM,IAAI,CAACC,gBAAgB,CAACC,WAAW,CAAC,SAAS,CAAC;EACzE;EASA,IAAIC,QAAQ,GAAkB;IAC1B,OAAO,IAAI,CAACC,SAAS;EACzB;EAEAC,WAAW,CACPC,KAAa,EACbC,MAAc,EACdC,aAAqB,EACrBC,cAAsB,EACtBC,SAAkC,EAAE;IACpC,KAAK,EAAE;IAAC,KAjBZJ,KAAK,GAAQ,CAAC;IAAA,KACdC,MAAM,GAAQ,CAAC;IAAA,KACfC,aAAa,GAAQ,GAAG;IAAA,KACxBC,cAAc,GAAQ,GAAG;IAAA,KACzBE,UAAU;IAAA,KACVC,SAAS;IAaL,IAAGN,KAAK,KAAGO,SAAS,EAAC;MAAC,IAAI,CAACP,KAAK,GAACA,KAAK;IAAA;IAAC;IACvC,IAAGC,MAAM,KAAGM,SAAS,EAAC;MAAC,IAAI,CAACN,MAAM,GAACA,MAAM;IAAC;IAC1C,IAAGC,aAAa,KAAGK,SAAS,EAAC;MAAC,IAAI,CAACL,aAAa,GAACA,aAAa;IAAC;IAC/D,IAAGC,cAAc,KAAGI,SAAS,EAAC;MAAC,IAAI,CAACJ,cAAc,GAACA,cAAc;IAAC;IAClE,IAAGC,SAAS,EAAC;MACT,IAAI,CAACI,YAAY,CAACJ,SAAS,CAAC;IAChC;EACJ;AAGJ,CAAC,UAnCUT,gBAAgB,GAAqBJ,mBAAmB,UACxDG,WAAW"},"metadata":{},"sourceType":"module"}