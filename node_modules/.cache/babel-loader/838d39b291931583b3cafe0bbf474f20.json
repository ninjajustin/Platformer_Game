{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/cs4620-final-project/src/anigraph/components/ControlPanel.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { LevaPanel, levaStore, useControls, useCreateStore } from \"leva\";\nimport { AAppState } from \"../base/AAppState\";\nimport { useSnapshot } from \"valtio\";\n\n// @ts-ignore\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RenewStore(_ref) {\n  _s();\n  let {\n    controlSpecs,\n    setStore\n  } = _ref;\n  const store = useCreateStore();\n  useEffect(() => {\n    setStore(store);\n  }, [setStore, store]);\n  useControls(controlSpecs, {\n    store\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(RenewStore, \"WOmwuAj2MAx0iiLRQ8f4Ohz9UCE=\", false, function () {\n  return [useCreateStore, useControls];\n});\n_c = RenewStore;\nexport function ControlPanel(props) {\n  _s2();\n  // let standardControls = AAppState.GetAppState().getControlPanelStandardSpec();\n  const [store, setStore] = useState(levaStore);\n  const state = useSnapshot(props.appState.stateValues);\n  // const selectionModelState = useSnapshot(appState.selectionModel.state);\n  props.appState.addControlPanelListener(() => {\n    props.appState._guiKey = uuidv4();\n    // setState(`${Object.keys(appState.GUIControlSpecs)}`);\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LevaPanel, {\n      store: store\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RenewStore, {\n      controlSpecs: props.appState.GUIControlSpecs,\n      setStore: setStore\n    }, state[AAppState.AppStateDefaultKeys.GUI_KEY], false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n//\n// export function ControlPanel(props:ControlPanelProps){\n//\n//     let standardControls = AAppState.GetAppState().getControlPanelStandardSpec();\n//     const [store, setStore] = useState(levaStore);\n//     const state = useSnapshot(appState.state);\n//\n//     const [state, setState] = useState(uuidv4());\n//     appState.addControlPanelListener(()=>{\n//         // setState(uuidv4());\n//         setState(`${Object.keys(appState.GUIControlSpecs)}`);\n//     })\n//     useControls(props.appState.GUIControlSpecs);\n//     return(\n//         <>\n//             <LevaPanel store={store} />\n//             <RenewStore\n//                 key={state._guiKey}\n//                 controlSpecs={{\n//                     ...standardControls,\n//                     ModelGUI: folder({\n//                         ...appState.selectionModel.getModelGUIControlSpecs(),\n//                     }),\n//                 }}\n//                 setStore={setStore}\n//             />\n//         </>\n//     )\n// }\n_s2(ControlPanel, \"8w58SpuA3GBk2KoixBknlBZFipg=\", false, function () {\n  return [useSnapshot];\n});\n_c2 = ControlPanel;\nvar _c, _c2;\n$RefreshReg$(_c, \"RenewStore\");\n$RefreshReg$(_c2, \"ControlPanel\");","map":{"version":3,"names":["React","useEffect","useState","v4","uuidv4","LevaPanel","levaStore","useControls","useCreateStore","AAppState","useSnapshot","RenewStore","controlSpecs","setStore","store","ControlPanel","props","state","appState","stateValues","addControlPanelListener","_guiKey","GUIControlSpecs","AppStateDefaultKeys","GUI_KEY"],"sources":["/Users/home/Desktop/cs4620-final-project/src/anigraph/components/ControlPanel.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {folder, LevaPanel, levaStore, useControls, useCreateStore} from \"leva\";\nimport {AAppState} from \"../base/AAppState\";\nimport {useSnapshot} from \"valtio\";\n\n// @ts-ignore\nfunction RenewStore({ controlSpecs, setStore }) {\n    const store = useCreateStore();\n    useEffect(() => {\n        setStore(store);\n    }, [setStore, store]);\n    useControls(controlSpecs, { store });\n    return <></>;\n}\n\ntype ControlPanelProps = {\n    appState:AAppState;\n}\n\n\nexport function ControlPanel(props:ControlPanelProps) {\n    // let standardControls = AAppState.GetAppState().getControlPanelStandardSpec();\n    const [store, setStore] = useState(levaStore);\n    const state = useSnapshot(props.appState.stateValues);\n    // const selectionModelState = useSnapshot(appState.selectionModel.state);\n    props.appState.addControlPanelListener(()=>{\n        props.appState._guiKey=uuidv4();\n        // setState(`${Object.keys(appState.GUIControlSpecs)}`);\n    })\n\n    return (\n        <>\n            <LevaPanel store={store} />\n            <RenewStore\n                key={state[AAppState.AppStateDefaultKeys.GUI_KEY]}\n                controlSpecs={props.appState.GUIControlSpecs}\n                setStore={setStore}\n            />\n        </>\n    );\n}\n\n//\n// export function ControlPanel(props:ControlPanelProps){\n//\n//     let standardControls = AAppState.GetAppState().getControlPanelStandardSpec();\n//     const [store, setStore] = useState(levaStore);\n//     const state = useSnapshot(appState.state);\n//\n//     const [state, setState] = useState(uuidv4());\n//     appState.addControlPanelListener(()=>{\n//         // setState(uuidv4());\n//         setState(`${Object.keys(appState.GUIControlSpecs)}`);\n//     })\n//     useControls(props.appState.GUIControlSpecs);\n//     return(\n//         <>\n//             <LevaPanel store={store} />\n//             <RenewStore\n//                 key={state._guiKey}\n//                 controlSpecs={{\n//                     ...standardControls,\n//                     ModelGUI: folder({\n//                         ...appState.selectionModel.getModelGUIControlSpecs(),\n//                     }),\n//                 }}\n//                 setStore={setStore}\n//             />\n//         </>\n//     )\n// }\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,EAAE,IAAIC,MAAM,QAAO,MAAM;AACjC,SAAgBC,SAAS,EAAEC,SAAS,EAAEC,WAAW,EAAEC,cAAc,QAAO,MAAM;AAC9E,SAAQC,SAAS,QAAO,mBAAmB;AAC3C,SAAQC,WAAW,QAAO,QAAQ;;AAElC;AAAA;AAAA;AACA,SAASC,UAAU,OAA6B;EAAA;EAAA,IAA5B;IAAEC,YAAY;IAAEC;EAAS,CAAC;EAC1C,MAAMC,KAAK,GAAGN,cAAc,EAAE;EAC9BP,SAAS,CAAC,MAAM;IACZY,QAAQ,CAACC,KAAK,CAAC;EACnB,CAAC,EAAE,CAACD,QAAQ,EAAEC,KAAK,CAAC,CAAC;EACrBP,WAAW,CAACK,YAAY,EAAE;IAAEE;EAAM,CAAC,CAAC;EACpC,oBAAO,qCAAK;AAChB;AAAC,GAPQH,UAAU;EAAA,QACDH,cAAc,EAI5BD,WAAW;AAAA;AAAA,KALNI,UAAU;AAcnB,OAAO,SAASI,YAAY,CAACC,KAAuB,EAAE;EAAA;EAClD;EACA,MAAM,CAACF,KAAK,EAAED,QAAQ,CAAC,GAAGX,QAAQ,CAACI,SAAS,CAAC;EAC7C,MAAMW,KAAK,GAAGP,WAAW,CAACM,KAAK,CAACE,QAAQ,CAACC,WAAW,CAAC;EACrD;EACAH,KAAK,CAACE,QAAQ,CAACE,uBAAuB,CAAC,MAAI;IACvCJ,KAAK,CAACE,QAAQ,CAACG,OAAO,GAACjB,MAAM,EAAE;IAC/B;EACJ,CAAC,CAAC;;EAEF,oBACI;IAAA,wBACI,QAAC,SAAS;MAAC,KAAK,EAAEU;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAC3B,QAAC,UAAU;MAEP,YAAY,EAAEE,KAAK,CAACE,QAAQ,CAACI,eAAgB;MAC7C,QAAQ,EAAET;IAAS,GAFdI,KAAK,CAACR,SAAS,CAACc,mBAAmB,CAACC,OAAO,CAAC;MAAA;MAAA;MAAA;IAAA,QAGnD;EAAA,gBACH;AAEX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAlDgBT,YAAY;EAAA,QAGVL,WAAW;AAAA;AAAA,MAHbK,YAAY;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}