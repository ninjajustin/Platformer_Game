{"ast":null,"code":"var _dec, _class;\nimport { Matrix } from \"../Matrix\";\nimport { VectorBase } from \"../VectorBase\";\nimport { Vec4 } from \"./Vec4\";\nimport assert from \"assert\";\nimport { Random } from \"../../Random\";\nimport { ASerializable } from \"../../../base\";\nimport { Mat3 } from \"../2D\";\nimport * as THREE from \"three\";\nimport { AniGraphDefines } from \"../../../defines\";\nimport { Color } from \"../../Color\";\nimport { Quaternion } from \"./Quaternion\";\nexport let Mat4 = (_dec = ASerializable(\"Mat4\"), _dec(_class = class Mat4 extends Matrix {\n  constructor() {\n    // common logic constructor\n    super(...arguments);\n  }\n  getMat4() {\n    return this;\n  }\n  setPosition(position) {\n    this.m30 = position.x;\n    this.m31 = position.y;\n    this.m32 = position.z;\n  }\n  getPosition() {\n    return this.c3.Point3D;\n  }\n  _getQuaternionRotation() {\n    return Quaternion.FromMatrix(this);\n  }\n  _setQuaternionRotation(q) {\n    let p = this.getPosition();\n    this.elements = q.getMatrix().elements;\n    this.setPosition(p);\n  }\n  getElement(row, col) {\n    return this.elements[4 * row + col];\n  }\n  setToIdentity() {\n    this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n  }\n  set m00(value) {\n    this.elements[0] = value;\n  }\n  get m00() {\n    return this.elements[0];\n  }\n  set m01(value) {\n    this.elements[1] = value;\n  }\n  get m01() {\n    return this.elements[1];\n  }\n  set m02(value) {\n    this.elements[2] = value;\n  }\n  get m02() {\n    return this.elements[2];\n  }\n  set m03(value) {\n    this.elements[3] = value;\n  }\n  get m03() {\n    return this.elements[3];\n  }\n  set m10(value) {\n    this.elements[4] = value;\n  }\n  get m10() {\n    return this.elements[4];\n  }\n  set m11(value) {\n    this.elements[5] = value;\n  }\n  get m11() {\n    return this.elements[5];\n  }\n  set m12(value) {\n    this.elements[6] = value;\n  }\n  get m12() {\n    return this.elements[6];\n  }\n  set m13(value) {\n    this.elements[7] = value;\n  }\n  get m13() {\n    return this.elements[7];\n  }\n  set m20(value) {\n    this.elements[8] = value;\n  }\n  get m20() {\n    return this.elements[8];\n  }\n  set m21(value) {\n    this.elements[9] = value;\n  }\n  get m21() {\n    return this.elements[9];\n  }\n  set m22(value) {\n    this.elements[10] = value;\n  }\n  get m22() {\n    return this.elements[10];\n  }\n  set m23(value) {\n    this.elements[11] = value;\n  }\n  get m23() {\n    return this.elements[11];\n  }\n  set m30(value) {\n    this.elements[12] = value;\n  }\n  get m30() {\n    return this.elements[12];\n  }\n  set m31(value) {\n    this.elements[13] = value;\n  }\n  get m31() {\n    return this.elements[13];\n  }\n  set m32(value) {\n    this.elements[14] = value;\n  }\n  get m32() {\n    return this.elements[14];\n  }\n  set m33(value) {\n    this.elements[15] = value;\n  }\n  get m33() {\n    return this.elements[15];\n  }\n  set c0(value) {\n    this.m00 = value.x;\n    this.m10 = value.y;\n    this.m20 = value.z;\n    this.m30 = value.h;\n  }\n  get c0() {\n    return new Vec4(this.m00, this.m10, this.m20, this.m30);\n  }\n  set c1(value) {\n    this.m01 = value.x;\n    this.m11 = value.y;\n    this.m21 = value.z;\n    this.m31 = value.h;\n  }\n  get c1() {\n    return new Vec4(this.m01, this.m11, this.m21, this.m31);\n  }\n  set c2(value) {\n    this.m02 = value.x;\n    this.m12 = value.y;\n    this.m22 = value.z;\n    this.m32 = value.h;\n  }\n  get c2() {\n    return new Vec4(this.m02, this.m12, this.m22, this.m32);\n  }\n  set c3(value) {\n    this.m03 = value.x;\n    this.m13 = value.y;\n    this.m23 = value.z;\n    this.m33 = value.h;\n  }\n  get c3() {\n    return new Vec4(this.m03, this.m13, this.m23, this.m33);\n  }\n\n  /** Get set r0 */\n  set r0(value) {\n    this.m00 = value.x;\n    this.m01 = value.y;\n    this.m02 = value.z;\n    this.m03 = value.h;\n  }\n  get r0() {\n    return new Vec4(this.m00, this.m01, this.m02, this.m03);\n  }\n  set r1(value) {\n    this.m10 = value.x;\n    this.m11 = value.y;\n    this.m12 = value.z;\n    this.m13 = value.h;\n  }\n  get r1() {\n    return new Vec4(this.m10, this.m11, this.m12, this.m13);\n  }\n  set r2(value) {\n    this.m20 = value.x;\n    this.m21 = value.y;\n    this.m22 = value.z;\n    this.m23 = value.h;\n  }\n  get r2() {\n    return new Vec4(this.m20, this.m21, this.m22, this.m23);\n  }\n  set r3(value) {\n    this.m30 = value.x;\n    this.m31 = value.y;\n    this.m32 = value.z;\n    this.m33 = value.h;\n  }\n  get r3() {\n    return new Vec4(this.m30, this.m31, this.m32, this.m33);\n  }\n  static FromColumns(c0, c1, c2, c3) {\n    var r = new this();\n    r.c0 = c0;\n    r.c1 = c1;\n    r.c2 = c2;\n    r.c3 = c3;\n    return r;\n  }\n  static FromRows(r0, r1, r2, r3) {\n    var r = new this();\n    r.r0 = r0;\n    r.r1 = r1;\n    r.r2 = r2;\n    r.r3 = r3;\n    return r;\n  }\n\n  //##################//--TransformationMatrices--\\\\##################\n  //<editor-fold desc=\"TransformationMatrices\">\n\n  static Identity() {\n    return new Mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n  }\n  static From2DMat3(m) {\n    return new Mat4(m.m00, m.m01, 0, m.m02, m.m10, m.m11, 0, m.m12, 0, 0, 1, 0, m.m20, m.m21, 0, m.m22);\n  }\n  static FromMat3Linear(m) {\n    return new Mat4(m.m00, m.m01, m.m02, 0, m.m10, m.m11, m.m12, 0, m.m20, m.m21, m.m22, 0, 0, 0, 0, 1);\n  }\n  static Scale3D() {\n    function scalematfromarray(a) {\n      let rmat = new Mat4();\n      if (a.length > 0) {\n        rmat.m00 = a[0];\n        if (a.length > 1) {\n          rmat.m11 = a[1];\n          if (a.length > 2) {\n            rmat.m22 = a[2];\n            if (a.length > 3) {\n              // console.warn(\"Don't specify scale matrices with 4 arguments. Scaling the homogeneous coordinate is bad form...\");\n              assert(a.length === 4, \"Scale arguments too long\");\n              rmat.m33 = a[3];\n            }\n          }\n        }\n      }\n      return rmat;\n    }\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    assert(args.length > 0, \"Cannot call Mat4.Scale() with no arguments\");\n    if (typeof args[0] === \"number\") {\n      let rmat = new Mat4();\n      rmat.m00 = args[0];\n      rmat.m11 = args[0];\n      rmat.m22 = args[0];\n      return rmat;\n    } else if (Array.isArray(args[0])) {\n      return scalematfromarray(args[0]);\n    } else if (args[0] instanceof VectorBase) {\n      return scalematfromarray(args[0].elements);\n    } else {\n      return scalematfromarray(args[0]);\n    }\n  }\n\n  // setElementsColumnMajor(\n  //     m00:number, m10?:number, m20?:number, m30?:number,\n  //     m01?:number, m11?:number, m21?:number, m31?:number,\n  //     m02?:number, m12?:number, m22?:number, m32?:number,\n  //     m03?:number, m13?:number, m23?:number, m33?:number):this;\n  // setElementsColumnMajor(...args:any[]){\n  setElementsColumnMajor(columnMajorElements) {\n    if (columnMajorElements.length !== 16) {\n      throw new Error(\"Bad elementsTransposed length for setting Mat4 column major\");\n    }\n    ;\n    this.elements = [columnMajorElements[0], columnMajorElements[4], columnMajorElements[8], columnMajorElements[12], columnMajorElements[1], columnMajorElements[5], columnMajorElements[9], columnMajorElements[13], columnMajorElements[2], columnMajorElements[6], columnMajorElements[10], columnMajorElements[14], columnMajorElements[3], columnMajorElements[7], columnMajorElements[11], columnMajorElements[15]];\n    return this;\n    // else {\n    //     this.elements = [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33];\n    // }\n  }\n\n  static FromElementsColumnMajor(columnMajorElements) {\n    return new Mat4(columnMajorElements[0], columnMajorElements[4], columnMajorElements[8], columnMajorElements[12], columnMajorElements[1], columnMajorElements[5], columnMajorElements[9], columnMajorElements[13], columnMajorElements[2], columnMajorElements[6], columnMajorElements[10], columnMajorElements[14], columnMajorElements[3], columnMajorElements[7], columnMajorElements[11], columnMajorElements[15]);\n  }\n  static Scale2D() {\n    function scalematfromarray(a) {\n      let rmat = new Mat4();\n      if (a.length > 0) {\n        rmat.m00 = a[0];\n        if (a.length > 1) {\n          assert(a.length === 2, \"Scale2D arguments too long\");\n          rmat.m11 = a[1];\n        }\n      }\n      return rmat;\n    }\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    assert(args.length > 0, \"Cannot call Mat4.Scale2D() with no arguments\");\n    if (typeof args[0] === \"number\") {\n      let rmat = new Mat4();\n      rmat.m00 = args[0];\n      rmat.m11 = args[0];\n      return rmat;\n    } else if (Array.isArray(args[0])) {\n      return scalematfromarray(args[0]);\n    } else if (args[0] instanceof VectorBase) {\n      return scalematfromarray(args[0].elements);\n    } else {\n      return scalematfromarray(args);\n    }\n  }\n  static Translation3D() {\n    function tmatfromarray(a) {\n      let rmat = new Mat4();\n      rmat.m03 = a[0];\n      rmat.m13 = a[1];\n      rmat.m23 = a[2];\n      return rmat;\n    }\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    assert(args.length > 0, \"Cannot call Mat4.Translation3D() with no arguments\");\n    if (Array.isArray(args[0])) {\n      return tmatfromarray(args[0]);\n    } else if (args[0] instanceof VectorBase) {\n      return tmatfromarray(args[0].elements);\n    } else {\n      assert(args.length === 3, `wrong number of args for Mat4.Translation3D: ${args}`);\n      return tmatfromarray(args);\n    }\n  }\n  static Translation2D() {\n    function tmatfromarray(a) {\n      let rmat = new Mat4();\n      rmat.m03 = a[0];\n      rmat.m13 = a[1];\n      return rmat;\n    }\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    assert(args.length > 0, \"Cannot call Mat4.Translation2D() with no arguments\");\n    if (Array.isArray(args[0])) {\n      return tmatfromarray(args[0]);\n    } else if (args[0] instanceof VectorBase) {\n      return tmatfromarray(args[0].elements);\n    } else {\n      assert(args.length === 2, \"wrong number of args for Mat4.Translation2D\");\n      return tmatfromarray(args);\n    }\n  }\n  getLinearPart() {\n    return new Mat3(this.m00, this.m01, this.m02, this.m10, this.m11, this.m12, this.m20, this.m21, this.m22);\n  }\n  //</editor-fold>\n  //##################\\\\--TransformationMatrices--//##################\n\n  //##################//--fill matrices--\\\\##################\n  //<editor-fold desc=\"fill matrices\">\n  static Random() {\n    var r = new this(Random.floatArray(16));\n    return r;\n  }\n  static Zeros() {\n    let z = new Array(16);\n    for (let i = 0; i < 16; ++i) z[i] = 0;\n    var r = new this(z);\n    return r;\n  }\n  static Ones() {\n    let z = new Array(16);\n    for (let i = 0; i < 16; ++i) z[i] = 1;\n    var r = new this(z);\n    return r;\n  }\n  //</editor-fold>\n  //##################\\\\--fill matrices--//##################\n\n  _convertOCV2OGL() {\n    // this.m10 = -this.m10;\n    // this.m11 = -this.m11;\n    // this.m12 = -this.m12;\n    // this.m20 = -this.m20;\n    // this.m21 = -this.m21;\n    // this.m22 = -this.m22;\n    // this.m10 = -this.m10;\n    // this.m11 = -this.m11;\n    // this.m12 = -this.m12;\n    // this.m20 = -this.m20;\n    // this.m21 = -this.m21;\n    // this.m22 = -this.m22;\n\n    // this.c1 = this.c1.times(-1);\n    // this.c2 = this.c2.times(-1);\n    // this.m00 = -this.m00;\n    // this.m01 = -this.m01;\n    // this.m02 = -this.m02;\n\n    this.m10 = -this.m10;\n    this.m11 = -this.m11;\n    this.m12 = -this.m12;\n    this.m13 = -this.m13;\n    this.m20 = -this.m20;\n    this.m21 = -this.m21;\n    this.m23 = -this.m23;\n\n    // for(let j=4;j<12;j++){\n    //     this.elements[j]=-this.elements[j];\n    // }\n  }\n\n  //##################//--Determinant and Inverse--\\\\##################\n  //<editor-fold desc=\"Determinant and Inverse\">\n\n  getInverse() {\n    let m = this.clone();\n    return m.invert();\n  }\n  getTranspose() {\n    return new Mat4(this.elements[0], this.elements[4], this.elements[8], this.elements[12], this.elements[1], this.elements[5], this.elements[9], this.elements[13], this.elements[2], this.elements[6], this.elements[10], this.elements[14], this.elements[3], this.elements[7], this.elements[11], this.elements[15]);\n  }\n  invert() {\n    // based on the three.js implementation\n    const te = this.getTranspose().elements,\n      n11 = te[0],\n      n21 = te[1],\n      n31 = te[2],\n      n41 = te[3],\n      n12 = te[4],\n      n22 = te[5],\n      n32 = te[6],\n      n42 = te[7],\n      n13 = te[8],\n      n23 = te[9],\n      n33 = te[10],\n      n43 = te[11],\n      n14 = te[12],\n      n24 = te[13],\n      n34 = te[14],\n      n44 = te[15],\n      t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n      t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n      t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n      t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n    const det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n    if (det === 0) {\n      this.elements = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      return this;\n    }\n    const detInv = 1 / det;\n    te[0] = t11 * detInv;\n    te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n    te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n    te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n    te[4] = t12 * detInv;\n    te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n    te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n    te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n    te[8] = t13 * detInv;\n    te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n    te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n    te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n    te[12] = t14 * detInv;\n    te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n    te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n    te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n    this.setElementsColumnMajor(te);\n    return this;\n  }\n\n  /**\n   * Returns the determinant of the matrix. Method based on gl-mat4's implementation.\n   */\n  determinant() {\n    let b00 = this.m00 * this.m11 - this.m01 * this.m10;\n    let b01 = this.m00 * this.m12 - this.m02 * this.m10;\n    let b02 = this.m00 * this.m13 - this.m03 * this.m10;\n    let b03 = this.m01 * this.m12 - this.m02 * this.m11;\n    let b04 = this.m01 * this.m13 - this.m03 * this.m11;\n    let b05 = this.m02 * this.m13 - this.m03 * this.m12;\n    let b06 = this.m20 * this.m31 - this.m21 * this.m30;\n    let b07 = this.m20 * this.m32 - this.m22 * this.m30;\n    let b08 = this.m20 * this.m33 - this.m23 * this.m30;\n    let b09 = this.m21 * this.m32 - this.m22 * this.m31;\n    let b10 = this.m21 * this.m33 - this.m23 * this.m31;\n    let b11 = this.m22 * this.m33 - this.m23 * this.m32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n  }\n\n  //</editor-fold>\n  //##################\\\\--Determinant and Inverse--//##################\n\n  times(other) {\n    if (other instanceof Mat4) {\n      return this._timesMatrix(other);\n    } else if (other instanceof Vec4) {\n      return this._timesVector(other);\n    } else if (other instanceof Color) {\n      return new Color(other.elements[0] * this.m00 + other.elements[1] * this.m01 + other.elements[2] * this.m02 + other.a * this.m03, other.elements[0] * this.m10 + other.elements[1] * this.m11 + other.elements[2] * this.m12 + other.a * this.m13, other.elements[0] * this.m20 + other.elements[1] * this.m21 + other.elements[2] * this.m22 + other.a * this.m23, other.elements[0] * this.m30 + other.elements[1] * this.m31 + other.elements[2] * this.m32 + other.a * this.m33);\n    } else if (typeof other === 'number') {\n      let cfunc = this.constructor;\n      var m = new cfunc();\n      for (let i = 0; i < m.elements.length; i++) {\n        m.elements[i] = this.elements[i] * other;\n      }\n      return m;\n    }\n    throw new Error(\"Tried to do Mat4.times(other) with other not a matrix, vector, or scalar...\");\n  }\n  _timesVector(v) {\n    return new Vec4(v.elements[0] * this.m00 + v.elements[1] * this.m01 + v.elements[2] * this.m02 + v.elements[3] * this.m03, v.elements[0] * this.m10 + v.elements[1] * this.m11 + v.elements[2] * this.m12 + v.elements[3] * this.m13, v.elements[0] * this.m20 + v.elements[1] * this.m21 + v.elements[2] * this.m22 + v.elements[3] * this.m23, v.elements[0] * this.m30 + v.elements[1] * this.m31 + v.elements[2] * this.m32 + v.elements[3] * this.m33);\n  }\n  appliedToPoint(p) {\n    return this.times(p.Point3DH).Point3D;\n  }\n\n  //</editor-fold>\n  //##################\\\\--Matrix Multiplication--//##################\n\n  _timesMatrix(m) {\n    // let cfunc: any = (this.constructor as any);\n    return new Mat4(this.m00 * m.m00 + this.m01 * m.m10 + this.m02 * m.m20 + this.m03 * m.m30, this.m00 * m.m01 + this.m01 * m.m11 + this.m02 * m.m21 + this.m03 * m.m31, this.m00 * m.m02 + this.m01 * m.m12 + this.m02 * m.m22 + this.m03 * m.m32, this.m00 * m.m03 + this.m01 * m.m13 + this.m02 * m.m23 + this.m03 * m.m33, this.m10 * m.m00 + this.m11 * m.m10 + this.m12 * m.m20 + this.m13 * m.m30, this.m10 * m.m01 + this.m11 * m.m11 + this.m12 * m.m21 + this.m13 * m.m31, this.m10 * m.m02 + this.m11 * m.m12 + this.m12 * m.m22 + this.m13 * m.m32, this.m10 * m.m03 + this.m11 * m.m13 + this.m12 * m.m23 + this.m13 * m.m33, this.m20 * m.m00 + this.m21 * m.m10 + this.m22 * m.m20 + this.m23 * m.m30, this.m20 * m.m01 + this.m21 * m.m11 + this.m22 * m.m21 + this.m23 * m.m31, this.m20 * m.m02 + this.m21 * m.m12 + this.m22 * m.m22 + this.m23 * m.m32, this.m20 * m.m03 + this.m21 * m.m13 + this.m22 * m.m23 + this.m23 * m.m33, this.m30 * m.m00 + this.m31 * m.m10 + this.m32 * m.m20 + this.m33 * m.m30, this.m30 * m.m01 + this.m31 * m.m11 + this.m32 * m.m21 + this.m33 * m.m31, this.m30 * m.m02 + this.m31 * m.m12 + this.m32 * m.m22 + this.m33 * m.m32, this.m30 * m.m03 + this.m31 * m.m13 + this.m32 * m.m23 + this.m33 * m.m33);\n  }\n  toJSON() {\n    var rval = {};\n    for (let k in this) {\n      // @ts-ignore\n      rval[k] = this[k];\n    }\n    return rval;\n  }\n  static FromThreeJS(m) {\n    return Mat4.FromElementsColumnMajor(m.elements);\n    // let ma = new Mat4(m.elements);\n    // let ma = Mat4.FromElementsColumnMajor(m.elements);\n    // return ma.getTranspose();\n  }\n  // public toTHREE(){\n  //     let m = new THREE.Matrix4();\n  //     m.set(this.elements[0], this.elements[1], this.elements[2], this.elements[3],\n  //         this.elements[4], this.elements[5], this.elements[6], this.elements[7],\n  //         this.elements[8], this.elements[9], this.elements[10], this.elements[11],\n  //         this.elements[12], this.elements[13], this.elements[14], this.elements[15]);\n  //     return m;\n  // }\n\n  static FromEulerAngles(x, y, z) {\n    const a = Math.cos(x),\n      b = Math.sin(x);\n    const c = Math.cos(y),\n      d = Math.sin(y);\n    const e = Math.cos(z),\n      f = Math.sin(z);\n    const ae = a * e,\n      af = a * f,\n      be = b * e,\n      bf = b * f;\n    let rmat = new Mat4();\n    rmat.elements[0] = c * e;\n    rmat.elements[4] = -c * f;\n    rmat.elements[8] = d;\n    rmat.elements[1] = af + be * d;\n    rmat.elements[5] = ae - bf * d;\n    rmat.elements[9] = -b * c;\n    rmat.elements[2] = bf - ae * d;\n    rmat.elements[6] = be + af * d;\n    rmat.elements[10] = a * c;\n\n    // bottom row\n    rmat.elements[3] = 0;\n    rmat.elements[7] = 0;\n    rmat.elements[11] = 0;\n\n    // last column\n    rmat.elements[12] = 0;\n    rmat.elements[13] = 0;\n    rmat.elements[14] = 0;\n    rmat.elements[15] = 1;\n    return rmat;\n  }\n\n  //##################//--Rotations--\\\\##################\n  //<editor-fold desc=\"Rotations\">\n  static RotationX(radians) {\n    const c = Math.cos(radians);\n    let s = Math.sin(radians);\n    return new Mat4(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n  }\n  static RotationY(radians) {\n    const c = Math.cos(radians);\n    let s = Math.sin(radians);\n    return new Mat4(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n  }\n  static RotationZ(radians) {\n    const c = Math.cos(radians);\n    let s = Math.sin(radians);\n    return new Mat4(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n  }\n  static RotationAxisAngle(axis, radians) {\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n    const c = Math.cos(radians);\n    const s = Math.sin(radians);\n    const t = 1 - c;\n    const x = axis.x,\n      y = axis.y,\n      z = axis.z;\n    const tx = t * x,\n      ty = t * y;\n    return new this(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n  }\n\n  // makeRotationY( theta ) {\n  //\n  //     const c = Math.cos( theta ), s = Math.sin( theta );\n  //\n  //     this.set(\n  //\n  //         c, 0, s, 0,\n  //         0, 1, 0, 0,\n  //         - s, 0, c, 0,\n  //         0, 0, 0, 1\n  //\n  //     );\n  //\n  //     return this;\n  //\n  // }\n  //\n  // makeRotationZ( theta ) {\n  //\n  //     const c = Math.cos( theta ), s = Math.sin( theta );\n  //\n  //     this.set(\n  //\n  //         c, - s, 0, 0,\n  //         s, c, 0, 0,\n  //         0, 0, 1, 0,\n  //         0, 0, 0, 1\n  //\n  //     );\n  //\n  //     return this;\n  //\n  // }\n  //\n  // makeRotationAxis( axis, angle ) {\n  //\n  //     // Based on http://www.gamedev.net/reference/articles/article1199.asp\n  //\n  //     const c = Math.cos( angle );\n  //     const s = Math.sin( angle );\n  //     const t = 1 - c;\n  //     const x = axis.x, y = axis.y, z = axis.z;\n  //     const tx = t * x, ty = t * y;\n  //\n  //     this.set(\n  //\n  //         tx * x + c, tx * y - s * z, tx * z + s * y, 0,\n  //         tx * y + s * z, ty * y + c, ty * z - s * x, 0,\n  //         tx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n  //         0, 0, 0, 1\n  //\n  //     );\n  //\n  //     return this;\n  //\n  // }\n\n  //</editor-fold>\n  //##################\\\\--Rotations--//##################\n\n  logTable() {\n    console.table({\n      'row0': this.r0,\n      'row1': this.r1,\n      'row2': this.r2,\n      'row3': this.r3\n    });\n  }\n  asThreeJS() {\n    let m = new THREE.Matrix4();\n    m.set(this.elements[0], this.elements[1], this.elements[2], this.elements[3], this.elements[4], this.elements[5], this.elements[6], this.elements[7], this.elements[8], this.elements[9], this.elements[10], this.elements[11], this.elements[12], this.elements[13], this.elements[14], this.elements[15]);\n    return m;\n  }\n  static _GetTHREEMatrix4ExtractedRotation(M) {\n    let m3 = M.asThreeJS();\n    let r3 = new THREE.Matrix4();\n    r3.extractRotation(m3);\n    return r3;\n  }\n  getExtractedRotation() {\n    let r3 = Mat4._GetTHREEMatrix4ExtractedRotation(this);\n    return Mat4.FromThreeJS(r3);\n  }\n  assignTo(threejsMat) {\n    threejsMat.set(this.elements[0], this.elements[1], this.elements[2], this.elements[3], this.elements[4], this.elements[5], this.elements[6], this.elements[7], this.elements[8], this.elements[9], this.elements[10], this.elements[11], this.elements[12], this.elements[13], this.elements[14], this.elements[15]);\n  }\n  asPrettyString() {\n    return `Mat4 in Row Major Form:\\n\n        ${this.elements[0]},  ${this.elements[1]},  ${this.elements[2]},  ${this.elements[3]}\\n \n        ${this.elements[4]},  ${this.elements[5]},  ${this.elements[6]},  ${this.elements[7]}\\n \n        ${this.elements[8]},  ${this.elements[9]},  ${this.elements[10]},  ${this.elements[11]}\\n \n        ${this.elements[12]},  ${this.elements[13]},  ${this.elements[14]},  ${this.elements[15]}`;\n  }\n\n  //##################//--Projection Matrices--\\\\##################\n  //<editor-fold desc=\"Projection Matrices\">\n  static PerspectiveFromNearPlane(left, right, bottom, top, near, far) {\n    var _near, _far;\n    near = (_near = near) !== null && _near !== void 0 ? _near : AniGraphDefines.DefaultZNear;\n    far = (_far = far) !== null && _far !== void 0 ? _far : AniGraphDefines.DefaultZFar;\n    let A = (right + left) / (right - left);\n    let B = (top + bottom) / (top - bottom);\n    let C = -(far + near) / (far - near);\n    let D = -2.0 * far * near / (far - near);\n    let m = new Mat4();\n    m.elements[0] = 2.0 * near / (right - left);\n    m.elements[5] = 2.0 * near / (top - bottom);\n    m.elements[8] = A;\n    m.elements[9] = B;\n    m.elements[10] = C;\n    m.elements[11] = -1.0;\n    m.elements[14] = D;\n    m.elements[15] = 0.0;\n    return m.getTranspose();\n    // let temp = 2.0 * near;\n    // let temp2 = right - left;\n    // let temp3 = top - bottom;\n    // let temp4 = far - near;\n    // return Mat4.FromElementsColumnMajor(\n    //     [\n    //         temp / temp2,       0.0,                      0.0,              0.0,\n    //         0.0,                temp / temp3,             0.0,              0.0,\n    //         (right+left)/temp2, (top+bottom)/temp3,     (-far-near)/temp4, -1.0,\n    //         0.0,                0.0,                    (-temp*far)/temp4,  0.0\n    //     ]\n    // )\n    // return Mat4.FromElementsColumnMajor(\n    //     [\n    //         temp / temp2,       0.0,                      0.0,              0.0,\n    //         0.0,                temp / temp3,             0.0,              0.0,\n    //         (right+left)/temp2, (top+bottom)/temp3,     (-far-near)/temp4, -1.0,\n    //         0.0,                0.0,                    (-temp*far)/temp4,  0.0\n    //     ]\n    // )\n  }\n\n  static PerspectiveFromFOV(fovy, aspect, near, far) {\n    var _near2, _far2;\n    near = (_near2 = near) !== null && _near2 !== void 0 ? _near2 : AniGraphDefines.DefaultZNear;\n    far = (_far2 = far) !== null && _far2 !== void 0 ? _far2 : AniGraphDefines.DefaultZFar;\n    let f = 1.0 / Math.tan(fovy * 0.5 * 0.017453293);\n    return new Mat4([f / aspect, 0.0, 0.0, 0.0, 0.0, f, 0.0, 0.0, 0.0, 0.0, (far + near) / (near - far), 2.0 * far * near / (near - far), 0.0, 0.0, -1.0, 0.0]);\n  }\n  static ProjectionOrtho(left, right, bottom, top, near, far) {\n    let rmat = Mat4.Identity();\n    rmat.elements[0] = 2.0 / (right - left);\n    rmat.elements[5] = 2.0 / (top - bottom);\n    rmat.elements[10] = -2.0 / (far - near);\n    rmat.elements[3] = -(right + left) / (right - left);\n    rmat.elements[7] = -(top + bottom) / (top - bottom);\n    rmat.elements[11] = -(far + near) / (far - near);\n    return rmat;\n  }\n\n  /***\n   *   0    1|4   2|8   3|12\n   *  4|1    5    6|9   7|13\n   *  8|2   9|6    10   11|14\n   * 12|3  13|7  14|11    15\n   */\n\n  //</editor-fold>\n  //##################\\\\--Projection Matrices--//##################\n}) || _class);","map":{"version":3,"names":["Matrix","VectorBase","Vec4","assert","Random","ASerializable","Mat3","THREE","AniGraphDefines","Color","Quaternion","Mat4","constructor","getMat4","setPosition","position","m30","x","m31","y","m32","z","getPosition","c3","Point3D","_getQuaternionRotation","FromMatrix","_setQuaternionRotation","q","p","elements","getMatrix","getElement","row","col","setToIdentity","m00","value","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m33","c0","h","c1","c2","r0","r1","r2","r3","FromColumns","r","FromRows","Identity","From2DMat3","m","FromMat3Linear","Scale3D","scalematfromarray","a","rmat","length","args","Array","isArray","setElementsColumnMajor","columnMajorElements","Error","FromElementsColumnMajor","Scale2D","Translation3D","tmatfromarray","Translation2D","getLinearPart","floatArray","Zeros","i","Ones","_convertOCV2OGL","getInverse","clone","invert","getTranspose","te","n11","n21","n31","n41","n12","n22","n32","n42","n13","n23","n33","n43","n14","n24","n34","n44","t11","t12","t13","t14","det","detInv","determinant","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","times","other","_timesMatrix","_timesVector","cfunc","v","appliedToPoint","Point3DH","toJSON","rval","k","FromThreeJS","FromEulerAngles","Math","cos","b","sin","c","d","e","f","ae","af","be","bf","RotationX","radians","s","RotationY","RotationZ","RotationAxisAngle","axis","t","tx","ty","logTable","console","table","asThreeJS","Matrix4","set","_GetTHREEMatrix4ExtractedRotation","M","m3","extractRotation","getExtractedRotation","assignTo","threejsMat","asPrettyString","PerspectiveFromNearPlane","left","right","bottom","top","near","far","DefaultZNear","DefaultZFar","A","B","C","D","PerspectiveFromFOV","fovy","aspect","tan","ProjectionOrtho"],"sources":["/Users/home/Desktop/College/Fall 2022/CS_4620/cs4620-final-project/src/anigraph/math/linalg/3D/Mat4.ts"],"sourcesContent":["import {Matrix} from \"../Matrix\";\nimport {VectorBase} from \"../VectorBase\";\nimport {Vec2, Vec3} from \"../2D\";\nimport {Vec4} from \"./Vec4\";\nimport assert from \"assert\";\nimport {Random} from \"../../Random\";\nimport {ASerializable} from \"../../../base\";\nimport {Mat3} from \"../2D\";\n\nimport * as THREE from \"three\";\nimport {AniGraphDefines} from \"../../../defines\";\nimport {Color} from \"../../Color\";\nimport {TransformationInterface} from \"../../TrasnformationInterface\";\nimport { Quaternion } from \"./Quaternion\";\n\n@ASerializable(\"Mat4\")\nexport class Mat4 extends Matrix implements TransformationInterface {\n  public constructor();\n  public constructor(m00:number, m01:number, m02:number, m03:number, m10:number, m11:number, m12:number, m13:number, m20:number, m21:number, m22:number, m23:number, m30:number, m31:number, m32:number, m33:number);\n  public constructor(elements?: Array<number>);\n  public constructor(...args: Array<any>) { // common logic constructor\n    super(...args);\n  }\n\n  getMat4(): Mat4 {\n    return this;\n  }\n  setPosition(position: Vec3): void {\n    this.m30 = position.x;\n    this.m31 = position.y;\n    this.m32 = position.z;\n  }\n\n  getPosition(): Vec3 {\n    return this.c3.Point3D\n  }\n\n  _getQuaternionRotation(): Quaternion {\n    return Quaternion.FromMatrix(this);\n  }\n  _setQuaternionRotation(q: Quaternion): void {\n    let p = this.getPosition();\n    this.elements = q.getMatrix().elements;\n    this.setPosition(p);\n  }\n\n  getElement(row:number,col:number):number{\n    return this.elements[4*row+col];\n  }\n  setToIdentity(){\n    this.elements = [\n      1,0,0,0,\n      0,1,0,0,\n      0,0,1,0,\n      0,0,0,1\n    ];\n  }\n\n  set m00(value){this.elements[0]=value;}\n  get m00(){return this.elements[0];}\n  set m01(value){this.elements[1]=value;}\n  get m01(){return this.elements[1];}\n  set m02(value){this.elements[2]=value;}\n  get m02(){return this.elements[2];}\n  set m03(value){this.elements[3]=value;}\n  get m03(){return this.elements[3];}\n\n\n  set m10(value){this.elements[4]=value;}\n  get m10(){return this.elements[4];}\n  set m11(value){this.elements[5]=value;}\n  get m11(){return this.elements[5];}\n  set m12(value){this.elements[6]=value;}\n  get m12(){return this.elements[6];}\n  set m13(value){this.elements[7]=value;}\n  get m13(){return this.elements[7];}\n\n  set m20(value){this.elements[8]=value;}\n  get m20(){return this.elements[8];}\n  set m21(value){this.elements[9]=value;}\n  get m21(){return this.elements[9];}\n  set m22(value){this.elements[10]=value;}\n  get m22(){return this.elements[10];}\n  set m23(value){this.elements[11]=value;}\n  get m23(){return this.elements[11];}\n\n  set m30(value){this.elements[12]=value;}\n  get m30(){return this.elements[12];}\n  set m31(value){this.elements[13]=value;}\n  get m31(){return this.elements[13];}\n  set m32(value){this.elements[14]=value;}\n  get m32(){return this.elements[14];}\n  set m33(value){this.elements[15]=value;}\n  get m33(){return this.elements[15];}\n\n\n\n\n  set c0(value:Vec4) {\n    this.m00 = value.x;\n    this.m10 = value.y;\n    this.m20 = value.z;\n    this.m30 = value.h;\n  }\n  get c0(){return new Vec4(this.m00,this.m10,this.m20, this.m30);}\n\n  set c1(value:Vec4) {\n    this.m01 = value.x;\n    this.m11 = value.y;\n    this.m21 = value.z;\n    this.m31 = value.h;\n  }\n  get c1(){return new Vec4(this.m01,this.m11,this.m21, this.m31);}\n\n  set c2(value:Vec4) {\n    this.m02 = value.x;\n    this.m12 = value.y;\n    this.m22 = value.z;\n    this.m32 = value.h;\n  }\n  get c2(){return new Vec4(this.m02,this.m12,this.m22, this.m32);}\n\n  set c3(value:Vec4) {\n    this.m03 = value.x;\n    this.m13 = value.y;\n    this.m23 = value.z;\n    this.m33 = value.h;\n  }\n  get c3(){return new Vec4(this.m03,this.m13,this.m23, this.m33);}\n\n\n  /** Get set r0 */\n  set r0(value:Vec4){\n    this.m00 = value.x;\n    this.m01 = value.y;\n    this.m02 = value.z;\n    this.m03 = value.h;\n  }\n  get r0(){return new Vec4(this.m00, this.m01, this.m02, this.m03);}\n\n  set r1(value:Vec4){\n    this.m10 = value.x;\n    this.m11 = value.y;\n    this.m12 = value.z;\n    this.m13 = value.h;\n  }\n  get r1(){return new Vec4(this.m10, this.m11, this.m12, this.m13);}\n\n  set r2(value:Vec4){\n    this.m20 = value.x;\n    this.m21 = value.y;\n    this.m22 = value.z;\n    this.m23 = value.h;\n  }\n  get r2(){return new Vec4(this.m20, this.m21, this.m22, this.m23);}\n  set r3(value:Vec4){\n    this.m30 = value.x;\n    this.m31 = value.y;\n    this.m32 = value.z;\n    this.m33 = value.h;\n  }\n  get r3(){return new Vec4(this.m30, this.m31, this.m32, this.m33);}\n\n\n  static FromColumns(c0:Vec4, c1:Vec4, c2:Vec4, c3:Vec4){\n    var r = new this();\n    r.c0=c0;\n    r.c1=c1;\n    r.c2=c2;\n    r.c3=c3;\n    return r;\n  }\n\n  static FromRows(r0:Vec4, r1:Vec4, r2:Vec4, r3:Vec4){\n    var r = new this();\n    r.r0=r0;\n    r.r1=r1;\n    r.r2=r2;\n    r.r3=r3;\n    return r;\n  }\n\n  //##################//--TransformationMatrices--\\\\##################\n  //<editor-fold desc=\"TransformationMatrices\">\n\n  static Identity(){\n    return new Mat4(\n        1,0,0,0,\n        0,1,0,0,\n        0,0,1,0,\n        0,0,0,1);\n  }\n\n\n  static From2DMat3(m:Mat3) :Mat4{\n    return new Mat4(\n        m.m00, m.m01, 0, m.m02,\n        m.m10, m.m11, 0, m.m12,\n        0, 0, 1, 0,\n        m.m20, m.m21, 0, m.m22\n    );\n  }\n\n  static FromMat3Linear(m:Mat3):Mat4{\n    return new Mat4(\n        m.m00, m.m01,  m.m02, 0,\n        m.m10, m.m11, m.m12, 0,\n        m.m20, m.m21,  m.m22, 0,\n        0, 0, 0, 1\n    );\n  }\n\n\n\n  public static Scale3D(factor:number):Mat4;\n  public static Scale3D(factors:Array<number>):Mat4;\n  public static Scale3D(factors:Vec4):Mat4;\n  public static Scale3D(factors:Vec3):Mat4;\n  public static Scale3D(...args:any[]):Mat4 {\n    function scalematfromarray(a:Array<number>) {\n      let rmat = new Mat4();\n      if (a.length > 0) {\n        rmat.m00 = a[0];\n        if (a.length > 1) {\n          rmat.m11 = a[1];\n          if (a.length > 2) {\n            rmat.m22=a[2];\n            if(a.length>3) {\n              // console.warn(\"Don't specify scale matrices with 4 arguments. Scaling the homogeneous coordinate is bad form...\");\n              assert(a.length === 4, \"Scale arguments too long\");\n              rmat.m33 = a[3];\n            }\n          }\n        }\n      }\n      return rmat;\n    }\n\n    assert(args.length>0, \"Cannot call Mat4.Scale() with no arguments\");\n    if(typeof args[0] === \"number\") {\n      let rmat = new Mat4();\n      rmat.m00=args[0];\n      rmat.m11=args[0];\n      rmat.m22=args[0];\n      return rmat;\n    } else if(Array.isArray(args[0])) {\n      return scalematfromarray(args[0]);\n    }else if(args[0] instanceof VectorBase){\n      return scalematfromarray(args[0].elements);\n    }else {\n      return scalematfromarray(args[0]);\n    }\n  }\n\n\n  // setElementsColumnMajor(\n  //     m00:number, m10?:number, m20?:number, m30?:number,\n  //     m01?:number, m11?:number, m21?:number, m31?:number,\n  //     m02?:number, m12?:number, m22?:number, m32?:number,\n  //     m03?:number, m13?:number, m23?:number, m33?:number):this;\n  // setElementsColumnMajor(...args:any[]){\n  setElementsColumnMajor(columnMajorElements:number[]){\n    if(columnMajorElements.length!==16){\n      throw new Error(\"Bad elementsTransposed length for setting Mat4 column major\")\n    };\n    this.elements = [\n      columnMajorElements[0],columnMajorElements[4], columnMajorElements[8], columnMajorElements[12],\n      columnMajorElements[1], columnMajorElements[5], columnMajorElements[9], columnMajorElements[13],\n      columnMajorElements[2], columnMajorElements[6], columnMajorElements[10], columnMajorElements[14],\n      columnMajorElements[3], columnMajorElements[7], columnMajorElements[11], columnMajorElements[15]\n    ];\n    return this;\n    // else {\n    //     this.elements = [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33];\n    // }\n  }\n\n  static FromElementsColumnMajor(columnMajorElements:number[]){\n    return new Mat4(\n        columnMajorElements[0],columnMajorElements[4], columnMajorElements[8], columnMajorElements[12],\n        columnMajorElements[1], columnMajorElements[5], columnMajorElements[9], columnMajorElements[13],\n        columnMajorElements[2], columnMajorElements[6], columnMajorElements[10], columnMajorElements[14],\n        columnMajorElements[3], columnMajorElements[7], columnMajorElements[11], columnMajorElements[15]\n    );\n  }\n\n  public static Scale2D(factors:Array<number>):Mat4;\n  public static Scale2D(factor:number|VectorBase):Mat4;\n  public static Scale2D(factors:Vec2):Mat4;\n  public static Scale2D(...args:Array<any>):Mat4 {\n    function scalematfromarray(a:Array<number>) {\n      let rmat = new Mat4();\n      if (a.length > 0) {\n        rmat.m00 = a[0];\n        if (a.length > 1) {\n          assert(a.length === 2, \"Scale2D arguments too long\");\n          rmat.m11 = a[1];\n        }\n      }\n      return rmat;\n    }\n    assert(args.length>0, \"Cannot call Mat4.Scale2D() with no arguments\");\n    if(typeof args[0] === \"number\") {\n      let rmat = new Mat4();\n      rmat.m00=args[0];\n      rmat.m11=args[0];\n      return rmat;\n    } else if(Array.isArray(args[0])) {\n      return scalematfromarray(args[0]);\n    }else if(args[0] instanceof VectorBase){\n      return scalematfromarray(args[0].elements);\n    }else {\n      return scalematfromarray(args);\n    }\n  }\n\n\n  public static Translation3D(t:Array<number>):Mat4;\n  public static Translation3D(t:VectorBase):Mat4;\n  public static Translation3D(x:number,y:number, z:number):Mat4\n  public static Translation3D(...args:Array<any>):Mat4{\n    function tmatfromarray(a:Array<number>) {\n      let rmat = new Mat4();\n      rmat.m03=a[0];\n      rmat.m13=a[1];\n      rmat.m23=a[2];\n      return rmat;\n    }\n    assert(args.length>0, \"Cannot call Mat4.Translation3D() with no arguments\");\n    if(Array.isArray(args[0])) {\n      return tmatfromarray(args[0]);\n    }else if(args[0] instanceof VectorBase){\n      return tmatfromarray(args[0].elements);\n    }else {\n      assert(args.length===3, `wrong number of args for Mat4.Translation3D: ${args}`);\n      return tmatfromarray(args);\n    }\n  }\n\n  public static Translation2D(t:Array<number>):Mat4;\n  public static Translation2D(t:Vec2):Mat4;\n  public static Translation2D(x:number,y:number):Mat4\n  public static Translation2D(...args:Array<any>):Mat4{\n    function tmatfromarray(a:Array<number>) {\n      let rmat = new Mat4();\n      rmat.m03=a[0];\n      rmat.m13=a[1];\n      return rmat;\n    }\n    assert(args.length>0, \"Cannot call Mat4.Translation2D() with no arguments\");\n    if(Array.isArray(args[0])) {\n      return tmatfromarray(args[0]);\n    }else if(args[0] instanceof VectorBase){\n      return tmatfromarray(args[0].elements);\n    }else {\n      assert(args.length===2, \"wrong number of args for Mat4.Translation2D\")\n      return tmatfromarray(args);\n    }\n  }\n\n  getLinearPart(){\n    return new Mat3(\n        this.m00,this.m01,this.m02,\n        this.m10,this.m11,this.m12,\n        this.m20,this.m21,this.m22\n    )\n  }\n  //</editor-fold>\n  //##################\\\\--TransformationMatrices--//##################\n\n  //##################//--fill matrices--\\\\##################\n  //<editor-fold desc=\"fill matrices\">\n  static Random(){\n    var r = new this(Random.floatArray(16));\n    return r;\n  }\n\n  static Zeros(){\n    let z = new Array(16); for (let i=0; i<16; ++i) z[i] = 0;\n    var r = new this(z);\n    return r;\n  }\n\n  static Ones(){\n    let z = new Array(16); for (let i=0; i<16; ++i) z[i] = 1;\n    var r = new this(z);\n    return r;\n  }\n  //</editor-fold>\n  //##################\\\\--fill matrices--//##################\n\n\n  _convertOCV2OGL(){\n    // this.m10 = -this.m10;\n    // this.m11 = -this.m11;\n    // this.m12 = -this.m12;\n    // this.m20 = -this.m20;\n    // this.m21 = -this.m21;\n    // this.m22 = -this.m22;\n    // this.m10 = -this.m10;\n    // this.m11 = -this.m11;\n    // this.m12 = -this.m12;\n    // this.m20 = -this.m20;\n    // this.m21 = -this.m21;\n    // this.m22 = -this.m22;\n\n    // this.c1 = this.c1.times(-1);\n    // this.c2 = this.c2.times(-1);\n    // this.m00 = -this.m00;\n    // this.m01 = -this.m01;\n    // this.m02 = -this.m02;\n\n\n    this.m10 = -this.m10;\n    this.m11 = -this.m11;\n    this.m12 = -this.m12;\n    this.m13 = -this.m13;\n    this.m20 = -this.m20;\n    this.m21 = -this.m21;\n    this.m23 = -this.m23;\n\n\n    // for(let j=4;j<12;j++){\n    //     this.elements[j]=-this.elements[j];\n    // }\n  }\n\n\n  //##################//--Determinant and Inverse--\\\\##################\n  //<editor-fold desc=\"Determinant and Inverse\">\n\n\n  getInverse(){\n    let m = this.clone();\n    return m.invert();\n  }\n\n  getTranspose(){\n    return new Mat4(\n        this.elements[0],this.elements[4], this.elements[8], this.elements[12],\n        this.elements[1], this.elements[5], this.elements[9], this.elements[13],\n        this.elements[2], this.elements[6], this.elements[10], this.elements[14],\n        this.elements[3], this.elements[7], this.elements[11], this.elements[15]\n    );\n  }\n\n  invert(){\n    // based on the three.js implementation\n    const te = this.getTranspose().elements,\n        n11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n        n12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n        n13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n        n14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n        t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n        t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n        t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n        t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n    const det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n    if ( det === 0 ){\n      this.elements=[\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        0, 0, 0, 0 ];\n      return this;\n    }\n\n    const detInv = 1 / det;\n\n    te[ 0 ] = t11 * detInv;\n    te[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n    te[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n    te[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n    te[ 4 ] = t12 * detInv;\n    te[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n    te[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n    te[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n    te[ 8 ] = t13 * detInv;\n    te[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n    te[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n    te[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n    te[ 12 ] = t14 * detInv;\n    te[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n    te[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n    te[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n    this.setElementsColumnMajor(te);\n    return this;\n\n  }\n\n  /**\n   * Returns the determinant of the matrix. Method based on gl-mat4's implementation.\n   */\n  determinant() {\n    let b00 = this.m00 * this.m11 - this.m01 * this.m10;\n    let b01 = this.m00 * this.m12 - this.m02 * this.m10;\n    let b02 = this.m00 * this.m13 - this.m03 * this.m10;\n    let b03 = this.m01 * this.m12 - this.m02 * this.m11;\n    let b04 = this.m01 * this.m13 - this.m03 * this.m11;\n    let b05 = this.m02 * this.m13 - this.m03 * this.m12;\n    let b06 = this.m20 * this.m31 - this.m21 * this.m30;\n    let b07 = this.m20 * this.m32 - this.m22 * this.m30;\n    let b08 = this.m20 * this.m33 - this.m23 * this.m30;\n    let b09 = this.m21 * this.m32 - this.m22 * this.m31;\n    let b10 = this.m21 * this.m33 - this.m23 * this.m31;\n    let b11 = this.m22 * this.m33 - this.m23 * this.m32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n  }\n\n  //</editor-fold>\n  //##################\\\\--Determinant and Inverse--//##################\n\n  times(other:Vec4):Vec4;\n  times(other:Mat4):Mat4;\n  times(other:number):Mat4;\n  times(other:Color):Color;\n  times(other:Vec4|Mat4|Color|number):Vec4|Mat4|Color{\n    if(other instanceof Mat4){\n      return this._timesMatrix(other);\n    }else if(other instanceof Vec4) {\n      return this._timesVector(other);\n    }else if(other instanceof Color){\n      return new Color(\n      other.elements[0]*this.m00+other.elements[1]*this.m01+other.elements[2]*this.m02+other.a*this.m03,\n      other.elements[0]*this.m10+other.elements[1]*this.m11+other.elements[2]*this.m12+other.a*this.m13,\n      other.elements[0]*this.m20+other.elements[1]*this.m21+other.elements[2]*this.m22+other.a*this.m23,\n      other.elements[0]*this.m30+other.elements[1]*this.m31+other.elements[2]*this.m32+other.a*this.m33\n      )\n    }else if(typeof(other) === 'number'){\n      let cfunc:any=(this.constructor as any);\n      var m:this = new cfunc();\n      for(let i=0;i<m.elements.length;i++){\n        m.elements[i]=this.elements[i]*other;\n      }\n      return m;\n    }\n    throw new Error(\"Tried to do Mat4.times(other) with other not a matrix, vector, or scalar...\")\n  }\n\n  protected _timesVector(v:Vec4):Vec4{\n    return new Vec4(\n        v.elements[0]*this.m00+v.elements[1]*this.m01+v.elements[2]*this.m02+v.elements[3]*this.m03,\n        v.elements[0]*this.m10+v.elements[1]*this.m11+v.elements[2]*this.m12+v.elements[3]*this.m13,\n        v.elements[0]*this.m20+v.elements[1]*this.m21+v.elements[2]*this.m22+v.elements[3]*this.m23,\n        v.elements[0]*this.m30+v.elements[1]*this.m31+v.elements[2]*this.m32+v.elements[3]*this.m33\n    );\n  }\n\n  appliedToPoint(p:Vec3){\n    return this.times(p.Point3DH).Point3D;\n  }\n\n\n  //</editor-fold>\n  //##################\\\\--Matrix Multiplication--//##################\n\n\n  protected _timesMatrix(m: Mat4): Mat4 {\n    // let cfunc: any = (this.constructor as any);\n    return new Mat4(\n        this.m00 * m.m00 + this.m01 * m.m10 + this.m02 * m.m20 +this.m03 * m.m30,\n        this.m00 * m.m01 + this.m01 * m.m11 + this.m02 * m.m21 +this.m03 * m.m31,\n        this.m00 * m.m02 + this.m01 * m.m12 + this.m02 * m.m22 +this.m03 * m.m32,\n        this.m00 * m.m03 + this.m01 * m.m13 + this.m02 * m.m23 +this.m03 * m.m33,\n\n        this.m10 * m.m00 + this.m11 * m.m10 + this.m12 * m.m20 +this.m13 * m.m30,\n        this.m10 * m.m01 + this.m11 * m.m11 + this.m12 * m.m21 +this.m13 * m.m31,\n        this.m10 * m.m02 + this.m11 * m.m12 + this.m12 * m.m22 +this.m13 * m.m32,\n        this.m10 * m.m03 + this.m11 * m.m13 + this.m12 * m.m23 +this.m13 * m.m33,\n\n        this.m20 * m.m00 + this.m21 * m.m10 + this.m22 * m.m20 +this.m23 * m.m30,\n        this.m20 * m.m01 + this.m21 * m.m11 + this.m22 * m.m21 +this.m23 * m.m31,\n        this.m20 * m.m02 + this.m21 * m.m12 + this.m22 * m.m22 +this.m23 * m.m32,\n        this.m20 * m.m03 + this.m21 * m.m13 + this.m22 * m.m23 +this.m23 * m.m33,\n\n        this.m30 * m.m00 + this.m31 * m.m10 + this.m32 * m.m20 +this.m33 * m.m30,\n        this.m30 * m.m01 + this.m31 * m.m11 + this.m32 * m.m21 +this.m33 * m.m31,\n        this.m30 * m.m02 + this.m31 * m.m12 + this.m32 * m.m22 +this.m33 * m.m32,\n        this.m30 * m.m03 + this.m31 * m.m13 + this.m32 * m.m23 +this.m33 * m.m33\n    );\n  }\n\n  toJSON(){\n    var rval:{[name:string]:any} = {};\n    for (let k in this){\n      // @ts-ignore\n      rval[k]=this[k];\n    }\n    return rval;\n  }\n\n\n  static FromThreeJS(m:THREE.Matrix4){\n    return Mat4.FromElementsColumnMajor(m.elements);\n    // let ma = new Mat4(m.elements);\n    // let ma = Mat4.FromElementsColumnMajor(m.elements);\n    // return ma.getTranspose();\n  }\n  // public toTHREE(){\n  //     let m = new THREE.Matrix4();\n  //     m.set(this.elements[0], this.elements[1], this.elements[2], this.elements[3],\n  //         this.elements[4], this.elements[5], this.elements[6], this.elements[7],\n  //         this.elements[8], this.elements[9], this.elements[10], this.elements[11],\n  //         this.elements[12], this.elements[13], this.elements[14], this.elements[15]);\n  //     return m;\n  // }\n\n  static FromEulerAngles(x:number,y:number,z:number){\n    const a = Math.cos( x ), b = Math.sin( x );\n    const c = Math.cos( y ), d = Math.sin( y );\n    const e = Math.cos( z ), f = Math.sin( z );\n    const ae = a * e, af = a * f, be = b * e, bf = b * f;\n    let rmat = new Mat4();\n\n    rmat.elements[ 0 ] = c * e;\n    rmat.elements[ 4 ] = - c * f;\n    rmat.elements[ 8 ] = d;\n\n    rmat.elements[ 1 ] = af + be * d;\n    rmat.elements[ 5 ] = ae - bf * d;\n    rmat.elements[ 9 ] = - b * c;\n\n    rmat.elements[ 2 ] = bf - ae * d;\n    rmat.elements[ 6 ] = be + af * d;\n    rmat.elements[ 10 ] = a * c;\n\n    // bottom row\n    rmat.elements[ 3 ] = 0;\n    rmat.elements[ 7 ] = 0;\n    rmat.elements[ 11 ] = 0;\n\n    // last column\n    rmat.elements[ 12 ] = 0;\n    rmat.elements[ 13 ] = 0;\n    rmat.elements[ 14 ] = 0;\n    rmat.elements[ 15 ] = 1;\n    return rmat;\n  }\n\n  //##################//--Rotations--\\\\##################\n  //<editor-fold desc=\"Rotations\">\n  static RotationX( radians:number) {\n    const c = Math.cos( radians );\n    let s = Math.sin( radians );\n\n    return new Mat4(\n        1, 0, 0, 0,\n        0, c, - s, 0,\n        0, s, c, 0,\n        0, 0, 0, 1\n\n    );\n  }\n\n  static RotationY( radians:number) {\n    const c = Math.cos( radians );\n    let s = Math.sin( radians );\n\n    return new Mat4(\n        c, 0, s, 0,\n        0, 1, 0, 0,\n        -s, 0, c, 0,\n        0, 0, 0, 1\n\n    );\n  }\n\n  static RotationZ( radians:number) {\n    const c = Math.cos( radians );\n    let s = Math.sin( radians );\n\n    return new Mat4(\n        c, - s, 0, 0,\n        s, c, 0, 0,\n        0, 0, 1, 0,\n        0, 0, 0, 1\n    );\n  }\n\n  static RotationAxisAngle(axis:Vec3, radians:number) {\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n    const c = Math.cos(radians);\n    const s = Math.sin(radians);\n    const t = 1 - c;\n    const x = axis.x, y = axis.y, z = axis.z;\n    const tx = t * x, ty = t * y;\n    return new this(\n        tx * x + c, tx * y - s * z, tx * z + s * y, 0,\n        tx * y + s * z, ty * y + c, ty * z - s * x, 0,\n        tx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n        0, 0, 0, 1);\n  }\n\n\n  // makeRotationY( theta ) {\n  //\n  //     const c = Math.cos( theta ), s = Math.sin( theta );\n  //\n  //     this.set(\n  //\n  //         c, 0, s, 0,\n  //         0, 1, 0, 0,\n  //         - s, 0, c, 0,\n  //         0, 0, 0, 1\n  //\n  //     );\n  //\n  //     return this;\n  //\n  // }\n  //\n  // makeRotationZ( theta ) {\n  //\n  //     const c = Math.cos( theta ), s = Math.sin( theta );\n  //\n  //     this.set(\n  //\n  //         c, - s, 0, 0,\n  //         s, c, 0, 0,\n  //         0, 0, 1, 0,\n  //         0, 0, 0, 1\n  //\n  //     );\n  //\n  //     return this;\n  //\n  // }\n  //\n  // makeRotationAxis( axis, angle ) {\n  //\n  //     // Based on http://www.gamedev.net/reference/articles/article1199.asp\n  //\n  //     const c = Math.cos( angle );\n  //     const s = Math.sin( angle );\n  //     const t = 1 - c;\n  //     const x = axis.x, y = axis.y, z = axis.z;\n  //     const tx = t * x, ty = t * y;\n  //\n  //     this.set(\n  //\n  //         tx * x + c, tx * y - s * z, tx * z + s * y, 0,\n  //         tx * y + s * z, ty * y + c, ty * z - s * x, 0,\n  //         tx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n  //         0, 0, 0, 1\n  //\n  //     );\n  //\n  //     return this;\n  //\n  // }\n\n  //</editor-fold>\n  //##################\\\\--Rotations--//##################\n\n  logTable(){\n    console.table({\n      'row0': this.r0,\n      'row1': this.r1,\n      'row2': this.r2,\n      'row3': this.r3\n    })\n  }\n\n\n  public asThreeJS(){\n    let m = new THREE.Matrix4();\n    m.set(this.elements[0], this.elements[1], this.elements[2], this.elements[3],\n        this.elements[4], this.elements[5], this.elements[6], this.elements[7],\n        this.elements[8], this.elements[9], this.elements[10], this.elements[11],\n        this.elements[12], this.elements[13], this.elements[14], this.elements[15]);\n    return m;\n  }\n\n  static  _GetTHREEMatrix4ExtractedRotation(M:Mat4){\n    let m3 = M.asThreeJS();\n    let r3 = new THREE.Matrix4();\n    r3.extractRotation(m3);\n    return r3;\n  }\n\n  public getExtractedRotation(){\n    let r3 = Mat4._GetTHREEMatrix4ExtractedRotation(this);\n    return Mat4.FromThreeJS(r3);\n  }\n\n  assignTo(threejsMat:THREE.Matrix4){\n    threejsMat.set(this.elements[0], this.elements[1], this.elements[2], this.elements[3],\n        this.elements[4], this.elements[5], this.elements[6], this.elements[7],\n        this.elements[8], this.elements[9], this.elements[10], this.elements[11],\n        this.elements[12], this.elements[13], this.elements[14], this.elements[15]);\n  }\n\n  asPrettyString(){\n    return `Mat4 in Row Major Form:\\n\n        ${this.elements[0]},  ${this.elements[1]},  ${this.elements[2]},  ${this.elements[3]}\\n \n        ${this.elements[4]},  ${this.elements[5]},  ${this.elements[6]},  ${this.elements[7]}\\n \n        ${this.elements[8]},  ${this.elements[9]},  ${this.elements[10]},  ${this.elements[11]}\\n \n        ${this.elements[12]},  ${this.elements[13]},  ${this.elements[14]},  ${this.elements[15]}`\n  }\n\n  //##################//--Projection Matrices--\\\\##################\n  //<editor-fold desc=\"Projection Matrices\">\n  static PerspectiveFromNearPlane(left:number, right:number, bottom:number, top:number, near?:number, far?:number) {\n    near = near??AniGraphDefines.DefaultZNear;\n    far = far??AniGraphDefines.DefaultZFar;\n    let A = (right+left)/(right-left);\n    let B = (top+bottom)/(top-bottom);\n    let C = -(far+near)/(far-near);\n    let D = -2.0*far*near/(far-near);\n    let m = new Mat4();\n    m.elements[0] = 2.0*near/(right-left);\n    m.elements[5] = 2.0*near/(top-bottom);\n    m.elements[8] = A;\n    m.elements[9] = B;\n    m.elements[10] = C;\n    m.elements[11] = -1.0;\n    m.elements[14] = D;\n    m.elements[15] = 0.0;\n    return m.getTranspose();\n    // let temp = 2.0 * near;\n    // let temp2 = right - left;\n    // let temp3 = top - bottom;\n    // let temp4 = far - near;\n    // return Mat4.FromElementsColumnMajor(\n    //     [\n    //         temp / temp2,       0.0,                      0.0,              0.0,\n    //         0.0,                temp / temp3,             0.0,              0.0,\n    //         (right+left)/temp2, (top+bottom)/temp3,     (-far-near)/temp4, -1.0,\n    //         0.0,                0.0,                    (-temp*far)/temp4,  0.0\n    //     ]\n    // )\n    // return Mat4.FromElementsColumnMajor(\n    //     [\n    //         temp / temp2,       0.0,                      0.0,              0.0,\n    //         0.0,                temp / temp3,             0.0,              0.0,\n    //         (right+left)/temp2, (top+bottom)/temp3,     (-far-near)/temp4, -1.0,\n    //         0.0,                0.0,                    (-temp*far)/temp4,  0.0\n    //     ]\n    // )\n  }\n\n\n  static PerspectiveFromFOV(fovy:number, aspect:number, near?:number, far?:number){\n    near = near??AniGraphDefines.DefaultZNear;\n    far = far??AniGraphDefines.DefaultZFar;\n\n    let f = 1.0/Math.tan(fovy*0.5*0.017453293);\n    return new Mat4(\n        [\n          f/aspect,\t    0.0,        0.0,                        0.0,\n          0.0,\t\t    f,\t \t    0.0,\t\t\t\t\t\t0.0,\n          0.0,\t\t    0.0,\t    (far+near)/(near-far),\t    2.0*far*near/(near-far),\n          0.0,\t\t    0.0,\t    -1.0,\t\t\t\t\t\t0.0,\n        ]\n    )\n  }\n\n  static ProjectionOrtho(left:number, right:number, bottom:number, top:number, near:number, far:number)\n  {\n    let rmat = Mat4.Identity();\n    rmat.elements[0]=2.0/(right-left);\n    rmat.elements[5]=2.0/(top-bottom);\n    rmat.elements[10]=-2.0/(far-near);\n    rmat.elements[3]=-(right+left)/(right-left);\n    rmat.elements[7]=-(top+bottom)/(top-bottom);\n    rmat.elements[11]=-(far+near)/(far-near);\n    return rmat;\n  }\n\n  /***\n   *   0    1|4   2|8   3|12\n   *  4|1    5    6|9   7|13\n   *  8|2   9|6    10   11|14\n   * 12|3  13|7  14|11    15\n   */\n\n  //</editor-fold>\n  //##################\\\\--Projection Matrices--//##################\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}