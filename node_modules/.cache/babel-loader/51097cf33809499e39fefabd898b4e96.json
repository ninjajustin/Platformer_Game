{"ast":null,"code":"import { useCallbackRef as e } from \"@radix-ui/react-use-callback-ref\";\nimport * as t from \"react\";\nexport function useControllableState(_ref) {\n  let {\n    prop: o,\n    defaultProp: r,\n    onChange: n = () => {}\n  } = _ref;\n  const [a, u] = function (_ref2) {\n      let {\n        defaultProp: o,\n        onChange: r\n      } = _ref2;\n      const n = t.useState(o),\n        [a] = n,\n        u = t.useRef(a),\n        c = e(r);\n      return t.useEffect(() => {\n        u.current !== a && (c(a), u.current = a);\n      }, [a, u, c]), n;\n    }({\n      defaultProp: r,\n      onChange: n\n    }),\n    c = void 0 !== o,\n    f = c ? o : a,\n    l = e(n);\n  return [f, t.useCallback(e => {\n    if (c) {\n      const t = e,\n        r = \"function\" == typeof e ? t(o) : e;\n      r !== o && l(r);\n    } else u(e);\n  }, [c, o, u, l])];\n}","map":null,"metadata":{},"sourceType":"module"}