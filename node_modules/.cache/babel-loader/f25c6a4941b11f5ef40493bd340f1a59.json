{"ast":null,"code":"import { GetAppState, NodeTransform3D, Vec3 } from \"../../../anigraph\";\nimport { MainAppPointerLockInteractionMode } from \"../../BaseClasses\";\nvar ExamplePointerLockControlPanelParams;\n(function (ExamplePointerLockControlPanelParams) {\n  ExamplePointerLockControlPanelParams[\"PlayerSpeed\"] = \"PlayerSpeed\";\n})(ExamplePointerLockControlPanelParams || (ExamplePointerLockControlPanelParams = {}));\nlet appState = GetAppState();\n/**\n * First argument is just a string we defined in the enum above to avoid type-based bugs...\n */\nappState.addSliderControl(ExamplePointerLockControlPanelParams.PlayerSpeed, 0.1, 0, 1, 0.01);\nexport class ExamplePointerLockInteractionMode extends MainAppPointerLockInteractionMode {\n  /**\n   * You may want to define some parameters to adjust the speed of controls...\n   */\n\n  get camera() {\n    return this.model.camera;\n  }\n  constructor(owner, name, interactionCallbacks) {\n    for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      args[_key - 3] = arguments[_key];\n    }\n    super(name, owner, interactionCallbacks, ...args);\n    // this.reset();\n    this.mouseMovementSpeed = 0.1;\n  }\n  get player() {\n    return this.model.player;\n  }\n  reset() {\n    // You can reset the control mode here\n    this.camera.pose = NodeTransform3D.LookAt(this.player.position.plus(Vec3.UnitZ().times(3)), this.player.position, Vec3.UnitY());\n  }\n\n  /**\n   * This gets called immediately before the interaction mode is activated. For now, we will call reset()\n   * @param args\n   */\n  beforeActivate() {\n    super.beforeActivate(...arguments);\n    this.reset();\n  }\n\n  /**\n   * Create an instance in a single call, instead of calling new followed by init\n   * @param owner\n   * @param args\n   * @returns {ASceneInteractionMode}\n   * @constructor\n   */\n  static Create(owner) {\n    let controls = new this();\n    controls.init(owner);\n    return controls;\n  }\n  onWheelMove(event, interaction) {\n    let zoom = event.DOMEvent.deltaY;\n  }\n\n  /**\n   * See other interaction mode examples for example of how to define\n   * @param event\n   * @param interaction\n   */\n  onKeyDown(event, interaction) {\n    // e.g., define this.player.onKeyDown(event, interaction)\n  }\n  onKeyUp(event, interaction) {\n    if (!interaction.keysDownState['w']) {}\n    if (!interaction.keysDownState['a']) {}\n    if (!interaction.keysDownState['s']) {}\n    if (!interaction.keysDownState['d']) {}\n    if (!interaction.keysDownState['r']) {}\n    if (!interaction.keysDownState['f']) {}\n  }\n  onDragStart(event, interaction) {\n    /**\n     * Here we will track some interaction state. Specifically, the last cursor position.\n     */\n    interaction.setInteractionState('lastCursor', event.ndcCursor);\n  }\n  onDragMove(event, interaction) {\n    if (!event.ndcCursor) {\n      return;\n    }\n    let mouseMovement = event.ndcCursor.minus(interaction.getInteractionState('lastCursor'));\n    interaction.setInteractionState('lastCursor', event.ndcCursor);\n  }\n  onDragEnd(event, interaction) {\n    let cursorWorldCoordinates = event.ndcCursor;\n    let dragStartWorldCoordinates = interaction.dragStartEvent.ndcCursor;\n  }\n  onMouseMove(event, interaction) {\n    // console.log(event);\n    if (this.isLocked === false) return;\n    let webEvent = event.DOMEvent;\n    // @ts-ignore\n    const movementX = webEvent.movementX || webEvent.mozMovementX || webEvent.webkitMovementX || 0;\n    // @ts-ignore\n    const movementY = webEvent.movementY || webEvent.mozMovementY || webEvent.webkitMovementY || 0;\n\n    /**\n     * Move the character by a vector controlled by the mouse motion\n     */\n    let motionVector = Vec3.UnitX().times(movementX).plus(Vec3.UnitY().times(-movementY)).times(0.05 * appState.getState(ExamplePointerLockControlPanelParams.PlayerSpeed));\n    this.player.position = this.player.position.plus(motionVector);\n    this.camera.transform.position = this.camera.transform.position.plus(motionVector);\n  }\n\n  /**\n   * This would be a good place to implement the time update of any movement filters\n   * @param t\n   * @param args\n   */\n  timeUpdate(t) {}\n}","map":{"version":3,"names":["GetAppState","NodeTransform3D","Vec3","MainAppPointerLockInteractionMode","ExamplePointerLockControlPanelParams","appState","addSliderControl","PlayerSpeed","ExamplePointerLockInteractionMode","camera","model","constructor","owner","name","interactionCallbacks","args","mouseMovementSpeed","player","reset","pose","LookAt","position","plus","UnitZ","times","UnitY","beforeActivate","Create","controls","init","onWheelMove","event","interaction","zoom","DOMEvent","deltaY","onKeyDown","onKeyUp","keysDownState","onDragStart","setInteractionState","ndcCursor","onDragMove","mouseMovement","minus","getInteractionState","onDragEnd","cursorWorldCoordinates","dragStartWorldCoordinates","dragStartEvent","onMouseMove","isLocked","webEvent","movementX","mozMovementX","webkitMovementX","movementY","mozMovementY","webkitMovementY","motionVector","UnitX","getState","transform","timeUpdate","t"],"sources":["/Users/home/Desktop/cs4620-final-project/src/app/main/InteractionModes/ExamplePointerLockInteractionMode.ts"],"sourcesContent":["import {\n    AScenePointerLockInteractionMode\n} from \"../../../anigraph/scene/interactionmodes\";\nimport {MainSceneController} from \"../Scene\";\nimport {\n    ADOMPointerMoveInteraction, ADragInteraction,\n    AInteractionEvent, AKeyboardInteraction, GetAppState,\n    HasInteractionModeCallbacks,\n    NodeTransform3D, Vec2,\n    Vec3\n} from \"../../../anigraph\";\nimport {AWheelInteraction} from \"../../../anigraph/interaction/AWheelInteraction\";\nimport {MainAppPointerLockInteractionMode} from \"../../BaseClasses\";\n\n\nenum ExamplePointerLockControlPanelParams{\n    PlayerSpeed=\"PlayerSpeed\"\n}\n\nlet appState = GetAppState();\n/**\n * First argument is just a string we defined in the enum above to avoid type-based bugs...\n */\nappState.addSliderControl(ExamplePointerLockControlPanelParams.PlayerSpeed, 0.1, 0, 1,0.01);\n\nexport class ExamplePointerLockInteractionMode extends MainAppPointerLockInteractionMode{\n    /**\n     * You may want to define some parameters to adjust the speed of controls...\n     */\n    mouseMovementSpeed:number=0.1;\n\n    get camera(){\n        return this.model.camera;\n    }\n\n    constructor(owner?:MainSceneController,\n                name?:string,\n                interactionCallbacks?:HasInteractionModeCallbacks,\n                ...args:any[]) {\n        super(name, owner, interactionCallbacks, ...args);\n        // this.reset();\n    }\n\n    get player(){\n        return this.model.player;\n    }\n\n    reset(){\n        // You can reset the control mode here\n        this.camera.pose = NodeTransform3D.LookAt(\n            this.player.position.plus(Vec3.UnitZ().times(3)),\n            this.player.position,\n            Vec3.UnitY()\n        )\n    }\n\n    /**\n     * This gets called immediately before the interaction mode is activated. For now, we will call reset()\n     * @param args\n     */\n    beforeActivate(...args:any[]) {\n        super.beforeActivate(...args);\n        this.reset();\n    }\n\n    /**\n     * Create an instance in a single call, instead of calling new followed by init\n     * @param owner\n     * @param args\n     * @returns {ASceneInteractionMode}\n     * @constructor\n     */\n    static Create(owner: MainSceneController, ...args: any[]) {\n        let controls = new this();\n        controls.init(owner);\n        return controls;\n    }\n\n    onWheelMove(event: AInteractionEvent, interaction: AWheelInteraction) {\n        let zoom = (event.DOMEvent as WheelEvent).deltaY;\n    }\n\n    /**\n     * See other interaction mode examples for example of how to define\n     * @param event\n     * @param interaction\n     */\n    onKeyDown(event:AInteractionEvent, interaction:AKeyboardInteraction){\n        // e.g., define this.player.onKeyDown(event, interaction)\n\n    }\n\n    onKeyUp(event:AInteractionEvent, interaction:AKeyboardInteraction){\n        if(!interaction.keysDownState['w']){\n        }\n        if(!interaction.keysDownState['a']){\n        }\n        if(!interaction.keysDownState['s']){\n        }\n        if(!interaction.keysDownState['d']){\n        }\n        if(!interaction.keysDownState['r']){\n        }\n        if(!interaction.keysDownState['f']){\n        }\n    }\n\n    onDragStart(event: AInteractionEvent, interaction: ADragInteraction): void {\n        /**\n         * Here we will track some interaction state. Specifically, the last cursor position.\n         */\n        interaction.setInteractionState('lastCursor', event.ndcCursor);\n    }\n    onDragMove(event: AInteractionEvent, interaction: ADragInteraction): void {\n        if(!event.ndcCursor){\n            return;\n        }\n        let mouseMovement = event.ndcCursor.minus(interaction.getInteractionState('lastCursor'));\n        interaction.setInteractionState('lastCursor', event.ndcCursor);\n    }\n    onDragEnd(event: AInteractionEvent, interaction: ADragInteraction): void {\n        let cursorWorldCoordinates:Vec2|null = event.ndcCursor;\n        let dragStartWorldCoordinates:Vec2|null = interaction.dragStartEvent.ndcCursor;\n    }\n\n\n    onMouseMove(event:AInteractionEvent, interaction:ADOMPointerMoveInteraction ) {\n        // console.log(event);\n        if ( this.isLocked === false ) return;\n\n        let webEvent = (event.DOMEvent as MouseEvent);\n        // @ts-ignore\n        const movementX = webEvent.movementX || webEvent.mozMovementX || webEvent.webkitMovementX || 0;\n        // @ts-ignore\n        const movementY = webEvent.movementY || webEvent.mozMovementY || webEvent.webkitMovementY || 0;\n\n        /**\n         * Move the character by a vector controlled by the mouse motion\n         */\n        let motionVector =\n            Vec3.UnitX().times(movementX)\n                .plus(\n                    Vec3.UnitY().times(-movementY)\n                ).times(\n                0.05*appState.getState(ExamplePointerLockControlPanelParams.PlayerSpeed)\n            )\n        this.player.position = this.player.position.plus(motionVector);\n        this.camera.transform.position = this.camera.transform.position.plus(motionVector);\n    }\n\n\n\n    /**\n     * This would be a good place to implement the time update of any movement filters\n     * @param t\n     * @param args\n     */\n    timeUpdate(t: number, ...args:any[]) {\n    }\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}