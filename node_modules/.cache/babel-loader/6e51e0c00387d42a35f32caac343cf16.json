{"ast":null,"code":"var _dec, _class;\nimport { ASerializable, Vec3 } from \"../../../../anigraph\";\nimport { TriangleMeshCharacterModel } from \"../CharacterNodes/TriangleMeshCharacterModel\";\nimport { ATexture } from \"../../../../anigraph/rendering/ATexture\";\nimport { AppConfigs } from \"../../../AppConfigs\";\nimport { CharacterModel } from \"../../../BaseClasses\";\nexport let PlayerModel = (_dec = ASerializable(\"PlayerModel\"), _dec(_class = class PlayerModel extends TriangleMeshCharacterModel {\n  constructor() {\n    super(...arguments);\n    this.size = void 0;\n    this.requestJump = false;\n    this.horizontalMoving = false;\n  }\n  static async Create(diffuseMap, size) {\n    var _size;\n    size = (_size = size) !== null && _size !== void 0 ? _size : AppConfigs.DefaultBotSize;\n    let newmodel = new this();\n    newmodel.size = size;\n    await newmodel.init(diffuseMap);\n    return newmodel;\n  }\n  async init(diffuseMap) {\n    this.setMaterial(CharacterModel.ShaderModel.CreateMaterial(diffuseMap instanceof ATexture ? diffuseMap : new ATexture(diffuseMap)));\n  }\n  update(deltaT, listOfTerrains) {\n    if (this.requestJump) {\n      if (AppConfigs.AllowMultiJump || Math.abs(this.velocity.y) < 0.001) {\n        this.velocity.y = AppConfigs.JumpPower;\n      }\n      this.requestJump = false;\n    }\n    this.velocity.y -= AppConfigs.Gravity;\n    if (!this.horizontalMoving) {\n      this.velocity.x /= 1 + AppConfigs.SlowDown;\n    }\n    let realVelX = this.velocity.x;\n    let realVelY = this.velocity.y;\n    for (let terrain of listOfTerrains) {\n      if (terrain.position.y < -400) continue;\n      const upperBound = terrain.position.y + terrain.sizeY / 2;\n      const lowerBound = terrain.position.y - terrain.sizeY / 2;\n      const leftBound = terrain.position.x - terrain.sizeX / 2;\n      const rightBound = terrain.position.x + terrain.sizeX / 2;\n      const thisUpperBound = this.position.y + this.size / 2;\n      const thisLowerBound = this.position.y - this.size / 2;\n      const thisLeftBound = this.position.x - this.size / 2;\n      const thisRightBound = this.position.x + this.size / 2;\n      if (thisLowerBound < upperBound && thisLowerBound > lowerBound || thisUpperBound > lowerBound && thisUpperBound < upperBound || thisLowerBound == lowerBound && thisUpperBound == upperBound) {\n        if (this.velocity.x > 0 && thisRightBound + this.velocity.x > leftBound && thisLeftBound < rightBound) {\n          realVelX = Math.min(this.velocity.x, leftBound - thisRightBound);\n        }\n        if (this.velocity.x < 0 && thisLeftBound + this.velocity.x < rightBound && thisRightBound > rightBound) {\n          realVelX = Math.max(this.velocity.x, -(thisLeftBound - rightBound));\n        }\n      }\n      if (thisLeftBound < rightBound && thisLeftBound > leftBound || thisRightBound > leftBound && thisRightBound < rightBound || thisRightBound == rightBound && thisLeftBound == leftBound) {\n        if (this.velocity.y < 0 && thisLowerBound + this.velocity.y < upperBound && thisUpperBound > upperBound) {\n          this.velocity.y = Math.max(this.velocity.y, -(thisLowerBound - upperBound));\n        }\n        if (this.velocity.y > 0 && thisUpperBound + this.velocity.y > lowerBound && thisLowerBound < lowerBound) {\n          this.velocity.y = Math.min(this.velocity.y, lowerBound - thisUpperBound);\n        }\n      }\n    }\n    this.position = this.position.plus(new Vec3(realVelX, this.velocity.y, 0));\n  }\n}) || _class);","map":{"version":3,"names":["ASerializable","Vec3","TriangleMeshCharacterModel","ATexture","AppConfigs","CharacterModel","PlayerModel","size","requestJump","horizontalMoving","Create","diffuseMap","DefaultBotSize","newmodel","init","setMaterial","ShaderModel","CreateMaterial","update","deltaT","listOfTerrains","AllowMultiJump","Math","abs","velocity","y","JumpPower","Gravity","x","SlowDown","realVelX","realVelY","terrain","position","upperBound","sizeY","lowerBound","leftBound","sizeX","rightBound","thisUpperBound","thisLowerBound","thisLeftBound","thisRightBound","min","max","plus"],"sources":["/Users/home/Desktop/cs4620-final-project/src/app/main/Nodes/PlayerNode/PlayerModel.ts"],"sourcesContent":["import {ASerializable, Vec3} from \"../../../../anigraph\";\nimport {TriangleMeshCharacterModel} from \"../CharacterNodes/TriangleMeshCharacterModel\";\nimport {ATexture} from \"../../../../anigraph/rendering/ATexture\";\nimport {AppConfigs} from \"../../../AppConfigs\";\nimport {CharacterModel} from \"../../../BaseClasses\";\nimport {GameTerrainModel} from \"../GameTerrain/GameTerrainModel\";\n\n@ASerializable(\"PlayerModel\")\nexport class PlayerModel extends TriangleMeshCharacterModel {\n  size!: number;\n  requestJump: boolean = false;\n  horizontalMoving: boolean = false;\n\n  static async Create(diffuseMap: string | ATexture, size?: number, ...args: any[]) {\n    size = size ?? AppConfigs.DefaultBotSize;\n    let newmodel = new this();\n    newmodel.size = size;\n    await newmodel.init(diffuseMap);\n    return newmodel;\n  }\n\n  async init(diffuseMap: string | ATexture, ...args: any[]) {\n    this.setMaterial(CharacterModel.ShaderModel.CreateMaterial(\n      (diffuseMap instanceof ATexture) ? diffuseMap : new ATexture(diffuseMap)\n    ));\n  }\n\n  update(deltaT: number, listOfTerrains: GameTerrainModel[]) {\n    if (this.requestJump) {\n      if (AppConfigs.AllowMultiJump || Math.abs(this.velocity.y) < 0.001) {\n        this.velocity.y = AppConfigs.JumpPower;\n      }\n      this.requestJump = false;\n    }\n    this.velocity.y -= AppConfigs.Gravity;\n    if (!this.horizontalMoving) {\n      this.velocity.x /= 1 + AppConfigs.SlowDown;\n    }\n    let realVelX = this.velocity.x;\n    let realVelY = this.velocity.y;\n    for (let terrain of listOfTerrains) {\n      if (terrain.position.y < -400) continue;\n      const upperBound = terrain.position.y + terrain.sizeY / 2;\n      const lowerBound = terrain.position.y - terrain.sizeY / 2;\n      const leftBound = terrain.position.x - terrain.sizeX / 2;\n      const rightBound = terrain.position.x + terrain.sizeX / 2;\n\n      const thisUpperBound = this.position.y + this.size / 2;\n      const thisLowerBound = this.position.y - this.size / 2;\n      const thisLeftBound = this.position.x - this.size / 2;\n      const thisRightBound = this.position.x + this.size / 2;\n\n      if ((thisLowerBound < upperBound && thisLowerBound > lowerBound) ||\n        (thisUpperBound > lowerBound && thisUpperBound < upperBound) ||\n        thisLowerBound == lowerBound && thisUpperBound == upperBound) {\n        if (this.velocity.x > 0 && thisRightBound + this.velocity.x > leftBound && thisLeftBound < rightBound) {\n          realVelX = Math.min(this.velocity.x, leftBound - thisRightBound);\n        }\n\n        if (this.velocity.x < 0 && thisLeftBound + this.velocity.x < rightBound && thisRightBound > rightBound) {\n          realVelX = Math.max(this.velocity.x, -(thisLeftBound - rightBound));\n        }\n      }\n\n      if ((thisLeftBound < rightBound && thisLeftBound > leftBound) ||\n        (thisRightBound > leftBound && thisRightBound < rightBound) ||\n        thisRightBound == rightBound && thisLeftBound == leftBound) {\n        if (this.velocity.y < 0 && thisLowerBound + this.velocity.y < upperBound && thisUpperBound > upperBound) {\n          this.velocity.y = Math.max(this.velocity.y, -(thisLowerBound - upperBound));\n        }\n\n        if (this.velocity.y > 0 && thisUpperBound + this.velocity.y > lowerBound && thisLowerBound < lowerBound) {\n          this.velocity.y = Math.min(this.velocity.y, lowerBound - thisUpperBound);\n        }\n      }\n\n    }\n\n    this.position = this.position.plus(new Vec3(realVelX, this.velocity.y, 0));\n  }\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}