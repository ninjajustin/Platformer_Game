{"ast":null,"code":"import { useId as e } from \"@radix-ui/react-id\";\nimport * as o from \"@radix-ui/react-visually-hidden\";\nimport { Slottable as t } from \"@radix-ui/react-slot\";\nimport { Portal as r } from \"@radix-ui/react-portal\";\nimport * as n from \"@radix-ui/react-popper\";\nimport { createPopperScope as i } from \"@radix-ui/react-popper\";\nimport { Primitive as a } from \"@radix-ui/react-primitive\";\nimport { Presence as l } from \"@radix-ui/react-presence\";\nimport { useRect as c } from \"@radix-ui/react-use-rect\";\nimport { usePrevious as s } from \"@radix-ui/react-use-previous\";\nimport { useEscapeKeydown as u } from \"@radix-ui/react-use-escape-keydown\";\nimport { useControllableState as p } from \"@radix-ui/react-use-controllable-state\";\nimport { createContextScope as d } from \"@radix-ui/react-context\";\nimport { useComposedRefs as m } from \"@radix-ui/react-compose-refs\";\nimport { composeEventHandlers as f } from \"@radix-ui/primitive\";\nimport * as T from \"react\";\nimport C from \"@babel/runtime/helpers/esm/extends\";\nconst [w, x] = d(\"Tooltip\", [i]);\nexport { x as createTooltipScope };\nconst g = i(),\n  E = 700,\n  [v, b] = w(\"TooltipProvider\", {\n    isOpenDelayed: !0,\n    delayDuration: E,\n    onOpen: () => {},\n    onClose: () => {}\n  });\nexport const TooltipProvider = e => {\n  const {\n      __scopeTooltip: o,\n      delayDuration: t = E,\n      skipDelayDuration: r = 300,\n      children: n\n    } = e,\n    [i, a] = T.useState(!0),\n    l = T.useRef(0);\n  return T.useEffect(() => {\n    const e = l.current;\n    return () => window.clearTimeout(e);\n  }, []), /*#__PURE__*/T.createElement(v, {\n    scope: o,\n    isOpenDelayed: i,\n    delayDuration: t,\n    onOpen: T.useCallback(() => {\n      window.clearTimeout(l.current), a(!1);\n    }, []),\n    onClose: T.useCallback(() => {\n      window.clearTimeout(l.current), l.current = window.setTimeout(() => a(!0), r);\n    }, [r])\n  }, n);\n}; /*#__PURE__*/\nconst [y, _] = w(\"Tooltip\");\nexport const Tooltip = o => {\n  const {\n      __scopeTooltip: t,\n      children: r,\n      open: i,\n      defaultOpen: a = !1,\n      onOpenChange: l,\n      delayDuration: c\n    } = o,\n    s = b(\"Tooltip\", t),\n    u = g(t),\n    [d, m] = T.useState(null),\n    f = e(),\n    C = T.useRef(0),\n    w = null != c ? c : s.delayDuration,\n    x = T.useRef(!1),\n    {\n      onOpen: E,\n      onClose: v\n    } = s,\n    [_ = !1, h] = p({\n      prop: i,\n      defaultProp: a,\n      onChange: e => {\n        e && (document.dispatchEvent(new CustomEvent(\"tooltip.open\")), E()), null == l || l(e);\n      }\n    }),\n    k = T.useMemo(() => _ ? x.current ? \"delayed-open\" : \"instant-open\" : \"closed\", [_]),\n    D = T.useCallback(() => {\n      window.clearTimeout(C.current), x.current = !1, h(!0);\n    }, [h]),\n    O = T.useCallback(() => {\n      window.clearTimeout(C.current), C.current = window.setTimeout(() => {\n        x.current = !0, h(!0);\n      }, w);\n    }, [w, h]);\n  return T.useEffect(() => () => window.clearTimeout(C.current), []), /*#__PURE__*/T.createElement(n.Root, u, /*#__PURE__*/T.createElement(y, {\n    scope: t,\n    contentId: f,\n    open: _,\n    stateAttribute: k,\n    trigger: d,\n    onTriggerChange: m,\n    onTriggerEnter: T.useCallback(() => {\n      s.isOpenDelayed ? O() : D();\n    }, [s.isOpenDelayed, O, D]),\n    onOpen: T.useCallback(D, [D]),\n    onClose: T.useCallback(() => {\n      window.clearTimeout(C.current), h(!1), v();\n    }, [h, v])\n  }, r));\n}; /*#__PURE__*/\nexport const TooltipTrigger = /*#__PURE__*/T.forwardRef((e, o) => {\n  const {\n      __scopeTooltip: t,\n      ...r\n    } = e,\n    i = _(\"TooltipTrigger\", t),\n    l = g(t),\n    c = m(o, i.onTriggerChange),\n    s = T.useRef(!1),\n    u = T.useCallback(() => s.current = !1, []);\n  return T.useEffect(() => () => document.removeEventListener(\"mouseup\", u), [u]), /*#__PURE__*/T.createElement(n.Anchor, C({\n    asChild: !0\n  }, l), /*#__PURE__*/T.createElement(a.button, C({\n    \"aria-describedby\": i.open ? i.contentId : void 0,\n    \"data-state\": i.stateAttribute\n  }, r, {\n    ref: c,\n    onMouseEnter: f(e.onMouseEnter, i.onTriggerEnter),\n    onMouseLeave: f(e.onMouseLeave, i.onClose),\n    onMouseDown: f(e.onMouseDown, () => {\n      i.onClose(), s.current = !0, document.addEventListener(\"mouseup\", u, {\n        once: !0\n      });\n    }),\n    onFocus: f(e.onFocus, () => {\n      s.current || i.onOpen();\n    }),\n    onBlur: f(e.onBlur, i.onClose),\n    onClick: f(e.onClick, i.onClose)\n  })));\n}); /*#__PURE__*/\nexport const TooltipContent = /*#__PURE__*/T.forwardRef((e, o) => {\n  const {\n      forceMount: t,\n      ...r\n    } = e,\n    n = _(\"TooltipContent\", e.__scopeTooltip); /*#__PURE__*/\n  return T.createElement(l, {\n    present: t || n.open\n  }, /*#__PURE__*/T.createElement(h, C({\n    ref: o\n  }, r)));\n});\nconst h = /*#__PURE__*/T.forwardRef((e, i) => {\n  const {\n      __scopeTooltip: a,\n      children: l,\n      \"aria-label\": c,\n      portalled: s = !0,\n      ...p\n    } = e,\n    d = _(\"TooltipContent\", a),\n    m = g(a),\n    f = s ? r : T.Fragment,\n    {\n      onClose: w\n    } = d;\n  return u(() => w()), T.useEffect(() => (document.addEventListener(\"tooltip.open\", w), () => document.removeEventListener(\"tooltip.open\", w)), [w]), /*#__PURE__*/T.createElement(f, null, /*#__PURE__*/T.createElement(k, {\n    __scopeTooltip: a\n  }), /*#__PURE__*/T.createElement(n.Content, C({\n    \"data-state\": d.stateAttribute\n  }, m, p, {\n    ref: i,\n    style: {\n      ...p.style,\n      \"--radix-tooltip-content-transform-origin\": \"var(--radix-popper-transform-origin)\"\n    }\n  }), /*#__PURE__*/T.createElement(t, null, l), /*#__PURE__*/T.createElement(o.Root, {\n    id: d.contentId,\n    role: \"tooltip\"\n  }, c || l)));\n}); /*#__PURE__*/\nexport const TooltipArrow = /*#__PURE__*/T.forwardRef((e, o) => {\n  const {\n      __scopeTooltip: t,\n      ...r\n    } = e,\n    i = g(t); /*#__PURE__*/\n  return T.createElement(n.Arrow, C({}, i, r, {\n    ref: o\n  }));\n}); /*#__PURE__*/\nfunction k(e) {\n  const {\n      __scopeTooltip: o\n    } = e,\n    t = _(\"CheckTriggerMoved\", o),\n    r = c(t.trigger),\n    n = null == r ? void 0 : r.left,\n    i = s(n),\n    a = null == r ? void 0 : r.top,\n    l = s(a),\n    u = t.onClose;\n  return T.useEffect(() => {\n    (void 0 !== i && i !== n || void 0 !== l && l !== a) && u();\n  }, [u, i, l, n, a]), null;\n}\nexport const Provider = TooltipProvider;\nexport const Root = Tooltip;\nexport const Trigger = TooltipTrigger;\nexport const Content = TooltipContent;\nexport const Arrow = TooltipArrow;","map":null,"metadata":{},"sourceType":"module"}