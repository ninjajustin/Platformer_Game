{"ast":null,"code":"import * as THREE from \"three\";\nimport { PixelData } from \"./PixelData\";\nexport class PixelDataFloat1D extends PixelData {\n  get _threeformat() {\n    return THREE.RedFormat;\n  }\n  get _threetype() {\n    return THREE.FloatType;\n  }\n  getPixelNN(x, y) {\n    let hi = Math.round(y);\n    let wi = Math.round(x);\n    // @ts-ignore\n    // return this.data.slice((hi*(this.width)+wi)*this.nChannels, (hi*(this.width)+wi+1)*this.nChannels);\n    // let rval:number[]=[];\n    return this.data[(hi * this.width + wi) * this.nChannels];\n    // return this.data[(hi*(this.width)+wi)*this.nChannels];\n  }\n\n  setPixelNN(x, y, value) {\n    let hi = Math.round(y);\n    let wi = Math.round(x);\n    // this.data.set([value], (hi*(this.width)+wi)*this.nChannels)\n    this.data[(hi * this.width + wi) * this.nChannels] = value;\n    // this.data[(xi*(this.width)+yi)*this.nChannels]=value;\n  }\n\n  get nChannels() {\n    return 1;\n  }\n  constructor(width, height, data) {\n    super(width, height, 1, data);\n  }\n  static CreateBlock(width, height, data) {\n    for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      args[_key - 3] = arguments[_key];\n    }\n    return new this(width, height, data, ...args);\n  }\n}","map":{"version":3,"names":["THREE","PixelData","PixelDataFloat1D","_threeformat","RedFormat","_threetype","FloatType","getPixelNN","x","y","hi","Math","round","wi","data","width","nChannels","setPixelNN","value","constructor","height","CreateBlock","args"],"sources":["/Users/home/Desktop/College/Fall 2022/CS_4620/cs4620-final-project/src/anigraph/rendering/image/pixeldata/PixelDataFloat1D.ts"],"sourcesContent":["import * as THREE from \"three\";\nimport {PixelData} from \"./PixelData\";\n\nexport class PixelDataFloat1D extends PixelData<Float32Array>{\n\n    get _threeformat(){\n        return THREE.RedFormat;\n    }\n    get _threetype(){\n        return THREE.FloatType;\n    }\n\n    getPixelNN(x:number,y:number){\n        let hi = Math.round(y);\n        let wi = Math.round(x);\n        // @ts-ignore\n        // return this.data.slice((hi*(this.width)+wi)*this.nChannels, (hi*(this.width)+wi+1)*this.nChannels);\n        // let rval:number[]=[];\n        return this.data[(hi*(this.width)+wi)*this.nChannels];\n        // return this.data[(hi*(this.width)+wi)*this.nChannels];\n    }\n\n    setPixelNN(x:number,y:number, value:number){\n        let hi = Math.round(y);\n        let wi = Math.round(x);\n        // this.data.set([value], (hi*(this.width)+wi)*this.nChannels)\n        this.data[(hi*(this.width)+wi)*this.nChannels]=value;\n        // this.data[(xi*(this.width)+yi)*this.nChannels]=value;\n    }\n\n    get nChannels(){return 1;}\n    constructor(width?:number, height?:number, data?:Float32Array, ...args:any[]) {\n        super(width, height, 1, data);\n    }\n    static CreateBlock(width:number, height:number, data:Float32Array, ...args:any[]){\n        return new this(width, height, data, ...args);\n    }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,SAAS,QAAO,aAAa;AAErC,OAAO,MAAMC,gBAAgB,SAASD,SAAS,CAAc;EAEzD,IAAIE,YAAY,GAAE;IACd,OAAOH,KAAK,CAACI,SAAS;EAC1B;EACA,IAAIC,UAAU,GAAE;IACZ,OAAOL,KAAK,CAACM,SAAS;EAC1B;EAEAC,UAAU,CAACC,CAAQ,EAACC,CAAQ,EAAC;IACzB,IAAIC,EAAE,GAAGC,IAAI,CAACC,KAAK,CAACH,CAAC,CAAC;IACtB,IAAII,EAAE,GAAGF,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC;IACtB;IACA;IACA;IACA,OAAO,IAAI,CAACM,IAAI,CAAC,CAACJ,EAAE,GAAE,IAAI,CAACK,KAAM,GAACF,EAAE,IAAE,IAAI,CAACG,SAAS,CAAC;IACrD;EACJ;;EAEAC,UAAU,CAACT,CAAQ,EAACC,CAAQ,EAAES,KAAY,EAAC;IACvC,IAAIR,EAAE,GAAGC,IAAI,CAACC,KAAK,CAACH,CAAC,CAAC;IACtB,IAAII,EAAE,GAAGF,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC;IACtB;IACA,IAAI,CAACM,IAAI,CAAC,CAACJ,EAAE,GAAE,IAAI,CAACK,KAAM,GAACF,EAAE,IAAE,IAAI,CAACG,SAAS,CAAC,GAACE,KAAK;IACpD;EACJ;;EAEA,IAAIF,SAAS,GAAE;IAAC,OAAO,CAAC;EAAC;EACzBG,WAAW,CAACJ,KAAa,EAAEK,MAAc,EAAEN,IAAkB,EAAiB;IAC1E,KAAK,CAACC,KAAK,EAAEK,MAAM,EAAE,CAAC,EAAEN,IAAI,CAAC;EACjC;EACA,OAAOO,WAAW,CAACN,KAAY,EAAEK,MAAa,EAAEN,IAAiB,EAAgB;IAAA,kCAAXQ,IAAI;MAAJA,IAAI;IAAA;IACtE,OAAO,IAAI,IAAI,CAACP,KAAK,EAAEK,MAAM,EAAEN,IAAI,EAAE,GAAGQ,IAAI,CAAC;EACjD;AACJ"},"metadata":{},"sourceType":"module"}