{"ast":null,"code":"import { ANodeView } from \"./nodeView\";\nexport class QuickNodeView extends ANodeView {\n  init() {\n    this._initCallback(this);\n  }\n  update() {\n    this._updateCallback(this);\n  }\n  dispose() {\n    super.dispose();\n    this._disposeCallback(this);\n  }\n  constructor(model, init, update, dispose) {\n    super();\n    this._initCallback = void 0;\n    this._updateCallback = void 0;\n    this._disposeCallback = void 0;\n    if (model && init === undefined) {\n      throw new Error(\"If model provided to instructor, you must also provide init function\");\n    }\n    if (init) {\n      this._initCallback = init;\n    }\n    if (update) {\n      this._updateCallback = update;\n    }\n    if (dispose) {\n      this._disposeCallback = dispose;\n    }\n    if (model) {\n      this.setModel(model);\n    }\n  }\n  static Create(model, init, update, dispose) {\n    let newView = new QuickNodeView();\n    newView._initCallback = init;\n    if (update) {\n      newView._updateCallback = update;\n    }\n    if (dispose) {\n      newView._disposeCallback = dispose;\n    }\n    newView.setModel(model);\n    return newView;\n  }\n}","map":{"version":3,"names":["ANodeView","QuickNodeView","init","_initCallback","update","_updateCallback","dispose","_disposeCallback","constructor","model","undefined","Error","setModel","Create","newView"],"sources":["/Users/home/Desktop/cs4620-final-project/src/anigraph/scene/QuickNodeView.ts"],"sourcesContent":["import {ANodeView, NodeViewCallback} from \"./nodeView\";\nimport {ANodeModel} from \"./nodeModel\";\n\nexport class QuickNodeView extends ANodeView{\n    protected _initCallback!:NodeViewCallback;\n    protected _updateCallback!:NodeViewCallback;\n    protected _disposeCallback!:NodeViewCallback;\n\n    init(){\n        this._initCallback(this);\n    }\n\n    update(){\n        this._updateCallback(this);\n    }\n\n    dispose() {\n        super.dispose();\n        this._disposeCallback(this);\n    }\n\n    constructor(model?:ANodeModel, init?:NodeViewCallback, update?:NodeViewCallback, dispose?:NodeViewCallback){\n        super();\n        if(model && (init===undefined)){\n            throw new Error(\"If model provided to instructor, you must also provide init function\")\n        }\n        if(init){this._initCallback = init;}\n        if(update){this._updateCallback = update;}\n        if(dispose){this._disposeCallback = dispose;}\n        if(model) {\n            this.setModel(model);\n        }\n    }\n\n    static Create(model:ANodeModel, init:NodeViewCallback, update?:NodeViewCallback, dispose?:NodeViewCallback){\n        let newView = new QuickNodeView();\n        newView._initCallback = init;\n        if(update){newView._updateCallback = update;}\n        if(dispose){newView._disposeCallback = dispose;}\n        newView.setModel(model);\n        return newView;\n    }\n}\n\n"],"mappings":"AAAA,SAAQA,SAAS,QAAyB,YAAY;AAGtD,OAAO,MAAMC,aAAa,SAASD,SAAS;EAKxCE,IAAI,GAAE;IACF,IAAI,CAACC,aAAa,CAAC,IAAI,CAAC;EAC5B;EAEAC,MAAM,GAAE;IACJ,IAAI,CAACC,eAAe,CAAC,IAAI,CAAC;EAC9B;EAEAC,OAAO,GAAG;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAAC;EAC/B;EAEAC,WAAW,CAACC,KAAiB,EAAEP,IAAsB,EAAEE,MAAwB,EAAEE,OAAyB,EAAC;IACvG,KAAK,EAAE;IAAC,KAlBFH,aAAa;IAAA,KACbE,eAAe;IAAA,KACfE,gBAAgB;IAiBtB,IAAGE,KAAK,IAAKP,IAAI,KAAGQ,SAAU,EAAC;MAC3B,MAAM,IAAIC,KAAK,CAAC,sEAAsE,CAAC;IAC3F;IACA,IAAGT,IAAI,EAAC;MAAC,IAAI,CAACC,aAAa,GAAGD,IAAI;IAAC;IACnC,IAAGE,MAAM,EAAC;MAAC,IAAI,CAACC,eAAe,GAAGD,MAAM;IAAC;IACzC,IAAGE,OAAO,EAAC;MAAC,IAAI,CAACC,gBAAgB,GAAGD,OAAO;IAAC;IAC5C,IAAGG,KAAK,EAAE;MACN,IAAI,CAACG,QAAQ,CAACH,KAAK,CAAC;IACxB;EACJ;EAEA,OAAOI,MAAM,CAACJ,KAAgB,EAAEP,IAAqB,EAAEE,MAAwB,EAAEE,OAAyB,EAAC;IACvG,IAAIQ,OAAO,GAAG,IAAIb,aAAa,EAAE;IACjCa,OAAO,CAACX,aAAa,GAAGD,IAAI;IAC5B,IAAGE,MAAM,EAAC;MAACU,OAAO,CAACT,eAAe,GAAGD,MAAM;IAAC;IAC5C,IAAGE,OAAO,EAAC;MAACQ,OAAO,CAACP,gBAAgB,GAAGD,OAAO;IAAC;IAC/CQ,OAAO,CAACF,QAAQ,CAACH,KAAK,CAAC;IACvB,OAAOK,OAAO;EAClB;AACJ"},"metadata":{},"sourceType":"module"}