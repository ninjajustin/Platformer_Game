{"ast":null,"code":"import * as e from \"@radix-ui/react-arrow\";\nimport { Primitive as o } from \"@radix-ui/react-primitive\";\nimport { useSize as r } from \"@radix-ui/react-use-size\";\nimport { useRect as t } from \"@radix-ui/react-use-rect\";\nimport { createContextScope as n } from \"@radix-ui/react-context\";\nimport { useComposedRefs as i } from \"@radix-ui/react-compose-refs\";\nimport { getPlacementData as p } from \"@radix-ui/popper\";\nimport * as s from \"react\";\nimport a from \"@babel/runtime/helpers/esm/extends\";\nconst [c, l] = n(\"Popper\");\nexport { l as createPopperScope };\nconst [f, d] = c(\"Popper\");\nexport const Popper = e => {\n  const {\n      __scopePopper: o,\n      children: r\n    } = e,\n    [t, n] = s.useState(null); /*#__PURE__*/\n  return s.createElement(f, {\n    scope: o,\n    anchor: t,\n    onAnchorChange: n\n  }, r);\n}; /*#__PURE__*/\nexport const PopperAnchor = /*#__PURE__*/s.forwardRef((e, r) => {\n  const {\n      __scopePopper: t,\n      virtualRef: n,\n      ...p\n    } = e,\n    c = d(\"PopperAnchor\", t),\n    l = s.useRef(null),\n    f = i(r, l);\n  return s.useEffect(() => {\n    c.onAnchorChange((null == n ? void 0 : n.current) || l.current);\n  }), n ? null : /*#__PURE__*/s.createElement(o.div, a({}, p, {\n    ref: f\n  }));\n}); /*#__PURE__*/\nconst [u, m] = c(\"PopperContent\");\nexport const PopperContent = /*#__PURE__*/s.forwardRef((e, n) => {\n  const {\n      __scopePopper: c,\n      side: l = \"bottom\",\n      sideOffset: f,\n      align: m = \"center\",\n      alignOffset: w,\n      collisionTolerance: h,\n      avoidCollisions: x = !0,\n      ...v\n    } = e,\n    P = d(\"PopperContent\", c),\n    [A, g] = s.useState(),\n    E = t(P.anchor),\n    [y, C] = s.useState(null),\n    S = r(y),\n    [R, O] = s.useState(null),\n    _ = r(R),\n    b = i(n, e => C(e)),\n    z = function () {\n      const [e, o] = s.useState(void 0);\n      return s.useEffect(() => {\n        let e;\n        function r() {\n          o({\n            width: window.innerWidth,\n            height: window.innerHeight\n          });\n        }\n        function t() {\n          window.clearTimeout(e), e = window.setTimeout(r, 100);\n        }\n        return r(), window.addEventListener(\"resize\", t), () => window.removeEventListener(\"resize\", t);\n      }, []), e;\n    }(),\n    T = z ? DOMRect.fromRect({\n      ...z,\n      x: 0,\n      y: 0\n    }) : void 0,\n    {\n      popperStyles: k,\n      arrowStyles: L,\n      placedSide: B,\n      placedAlign: D\n    } = p({\n      anchorRect: E,\n      popperSize: S,\n      arrowSize: _,\n      arrowOffset: A,\n      side: l,\n      sideOffset: f,\n      align: m,\n      alignOffset: w,\n      shouldAvoidCollisions: x,\n      collisionBoundariesRect: T,\n      collisionTolerance: h\n    }),\n    H = void 0 !== B; /*#__PURE__*/\n  return s.createElement(\"div\", {\n    style: k,\n    \"data-radix-popper-content-wrapper\": \"\"\n  }, /*#__PURE__*/s.createElement(u, {\n    scope: c,\n    arrowStyles: L,\n    onArrowChange: O,\n    onArrowOffsetChange: g\n  }, /*#__PURE__*/s.createElement(o.div, a({\n    \"data-side\": B,\n    \"data-align\": D\n  }, v, {\n    style: {\n      ...v.style,\n      animation: H ? void 0 : \"none\"\n    },\n    ref: b\n  }))));\n}); /*#__PURE__*/\nexport const PopperArrow = /*#__PURE__*/s.forwardRef(function (o, r) {\n  const {\n      __scopePopper: t,\n      offset: n,\n      ...i\n    } = o,\n    p = m(\"PopperArrow\", t),\n    {\n      onArrowOffsetChange: c\n    } = p;\n  return s.useEffect(() => c(n), [c, n]), /*#__PURE__*/s.createElement(\"span\", {\n    style: {\n      ...p.arrowStyles,\n      pointerEvents: \"none\"\n    }\n  }, /*#__PURE__*/s.createElement(\"span\", {\n    ref: p.onArrowChange,\n    style: {\n      display: \"inline-block\",\n      verticalAlign: \"top\",\n      pointerEvents: \"auto\"\n    }\n  }, /*#__PURE__*/s.createElement(e.Root, a({}, i, {\n    ref: r,\n    style: {\n      ...i.style,\n      display: \"block\"\n    }\n  }))));\n}); /*#__PURE__*/\nexport const Root = Popper;\nexport const Anchor = PopperAnchor;\nexport const Content = PopperContent;\nexport const Arrow = PopperArrow;","map":null,"metadata":{},"sourceType":"module"}