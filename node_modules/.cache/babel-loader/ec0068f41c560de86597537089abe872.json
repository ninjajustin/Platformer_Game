{"ast":null,"code":"import { AParticleSystemView } from \"../AParticleSystemView\";\nexport class AInstancedParticleSystemView extends AParticleSystemView {\n  get particlesElement() {\n    return this._particlesElement;\n  }\n  get model() {\n    return this._model;\n  }\n\n  // createParticlesElement(...args:any[]): AInstancedParticlesGraphic<P>{\n  //     return AInstancedParticlesGraphic.Create(AInstancedParticleSystemView.MAX_PARTICLES);\n  // }\n\n  init() {\n    super.init();\n  }\n  update() {\n    for (let i = 0; i < this.model.particles.length; i++) {\n      this.particlesElement.setColorAt(i, this.getColorForParticleIndex(i));\n      this.particlesElement.setMatrixAt(i, this.getTransformForParticleIndex(i));\n    }\n    this.particlesElement.setNeedsUpdate();\n  }\n}\nAInstancedParticleSystemView.MAX_PARTICLES = 300;","map":{"version":3,"names":["AParticleSystemView","AInstancedParticleSystemView","particlesElement","_particlesElement","model","_model","init","update","i","particles","length","setColorAt","getColorForParticleIndex","setMatrixAt","getTransformForParticleIndex","setNeedsUpdate","MAX_PARTICLES"],"sources":["/Users/home/Desktop/College/Fall 2022/CS_4620/cs4620-final-project/src/anigraph/effects/particles/InstancedParticles/AInstancedParticleSystemView.ts"],"sourcesContent":["import {Color, Mat4} from \"../../../index\";\nimport {AInstancedParticleSystemGraphic} from \"./AInstancedParticleSystemGraphic\";\nimport {AInstancedParticleSystemModel} from \"./AInstancedParticleSystemModel\";\nimport {AParticleSystemView} from \"../AParticleSystemView\";\nimport {Particle3D} from \"../../../physics/AParticle3D\";\n\n\n\nexport abstract class AInstancedParticleSystemView<P extends Particle3D> extends AParticleSystemView<P>{\n    static MAX_PARTICLES=300;\n    abstract getColorForParticleIndex(i:number):Color;\n    abstract getTransformForParticleIndex(i:number):Mat4;\n\n    get particlesElement():AInstancedParticleSystemGraphic<P>{\n        return this._particlesElement as AInstancedParticleSystemGraphic<P>;\n    }\n    get model():AInstancedParticleSystemModel<P>{\n        return this._model as AInstancedParticleSystemModel<P>;\n    }\n\n    // createParticlesElement(...args:any[]): AInstancedParticlesGraphic<P>{\n    //     return AInstancedParticlesGraphic.Create(AInstancedParticleSystemView.MAX_PARTICLES);\n    // }\n\n    init() {\n        super.init();\n    }\n\n    update(...args:any[]) {\n        for(let i=0;i<this.model.particles.length;i++){\n            this.particlesElement.setColorAt(i, this.getColorForParticleIndex(i));\n            this.particlesElement.setMatrixAt(i, this.getTransformForParticleIndex(i));\n        }\n        this.particlesElement.setNeedsUpdate();\n    }\n\n}\n"],"mappings":"AAGA,SAAQA,mBAAmB,QAAO,wBAAwB;AAK1D,OAAO,MAAeC,4BAA4B,SAA+BD,mBAAmB,CAAG;EAKnG,IAAIE,gBAAgB,GAAqC;IACrD,OAAO,IAAI,CAACC,iBAAiB;EACjC;EACA,IAAIC,KAAK,GAAmC;IACxC,OAAO,IAAI,CAACC,MAAM;EACtB;;EAEA;EACA;EACA;;EAEAC,IAAI,GAAG;IACH,KAAK,CAACA,IAAI,EAAE;EAChB;EAEAC,MAAM,GAAgB;IAClB,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,IAAI,CAACJ,KAAK,CAACK,SAAS,CAACC,MAAM,EAACF,CAAC,EAAE,EAAC;MAC1C,IAAI,CAACN,gBAAgB,CAACS,UAAU,CAACH,CAAC,EAAE,IAAI,CAACI,wBAAwB,CAACJ,CAAC,CAAC,CAAC;MACrE,IAAI,CAACN,gBAAgB,CAACW,WAAW,CAACL,CAAC,EAAE,IAAI,CAACM,4BAA4B,CAACN,CAAC,CAAC,CAAC;IAC9E;IACA,IAAI,CAACN,gBAAgB,CAACa,cAAc,EAAE;EAC1C;AAEJ;AA5BsBd,4BAA4B,CACvCe,aAAa,GAAC,GAAG"},"metadata":{},"sourceType":"module"}