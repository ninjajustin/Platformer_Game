{"ast":null,"code":"var _dec, _class, _dec2, _class3;\nimport { ASerializable } from \"../../base\";\nimport { AGraphicElementBase } from \"../graphicobject\";\nimport * as THREE from \"three\";\nexport let AThreeJSMeshGraphicBase = (_dec = ASerializable(\"AThreeJSMeshGraphicBase\"), _dec(_class = class AThreeJSMeshGraphicBase extends AGraphicElementBase {\n  constructor() {\n    super(...arguments);\n    this._geometry = void 0;\n    this._material = void 0;\n    this._element = void 0;\n  }\n  get mesh() {\n    return this._element;\n  }\n  get geometry() {\n    return this._geometry;\n  }\n  get material() {\n    return this._material;\n  }\n  get threejs() {\n    return this._element;\n  }\n  setMaterial(material) {\n    this._material = AGraphicElementBase._GetMaterialFromParam(material);\n    if (this._element) {\n      this.threejs.material = this._material;\n    }\n  }\n  init(geometry, material) {\n    if (geometry) {\n      this._geometry = geometry;\n    }\n    if (material) {\n      this._material = AGraphicElementBase._GetMaterialFromParam(material);\n    }\n    if (this._element) {\n      throw new Error(\"Tried calling init on graphic that already has an _element! Are you calling this twice?\");\n    }\n    this._element = new THREE.Mesh(this._geometry, this._material);\n    this._element.matrixAutoUpdate = false;\n  }\n}) || _class);\nexport let AThreeJSMeshGraphic = (_dec2 = ASerializable(\"AThreeJSMeshGraphic\"), _dec2(_class3 = class AThreeJSMeshGraphic extends AThreeJSMeshGraphicBase {\n  static Create(geometry, material) {\n    let graphic = new this();\n    graphic.init(geometry, material);\n    return graphic;\n  }\n}) || _class3);","map":{"version":3,"names":["ASerializable","AGraphicElementBase","THREE","AThreeJSMeshGraphicBase","_geometry","_material","_element","mesh","geometry","material","threejs","setMaterial","_GetMaterialFromParam","init","Error","Mesh","matrixAutoUpdate","AThreeJSMeshGraphic","Create","graphic"],"sources":["/Users/home/Desktop/College/Fall 2022/CS_4620/cs4620-final-project/src/anigraph/rendering/graphicelements/AThreeJSMeshGraphic.ts"],"sourcesContent":["import {ASerializable} from \"../../base\";\nimport {AGraphicElementBase} from \"../graphicobject\";\nimport * as THREE from \"three\";\nimport {Color} from \"../../math\";\nimport {AMaterial} from \"../material\";\n\n@ASerializable(\"AThreeJSMeshGraphicBase\")\nexport class AThreeJSMeshGraphicBase extends AGraphicElementBase {\n    _geometry!: THREE.BufferGeometry;\n    _material!: THREE.Material | THREE.Material[];\n    _element!: THREE.Mesh;\n\n    get mesh() {\n        return this._element;\n    }\n\n    get geometry(): THREE.BufferGeometry {\n        return this._geometry;\n    }\n\n    get material(): THREE.Material | THREE.Material[] {\n        return this._material;\n    }\n\n    get threejs(): THREE.Mesh {\n        return this._element;\n    }\n\n    setMaterial(material: Color | THREE.Color | THREE.Material | THREE.Material[] | AMaterial) {\n        this._material = AGraphicElementBase._GetMaterialFromParam(material);\n        if (this._element) {\n            this.threejs.material = this._material;\n        }\n    }\n\n    init(geometry?: THREE.BufferGeometry, material?: Color | THREE.Color | THREE.Material | THREE.Material[] | AMaterial) {\n        if(geometry) {\n            this._geometry = geometry;\n        }\n        if(material) {\n            this._material = AGraphicElementBase._GetMaterialFromParam(material);\n        }\n        if (this._element) {\n            throw new Error(\"Tried calling init on graphic that already has an _element! Are you calling this twice?\");\n        }\n        this._element = new THREE.Mesh(this._geometry, this._material);\n        this._element.matrixAutoUpdate=false;\n    }\n}\n\n@ASerializable(\"AThreeJSMeshGraphic\")\nexport class AThreeJSMeshGraphic extends AThreeJSMeshGraphicBase {\n\n    static Create(\n        geometry:THREE.BufferGeometry|any,\n        material:Color|THREE.Color|THREE.Material|THREE.Material[]|AMaterial,\n        ...args:any[]\n    ){\n        let graphic = new this();\n        graphic.init(geometry, material);\n        return graphic;\n    }\n}\n"],"mappings":";AAAA,SAAQA,aAAa,QAAO,YAAY;AACxC,SAAQC,mBAAmB,QAAO,kBAAkB;AACpD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAI9B,WACaC,uBAAuB,WADnCH,aAAa,CAAC,yBAAyB,CAAC,gBAAzC,MACaG,uBAAuB,SAASF,mBAAmB,CAAC;EAAA;IAAA;IAAA,KAC7DG,SAAS;IAAA,KACTC,SAAS;IAAA,KACTC,QAAQ;EAAA;EAER,IAAIC,IAAI,GAAG;IACP,OAAO,IAAI,CAACD,QAAQ;EACxB;EAEA,IAAIE,QAAQ,GAAyB;IACjC,OAAO,IAAI,CAACJ,SAAS;EACzB;EAEA,IAAIK,QAAQ,GAAsC;IAC9C,OAAO,IAAI,CAACJ,SAAS;EACzB;EAEA,IAAIK,OAAO,GAAe;IACtB,OAAO,IAAI,CAACJ,QAAQ;EACxB;EAEAK,WAAW,CAACF,QAA6E,EAAE;IACvF,IAAI,CAACJ,SAAS,GAAGJ,mBAAmB,CAACW,qBAAqB,CAACH,QAAQ,CAAC;IACpE,IAAI,IAAI,CAACH,QAAQ,EAAE;MACf,IAAI,CAACI,OAAO,CAACD,QAAQ,GAAG,IAAI,CAACJ,SAAS;IAC1C;EACJ;EAEAQ,IAAI,CAACL,QAA+B,EAAEC,QAA8E,EAAE;IAClH,IAAGD,QAAQ,EAAE;MACT,IAAI,CAACJ,SAAS,GAAGI,QAAQ;IAC7B;IACA,IAAGC,QAAQ,EAAE;MACT,IAAI,CAACJ,SAAS,GAAGJ,mBAAmB,CAACW,qBAAqB,CAACH,QAAQ,CAAC;IACxE;IACA,IAAI,IAAI,CAACH,QAAQ,EAAE;MACf,MAAM,IAAIQ,KAAK,CAAC,yFAAyF,CAAC;IAC9G;IACA,IAAI,CAACR,QAAQ,GAAG,IAAIJ,KAAK,CAACa,IAAI,CAAC,IAAI,CAACX,SAAS,EAAE,IAAI,CAACC,SAAS,CAAC;IAC9D,IAAI,CAACC,QAAQ,CAACU,gBAAgB,GAAC,KAAK;EACxC;AACJ,CAAC;AAED,WACaC,mBAAmB,YAD/BjB,aAAa,CAAC,qBAAqB,CAAC,kBAArC,MACaiB,mBAAmB,SAASd,uBAAuB,CAAC;EAE7D,OAAOe,MAAM,CACTV,QAAiC,EACjCC,QAAoE,EAEvE;IACG,IAAIU,OAAO,GAAG,IAAI,IAAI,EAAE;IACxBA,OAAO,CAACN,IAAI,CAACL,QAAQ,EAAEC,QAAQ,CAAC;IAChC,OAAOU,OAAO;EAClB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}