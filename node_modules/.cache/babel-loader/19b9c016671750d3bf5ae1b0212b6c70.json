{"ast":null,"code":"var _dec, _class, _class2;\nimport * as THREE from \"three\";\nimport tinycolor from \"tinycolor2\";\nimport { ASerializable } from \"../base\";\nimport { Random } from \"./Random\";\nimport { VectorBase } from \"./linalg/VectorBase\";\nimport { Vec4 } from \"./linalg/3D/Vec4\";\nexport let Color = (_dec = ASerializable(\"Color\"), _dec(_class = (_class2 = class Color extends VectorBase {\n  constructor() {\n    // common logic constructor\n    super(...arguments);\n  }\n  toString() {\n    return `Color(${this.r},${this.g},${this.b},${this.a})`;\n  }\n  get nDimensions() {\n    return 4;\n  }\n  asThreeJS() {\n    return new THREE.Color(this.r, this.g, this.b);\n  }\n  get rgba() {\n    if (this.elements.length === 4) {\n      return this.elements;\n    } else {\n      return [this.elements[0], this.elements[1], this.elements[2], 1.0];\n    }\n  }\n  get RGBuintAfloat() {\n    return {\n      r: this.elements[0] * 256,\n      g: this.elements[1] * 256,\n      b: this.elements[2] * 256,\n      a: this.a\n    };\n  }\n  static FromRGBuintAfloat(r, g, b, a) {\n    let c = new Color(0, 0, 0);\n    c.setRGBuintAfloat(r, g, b, a);\n    return c;\n  }\n  setRGBuintAfloat() {\n    let rgba = [0, 0, 0, 0];\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (typeof args[0] == \"number\") {\n      rgba[0] = args[0];\n      rgba[1] = args[1];\n      rgba[2] = args[2];\n      rgba[3] = args[3];\n    } else {\n      let r = args[0];\n      rgba = [r.r, r.g, r.b, r.a];\n    }\n    this.elements[0] = rgba[0] / 256;\n    this.elements[1] = rgba[1] / 256;\n    this.elements[2] = rgba[2] / 256;\n    if (this.elements.length < 4) {\n      this.elements.push(rgba[3]);\n    } else {\n      this.elements[3] = rgba[3];\n    }\n  }\n\n  /** Get set r */\n  set r(value) {\n    this.elements[0] = value;\n  }\n  get r() {\n    return this.elements[0];\n  }\n\n  /** Get set g */\n  set g(value) {\n    this.elements[1] = value;\n  }\n  get g() {\n    return this.elements[1];\n  }\n\n  /** Get set b */\n  set b(value) {\n    this.elements[2] = value;\n  }\n  get b() {\n    return this.elements[2];\n  }\n\n  /** Get set a */\n  set a(value) {\n    if (this.elements.length === 3) {\n      this.elements.push(value);\n    } else {\n      this.elements[3] = value;\n    }\n  }\n  get a() {\n    if (this.elements.length > 3) {\n      return this.elements[3];\n    } else {\n      return 1.0;\n    }\n  }\n  _setToDefault() {\n    this.elements = [0.5, 0.5, 0.5];\n  }\n  static RandomRGBA() {\n    return new Color(Math.random(), Math.random(), Math.random(), Math.random());\n  }\n\n  // static FromRGBA(r:number|number[],g?:number,b?:number,a:number=1){\n\n  static FromRGBA() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    let rgba = args;\n    if (Array.isArray(args[0])) {\n      rgba = rgba[0];\n    }\n    return new Color(rgba[0], rgba[1], rgba[2], rgba.length > 3 ? rgba[3] : 1);\n  }\n  static FromTHREEVector4(vector4) {\n    return new Color(vector4.x, vector4.y, vector4.z, vector4.w);\n  }\n  static Random() {\n    var r = new this(Random.floatArray(3));\n    return r;\n  }\n  static FromThreeJS(threecolor) {\n    return new this(threecolor.r, threecolor.g, threecolor.b);\n  }\n  static FromTinyColor(tc) {\n    let rgba = tc.toRgb();\n    if (rgba.a === 1) {\n      return new Color(rgba.r / 255, rgba.g / 255, rgba.b / 255);\n    } else {\n      return new Color(rgba.r / 255, rgba.g / 255, rgba.b / 255, rgba.a);\n    }\n  }\n  sstring() {\n    return `[${this.r},${this.g},${this.b}]`;\n  }\n  toHexString() {\n    return this._tinycolor().toHexString();\n  }\n  toHex() {\n    return parseInt(this._tinycolor().toHex(), 16);\n  }\n  get Vec4() {\n    return new Vec4(this.r, this.g, this.b, this.a);\n  }\n\n  /**\n   * Get new color with spun hue\n   * @param degrees\n   * @returns {Color}\n   * @constructor\n   */\n  Spun(angle) {\n    let spuntc = this._tinycolor().spin(angle * 180 / Math.PI);\n    let rval = Color.FromTinyColor(spuntc);\n    return rval;\n  }\n  Desaturate(percent) {\n    let dst = this._tinycolor().desaturate(percent);\n    let rval = Color.FromTinyColor(dst);\n    return rval;\n  }\n  Darken(percent) {\n    let dst = this._tinycolor().darken(percent);\n    let rval = Color.FromTinyColor(dst);\n    return rval;\n  }\n  static FromHSVA(h, s, v, a) {\n    var rgbob = tinycolor(`hsv(${parseInt(String(h * 100))}%, ${parseInt(String(s * 100))}%, ${parseInt(String(v * 100))}%)`).toRgb();\n    if (a !== undefined) {\n      return new Color(rgbob.r / 255, rgbob.g / 255, rgbob.b / 255, a);\n    } else {\n      return new Color(rgbob.r / 255, rgbob.g / 255, rgbob.b / 255);\n    }\n  }\n  static FromString(colorString, alpha) {\n    var tcolor = tinycolor(colorString).toRgb();\n    return new Color(tcolor.r / 256, tcolor.g / 256, tcolor.b / 256, alpha !== null && alpha !== void 0 ? alpha : tcolor.a);\n  }\n  static ThreeJS(r, g, b) {\n    if (typeof r === \"string\") {\n      let c = Color.FromString(r);\n      return new THREE.Color(c.r, c.b, c.g);\n    }\n    if (g === undefined || b === undefined) {\n      return new THREE.Color(r);\n    } else {\n      return new THREE.Color(r, g, b);\n    }\n  }\n  _tinycolor() {\n    return tinycolor({\n      r: parseInt(String(this.r * 255)),\n      g: parseInt(String(this.g * 255)),\n      b: parseInt(String(this.b * 255)),\n      a: this.a\n    });\n  }\n  toRGBAString() {\n    return this._tinycolor().toRgbString();\n  }\n}, _class2.N_DIMENSIONS = 4, _class2)) || _class);","map":{"version":3,"names":["THREE","tinycolor","ASerializable","Random","VectorBase","Vec4","Color","constructor","toString","r","g","b","a","nDimensions","asThreeJS","rgba","elements","length","RGBuintAfloat","FromRGBuintAfloat","c","setRGBuintAfloat","args","push","value","_setToDefault","RandomRGBA","Math","random","FromRGBA","Array","isArray","FromTHREEVector4","vector4","x","y","z","w","floatArray","FromThreeJS","threecolor","FromTinyColor","tc","toRgb","sstring","toHexString","_tinycolor","toHex","parseInt","Spun","angle","spuntc","spin","PI","rval","Desaturate","percent","dst","desaturate","Darken","darken","FromHSVA","h","s","v","rgbob","String","undefined","FromString","colorString","alpha","tcolor","ThreeJS","toRGBAString","toRgbString","N_DIMENSIONS"],"sources":["/Users/home/Desktop/cs4620-final-project/src/anigraph/math/Color.ts"],"sourcesContent":["import * as THREE from \"three\";\nimport tinycolor from \"tinycolor2\";\nimport { ASerializable } from \"../base\";\nimport { Random } from \"./Random\";\nimport { VectorBase} from \"./linalg/VectorBase\";\nimport {Vec4} from \"./linalg/3D/Vec4\";\n\ninterface TinyColor {\n  toRgb(): tinycolor.ColorFormats.RGBA;\n}\n\n@ASerializable(\"Color\")\nexport class Color extends VectorBase {\n  static N_DIMENSIONS: number = 4;\n\n  public constructor(r: number, g: number, b: number, a?: number);\n  public constructor(rgb: Array<number>);\n  public constructor(...args: Array<any>) {\n    // common logic constructor\n    super(...args);\n  }\n\n  toString() {\n    return `Color(${this.r},${this.g},${this.b},${this.a})`;\n  }\n\n  get nDimensions() {\n    return 4;\n  }\n\n  public asThreeJS() {\n    return new THREE.Color(this.r, this.g, this.b);\n  }\n\n  get rgba() {\n    if (this.elements.length === 4) {\n      return this.elements;\n    } else {\n      return [this.elements[0], this.elements[1], this.elements[2], 1.0];\n    }\n  }\n  get RGBuintAfloat() {\n    return {\n      r: this.elements[0] * 256,\n      g: this.elements[1] * 256,\n      b: this.elements[2] * 256,\n      a: this.a,\n    };\n  }\n\n  static FromRGBuintAfloat(\n    r: number | { [name: string]: number },\n    g?: number,\n    b?: number,\n    a?: number\n  ) {\n    let c = new Color(0, 0, 0);\n    c.setRGBuintAfloat(r, g, b, a);\n    return c;\n  }\n\n  setRGBuintAfloat(\n    r: number | { [name: string]: number },\n    g?: number,\n    b?: number,\n    a?: number\n  ): void;\n  setRGBuintAfloat(...args: any[]) {\n    let rgba = [0, 0, 0, 0];\n    if (typeof args[0] == \"number\") {\n      rgba[0] = args[0];\n      rgba[1] = args[1];\n      rgba[2] = args[2];\n      rgba[3] = args[3];\n    } else {\n      let r = args[0] as unknown as { [name: string]: number };\n      rgba = [r.r, r.g, r.b, r.a];\n    }\n    this.elements[0] = rgba[0] / 256;\n    this.elements[1] = rgba[1] / 256;\n    this.elements[2] = rgba[2] / 256;\n    if (this.elements.length < 4) {\n      this.elements.push(rgba[3]);\n    } else {\n      this.elements[3] = rgba[3];\n    }\n  }\n\n  /** Get set r */\n  set r(value) {\n    this.elements[0] = value;\n  }\n\n  get r() {\n    return this.elements[0];\n  }\n\n  /** Get set g */\n  set g(value) {\n    this.elements[1] = value;\n  }\n\n  get g() {\n    return this.elements[1];\n  }\n\n  /** Get set b */\n  set b(value) {\n    this.elements[2] = value;\n  }\n\n  get b() {\n    return this.elements[2];\n  }\n\n  /** Get set a */\n  set a(value) {\n    if(this.elements.length===3){\n      this.elements.push(value);\n    }else {\n      this.elements[3] = value;\n    }\n  }\n\n  get a() {\n    if (this.elements.length > 3) {\n      return this.elements[3];\n    } else {\n      return 1.0;\n    }\n  }\n\n  _setToDefault() {\n    this.elements = [0.5, 0.5, 0.5];\n  }\n\n  static RandomRGBA() {\n    return new Color(\n      Math.random(),\n      Math.random(),\n      Math.random(),\n      Math.random()\n    );\n  }\n\n  // static FromRGBA(r:number|number[],g?:number,b?:number,a:number=1){\n  static FromRGBA(r: number, g: number, b: number, a?: number): Color;\n  static FromRGBA(rbga: number[]): Color;\n  static FromRGBA(...args: any[]) {\n    let rgba = args;\n    if (Array.isArray(args[0])) {\n      rgba = rgba[0];\n    }\n    return new Color(rgba[0], rgba[1], rgba[2], rgba.length > 3 ? rgba[3] : 1);\n  }\n\n  static FromTHREEVector4(vector4: THREE.Vector4) {\n    return new Color(vector4.x, vector4.y, vector4.z, vector4.w);\n  }\n\n  static Random() {\n    var r = new this(Random.floatArray(3));\n    return r;\n  }\n\n  static FromThreeJS(threecolor: THREE.Color) {\n    return new this(threecolor.r, threecolor.g, threecolor.b);\n  }\n\n  static FromTinyColor(tc: TinyColor) {\n    let rgba = tc.toRgb();\n    if (rgba.a === 1) {\n      return new Color(rgba.r / 255, rgba.g / 255, rgba.b / 255);\n    } else {\n      return new Color(rgba.r / 255, rgba.g / 255, rgba.b / 255, rgba.a);\n    }\n  }\n\n  sstring() {\n    return `[${this.r},${this.g},${this.b}]`;\n  }\n\n  toHexString() {\n    return this._tinycolor().toHexString();\n  }\n\n  toHex() {\n    return parseInt(this._tinycolor().toHex(), 16);\n  }\n\n  get Vec4() {\n    return new Vec4(this.r, this.g, this.b, this.a);\n  }\n\n  /**\n   * Get new color with spun hue\n   * @param degrees\n   * @returns {Color}\n   * @constructor\n   */\n  Spun(angle: number): Color {\n    let spuntc = this._tinycolor().spin((angle * 180) / Math.PI);\n    let rval = Color.FromTinyColor(spuntc);\n    return rval;\n  }\n\n  Desaturate(percent: number): Color {\n    let dst = this._tinycolor().desaturate(percent);\n    let rval = Color.FromTinyColor(dst);\n    return rval;\n  }\n\n  Darken(percent: number): Color {\n    let dst = this._tinycolor().darken(percent);\n    let rval = Color.FromTinyColor(dst);\n    return rval;\n  }\n\n  static FromHSVA(h: number, s: number, v: number, a?: number) {\n    var rgbob = tinycolor(\n      `hsv(${parseInt(String(h * 100))}%, ${parseInt(\n        String(s * 100)\n      )}%, ${parseInt(String(v * 100))}%)`\n    ).toRgb();\n    if (a !== undefined) {\n      return new Color(rgbob.r / 255, rgbob.g / 255, rgbob.b / 255, a);\n    } else {\n      return new Color(rgbob.r / 255, rgbob.g / 255, rgbob.b / 255);\n    }\n  }\n\n  static FromString(colorString: string, alpha?: number) {\n    var tcolor = tinycolor(colorString).toRgb();\n    return new Color(\n      tcolor.r / 256,\n      tcolor.g / 256,\n      tcolor.b / 256,\n      alpha ?? tcolor.a\n    );\n  }\n\n  static ThreeJS(hexstring: string): THREE.Color;\n  static ThreeJS(hex: number): THREE.Color;\n  static ThreeJS(r: number | string, g?: number, b?: number): THREE.Color {\n    if (typeof r === \"string\") {\n      let c = Color.FromString(r);\n      return new THREE.Color(c.r, c.b, c.g);\n    }\n    if (g === undefined || b === undefined) {\n      return new THREE.Color(r);\n    } else {\n      return new THREE.Color(r, g, b);\n    }\n  }\n\n  _tinycolor() {\n    return tinycolor({\n      r: parseInt(String(this.r * 255)),\n      g: parseInt(String(this.g * 255)),\n      b: parseInt(String(this.b * 255)),\n      a: this.a,\n    });\n  }\n\n  toRGBAString() {\n    return this._tinycolor().toRgbString();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}