{"ast":null,"code":"import { ABasicTexturedShaderModel } from \"../../../../anigraph/rendering/shadermodels/ABasicTexturedShaderModel\";\nexport class TerrainShaderModel extends ABasicTexturedShaderModel {\n  CreateMaterial(diffuseTexture, heightTexture) {\n    let texCoordScale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10.0;\n    /**\n     * create the material instance\n     */\n    let mat = super.CreateMaterial();\n\n    /**\n     * set its diffuse texture\n     * When you set a texture named \"__texname__\", you can then reference it in the shader by declaring the uniforms:\n     * ```\n     * uniform sampler2D __texname__Map;\n     * uniform bool __texname__MapProvided;\n     * ```\n     * The first is what you use to access the texture in the shader, and the second is a boolean that tells you\n     * whether the corresponding texture has been provided to the shader / is available\n     * And its\n     */\n    mat.setTexture('diffuse', diffuseTexture);\n\n    /**\n     * To set a regular uniform, use setUniform\n     */\n    mat.setUniform(\"texCoordScale\", texCoordScale);\n\n    /**\n     * Adding a terrain height scale slider. Be careful not to pick a name already used elsewhere in the shader!\n     */\n    // AddSliderUniform(mat, \"terrainHeightScale\", 0.2, -1,1,0.01);\n\n    /**\n     * If a height texture was provided, we will bind it to the shader as well\n     */\n    if (heightTexture) {\n      mat.setTexture('height', heightTexture);\n    }\n    return mat;\n  }\n}","map":{"version":3,"names":["ABasicTexturedShaderModel","TerrainShaderModel","CreateMaterial","diffuseTexture","heightTexture","texCoordScale","mat","setTexture","setUniform"],"sources":["/Users/home/Desktop/cs4620-final-project/src/app/main/Nodes/Terrain/TerrainShaderModel.ts"],"sourcesContent":["import {ATexture} from \"../../../../anigraph/rendering/ATexture\";\nimport {ABasicTexturedShaderModel} from \"../../../../anigraph/rendering/shadermodels/ABasicTexturedShaderModel\";\nimport {AShaderMaterial, GetAppState} from \"../../../../anigraph\";\nimport {AddSliderUniform} from \"../../MainAppState\";\n\n\n\nexport class TerrainShaderModel extends ABasicTexturedShaderModel{\n    CreateMaterial(\n        diffuseTexture:ATexture,\n        heightTexture?:ATexture,\n        texCoordScale:number=10.0,\n        ...args:any[]){\n\n        /**\n         * create the material instance\n         */\n        let mat = super.CreateMaterial();\n\n        /**\n         * set its diffuse texture\n         * When you set a texture named \"__texname__\", you can then reference it in the shader by declaring the uniforms:\n         * ```\n         * uniform sampler2D __texname__Map;\n         * uniform bool __texname__MapProvided;\n         * ```\n         * The first is what you use to access the texture in the shader, and the second is a boolean that tells you\n         * whether the corresponding texture has been provided to the shader / is available\n         * And its\n         */\n        mat.setTexture('diffuse', diffuseTexture);\n\n        /**\n         * To set a regular uniform, use setUniform\n         */\n        mat.setUniform(\"texCoordScale\", texCoordScale)\n\n        /**\n         * Adding a terrain height scale slider. Be careful not to pick a name already used elsewhere in the shader!\n         */\n        // AddSliderUniform(mat, \"terrainHeightScale\", 0.2, -1,1,0.01);\n\n        /**\n         * If a height texture was provided, we will bind it to the shader as well\n         */\n        if(heightTexture){\n            mat.setTexture('height', heightTexture)\n        }\n        return mat;\n    }\n}\n"],"mappings":"AACA,SAAQA,yBAAyB,QAAO,uEAAuE;AAM/G,OAAO,MAAMC,kBAAkB,SAASD,yBAAyB;EAC7DE,cAAc,CACVC,cAAuB,EACvBC,aAAuB,EAET;IAAA,IADdC,aAAoB,uEAAC,IAAI;IAGzB;AACR;AACA;IACQ,IAAIC,GAAG,GAAG,KAAK,CAACJ,cAAc,EAAE;;IAEhC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQI,GAAG,CAACC,UAAU,CAAC,SAAS,EAAEJ,cAAc,CAAC;;IAEzC;AACR;AACA;IACQG,GAAG,CAACE,UAAU,CAAC,eAAe,EAAEH,aAAa,CAAC;;IAE9C;AACR;AACA;IACQ;;IAEA;AACR;AACA;IACQ,IAAGD,aAAa,EAAC;MACbE,GAAG,CAACC,UAAU,CAAC,QAAQ,EAAEH,aAAa,CAAC;IAC3C;IACA,OAAOE,GAAG;EACd;AACJ"},"metadata":{},"sourceType":"module"}