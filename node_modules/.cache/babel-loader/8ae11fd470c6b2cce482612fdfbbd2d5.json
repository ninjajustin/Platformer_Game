{"ast":null,"code":"var _dec, _class;\nimport { ASerializable } from \"../../base\";\nimport { ASceneInteractionMode } from \"./ASceneInteractionMode\";\nimport { NodeTransform3D, Quaternion, Vec3 } from \"../../math\";\nexport let ADebugInteractionMode = (_dec = ASerializable(\"ADebugInteractionMode\"), _dec(_class = class ADebugInteractionMode extends ASceneInteractionMode {\n  constructor(owner, name, interactionCallbacks) {\n    for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      args[_key - 3] = arguments[_key];\n    }\n    super(name, owner, interactionCallbacks, ...args);\n    this.cameraMovementSpeed = 0.02;\n    this.cameraOrbitSpeed = 1;\n    this.cameraOrbitCenter = void 0;\n    this.cameraOrbitCenter = new Vec3();\n  }\n\n  /**\n   * Create an instance in a single call, instead of calling new followed by init\n   * @param owner\n   * @param args\n   * @returns {ASceneInteractionMode}\n   * @constructor\n   */\n  static Create(owner) {\n    let controls = new this();\n    controls.init(owner);\n    return controls;\n  }\n  onWheelMove(event, interaction) {\n    let zoom = event.DOMEvent.deltaY;\n    let movedir = this.camera.pose.rotation.getLocalZ();\n    this.camera.pose.position = this.camera.pose.position.plus(movedir.times(0.0005 * zoom));\n  }\n  onMouseMove(event, interaction) {}\n  onKeyDown(event, interaction) {\n    if (interaction.keysDownState['w']) {\n      this.camera.pose.position = this.camera.pose.position.plus(this.camera.forward.times(this.cameraMovementSpeed));\n    }\n    if (interaction.keysDownState['a']) {\n      this.camera.pose.position = this.camera.pose.position.plus(this.camera.right.times(-this.cameraMovementSpeed));\n    }\n    if (interaction.keysDownState['s']) {\n      this.camera.pose.position = this.camera.pose.position.plus(this.camera.forward.times(-this.cameraMovementSpeed));\n    }\n    if (interaction.keysDownState['d']) {\n      this.camera.pose.position = this.camera.pose.position.plus(this.camera.right.times(this.cameraMovementSpeed));\n    }\n    if (interaction.keysDownState['r']) {\n      this.camera.pose.position = this.camera.pose.position.plus(this.camera.up.times(this.cameraMovementSpeed));\n    }\n    if (interaction.keysDownState['f']) {\n      this.camera.pose.position = this.camera.pose.position.plus(this.camera.up.times(-this.cameraMovementSpeed));\n    }\n  }\n  onKeyUp(event, interaction) {\n    if (!interaction.keysDownState['w']) {}\n    if (!interaction.keysDownState['a']) {}\n    if (!interaction.keysDownState['s']) {}\n    if (!interaction.keysDownState['d']) {}\n    if (!interaction.keysDownState['r']) {}\n    if (!interaction.keysDownState['f']) {}\n  }\n  onDragStart(event, interaction) {\n    interaction.setInteractionState('lastCursor', event.ndcCursor);\n  }\n  onDragMove(event, interaction) {\n    if (!event.ndcCursor) {\n      return;\n    }\n    let mouseMovement = event.ndcCursor.minus(interaction.getInteractionState('lastCursor'));\n    interaction.setInteractionState('lastCursor', event.ndcCursor);\n    let rotationX = -mouseMovement.x * this.cameraOrbitSpeed;\n    let rotationY = mouseMovement.y * this.cameraOrbitSpeed;\n    let qX = Quaternion.FromAxisAngle(this.camera.up, rotationX);\n    let qY = Quaternion.FromAxisAngle(this.camera.right, rotationY);\n    let newPose = this.camera.pose.clone();\n    newPose = new NodeTransform3D(qX.appliedTo(newPose.position), newPose.rotation.times(qX));\n    newPose = new NodeTransform3D(qY.appliedTo(newPose.position), newPose.rotation.times(qY));\n    this.cameraModel.setPose(newPose);\n    this.cameraModel.signalTransformUpdate();\n  }\n  onDragEnd(event, interaction) {\n    let cursorWorldCoordinates = event.ndcCursor;\n    let dragStartWorldCoordinates = interaction.dragStartEvent.ndcCursor;\n  }\n}) || _class);","map":{"version":3,"names":["ASerializable","ASceneInteractionMode","NodeTransform3D","Quaternion","Vec3","ADebugInteractionMode","constructor","owner","name","interactionCallbacks","args","cameraMovementSpeed","cameraOrbitSpeed","cameraOrbitCenter","Create","controls","init","onWheelMove","event","interaction","zoom","DOMEvent","deltaY","movedir","camera","pose","rotation","getLocalZ","position","plus","times","onMouseMove","onKeyDown","keysDownState","forward","right","up","onKeyUp","onDragStart","setInteractionState","ndcCursor","onDragMove","mouseMovement","minus","getInteractionState","rotationX","x","rotationY","y","qX","FromAxisAngle","qY","newPose","clone","appliedTo","cameraModel","setPose","signalTransformUpdate","onDragEnd","cursorWorldCoordinates","dragStartWorldCoordinates","dragStartEvent"],"sources":["/Users/home/Desktop/cs4620-final-project/src/anigraph/scene/interactionmodes/ADebugInteractionMode.ts"],"sourcesContent":["import {\n    ASerializable\n} from \"../../base\";\nimport {ADOMPointerMoveInteraction, ADragInteraction,\n    AInteractionEvent,\n    AKeyboardInteraction\n} from \"../../interaction\";\nimport {ASceneController} from \"../ASceneController\";\nimport {AWheelInteraction} from \"../../interaction/AWheelInteraction\";\nimport {ASceneInteractionMode} from \"./ASceneInteractionMode\";\nimport {NodeTransform3D, Quaternion, Vec2, Vec3} from \"../../math\";\n\nimport type {HasInteractionModeCallbacks} from \"../../interaction\";\n\n@ASerializable(\"ADebugInteractionMode\")\nexport class ADebugInteractionMode extends ASceneInteractionMode{\n    cameraMovementSpeed:number=0.02;\n    cameraOrbitSpeed:number=1;\n    cameraOrbitCenter:Vec3;\n\n\n    constructor(owner?:ASceneController,\n                name?:string,\n                interactionCallbacks?:HasInteractionModeCallbacks,\n                ...args:any[]) {\n        super(name, owner, interactionCallbacks, ...args);\n        this.cameraOrbitCenter = new Vec3();\n    }\n\n    /**\n     * Create an instance in a single call, instead of calling new followed by init\n     * @param owner\n     * @param args\n     * @returns {ASceneInteractionMode}\n     * @constructor\n     */\n    static Create(owner: ASceneController, ...args: any[]) {\n        let controls = new this();\n        controls.init(owner);\n        return controls;\n    }\n\n    onWheelMove(event: AInteractionEvent, interaction: AWheelInteraction) {\n        let zoom = (event.DOMEvent as WheelEvent).deltaY;\n        let movedir = this.camera.pose.rotation.getLocalZ();\n        this.camera.pose.position = this.camera.pose.position.plus( movedir.times(0.0005 * zoom));\n    }\n\n    onMouseMove(event:AInteractionEvent, interaction: ADOMPointerMoveInteraction){\n\n    }\n\n    onKeyDown(event:AInteractionEvent, interaction:AKeyboardInteraction){\n        if(interaction.keysDownState['w']){\n            this.camera.pose.position = this.camera.pose.position.plus(this.camera.forward.times(this.cameraMovementSpeed));\n        }\n        if(interaction.keysDownState['a']){\n            this.camera.pose.position = this.camera.pose.position.plus(this.camera.right.times(-this.cameraMovementSpeed));\n        }\n        if(interaction.keysDownState['s']){\n            this.camera.pose.position = this.camera.pose.position.plus(this.camera.forward.times(-this.cameraMovementSpeed));\n        }\n        if(interaction.keysDownState['d']){\n            this.camera.pose.position = this.camera.pose.position.plus(this.camera.right.times(this.cameraMovementSpeed));\n        }\n        if(interaction.keysDownState['r']){\n            this.camera.pose.position = this.camera.pose.position.plus(this.camera.up.times(this.cameraMovementSpeed));\n        }\n        if(interaction.keysDownState['f']){\n            this.camera.pose.position = this.camera.pose.position.plus(this.camera.up.times(-this.cameraMovementSpeed));\n        }\n    }\n\n    onKeyUp(event:AInteractionEvent, interaction:AKeyboardInteraction){\n        if(!interaction.keysDownState['w']){\n        }\n        if(!interaction.keysDownState['a']){\n        }\n        if(!interaction.keysDownState['s']){\n        }\n        if(!interaction.keysDownState['d']){\n        }\n        if(!interaction.keysDownState['r']){\n        }\n        if(!interaction.keysDownState['f']){\n        }\n    }\n\n    onDragStart(event: AInteractionEvent, interaction: ADragInteraction): void {\n        interaction.setInteractionState('lastCursor', event.ndcCursor);\n    }\n    onDragMove(event: AInteractionEvent, interaction: ADragInteraction): void {\n        if(!event.ndcCursor){\n            return;\n        }\n        let mouseMovement = event.ndcCursor.minus(interaction.getInteractionState('lastCursor'));\n        interaction.setInteractionState('lastCursor', event.ndcCursor);\n        let rotationX = -mouseMovement.x*this.cameraOrbitSpeed;\n        let rotationY = mouseMovement.y*this.cameraOrbitSpeed;\n        let qX = Quaternion.FromAxisAngle(this.camera.up, rotationX);\n        let qY = Quaternion.FromAxisAngle(this.camera.right, rotationY);\n        let newPose = this.camera.pose.clone();\n        newPose = new NodeTransform3D(qX.appliedTo(newPose.position), newPose.rotation.times(qX));\n        newPose = new NodeTransform3D(qY.appliedTo(newPose.position), newPose.rotation.times(qY));\n        this.cameraModel.setPose(newPose);\n        this.cameraModel.signalTransformUpdate();\n    }\n    onDragEnd(event: AInteractionEvent, interaction: ADragInteraction): void {\n        let cursorWorldCoordinates:Vec2|null = event.ndcCursor;\n        let dragStartWorldCoordinates:Vec2|null = interaction.dragStartEvent.ndcCursor;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}